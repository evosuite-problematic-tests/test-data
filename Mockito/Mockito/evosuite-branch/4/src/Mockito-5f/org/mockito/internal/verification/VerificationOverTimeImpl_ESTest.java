/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 06 17:22:06 GMT 2019
 */

package org.mockito.internal.verification;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.util.Timer;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.NoMoreInteractions;
import org.mockito.internal.verification.VerificationDataImpl;
import org.mockito.internal.verification.VerificationOverTimeImpl;
import org.mockito.internal.verification.api.VerificationData;
import org.mockito.verification.After;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VerificationOverTimeImpl_ESTest extends VerificationOverTimeImpl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AtMost atMost0 = new AtMost(1024);
      Timer timer0 = new Timer(1024);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-479L), atMost0, true, timer0);
      long long0 = verificationOverTimeImpl0.getDuration();
      assertEquals((-479L), long0);
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      AtMost atMost0 = new AtMost(1024);
      Timer timer0 = new Timer(1024);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-479L), atMost0, true, timer0);
      verificationOverTimeImpl0.getDelegate();
      assertEquals((-479L), verificationOverTimeImpl0.getDuration());
      assertEquals(0L, verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, (-1366L), (VerificationMode) null, false);
      long long0 = verificationOverTimeImpl0.getPollingPeriod();
      assertEquals((-1366L), verificationOverTimeImpl0.getDuration());
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      AtMost atMost0 = new AtMost(811);
      After after0 = new After((-140L), atMost0);
      Timer timer0 = new Timer(811);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-140L), (-140L), after0, true, timer0);
      verificationOverTimeImpl0.verify((VerificationData) null);
      assertEquals((-140L), verificationOverTimeImpl0.getDuration());
      assertEquals((-140L), verificationOverTimeImpl0.getPollingPeriod());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      After after0 = new After((-251L), noMoreInteractions0);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, false);
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      MockSettingsImpl<String> mockSettingsImpl0 = new MockSettingsImpl<String>();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0, mockSettingsImpl0);
      VerificationDataImpl verificationDataImpl0 = new VerificationDataImpl(invocationContainerImpl0, (InvocationMatcher) null);
      // Undeclared exception!
      verificationOverTimeImpl0.verify(verificationDataImpl0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      AtMost atMost0 = new AtMost(811);
      After after0 = new After((-140L), atMost0);
      Timer timer0 = new Timer(811);
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-140L), (-140L), after0, true, timer0);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
      assertEquals((-140L), verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
      assertEquals((-140L), verificationOverTimeImpl0.getDuration());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), 503L, noMoreInteractions0, false, (Timer) null);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
      assertEquals(503L, verificationOverTimeImpl0.getDuration());
      assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(743L, 10L, (VerificationMode) null, false);
      boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
      assertTrue(boolean0);
      assertEquals(10L, verificationOverTimeImpl0.getDuration());
      assertEquals(743L, verificationOverTimeImpl0.getPollingPeriod());
  }
}
