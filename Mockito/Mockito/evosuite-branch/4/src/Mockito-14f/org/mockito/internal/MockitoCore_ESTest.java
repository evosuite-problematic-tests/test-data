/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 06 17:41:42 GMT 2019
 */

package org.mockito.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mockito.MockSettings;
import org.mockito.internal.MockitoCore;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.invocation.Invocation;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.ConsecutiveStubbing;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.verification.AtMost;
import org.mockito.internal.verification.InOrderContextImpl;
import org.mockito.internal.verification.Times;
import org.mockito.stubbing.Stubber;
import org.mockito.stubbing.answers.ReturnsElementsOf;
import org.mockito.verification.VerificationMode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MockitoCore_ESTest extends MockitoCore_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.stubVoid((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      LinkedList<MockSettingsImpl> linkedList0 = new LinkedList<MockSettingsImpl>();
      ReturnsElementsOf returnsElementsOf0 = new ReturnsElementsOf(linkedList0);
      Stubber stubber0 = mockitoCore0.doAnswer(returnsElementsOf0);
      assertNotNull(stubber0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      LinkedList<Object> linkedList0 = new LinkedList<Object>();
      InOrderContextImpl inOrderContextImpl0 = new InOrderContextImpl();
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractionsInOrder(linkedList0, inOrderContextImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Class<MockSettingsImpl> class0 = MockSettingsImpl.class;
      // Undeclared exception!
      try { 
        mockitoCore0.mock(class0, (MockSettings) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.util.MockUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.when((Integer) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.getLastInvocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.MockitoCore", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      mockitoCore0.validateMockitoUsage();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0);
      ConsecutiveStubbing<MockSettingsImpl> consecutiveStubbing0 = new ConsecutiveStubbing<MockSettingsImpl>(invocationContainerImpl0);
      MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "p/}Cd>NtR|Yi=##");
      // Undeclared exception!
      try { 
        mockitoCore0.stub(mockSettingsImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0);
      ConsecutiveStubbing<MockSettingsImpl> consecutiveStubbing0 = new ConsecutiveStubbing<MockSettingsImpl>(invocationContainerImpl0);
      AtMost atMost0 = new AtMost(1676);
      // Undeclared exception!
      try { 
        mockitoCore0.verify((Object) consecutiveStubbing0, (VerificationMode) atMost0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Times times0 = new Times(3);
      // Undeclared exception!
      try { 
        mockitoCore0.verify((String) null, (VerificationMode) times0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Invocation[] invocationArray0 = new Invocation[0];
      mockitoCore0.reset(invocationArray0);
      assertEquals(0, invocationArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        mockitoCore0.reset(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Object[] objectArray0 = new Object[1];
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) mockitoCore0;
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions((Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder((Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[2];
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockitoCore0;
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }
}
