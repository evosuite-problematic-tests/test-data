/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 17:38:22 GMT 2018
 */

package org.mockito.internal;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.annotation.Annotation;
import java.lang.reflect.Array;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.MockSettings;
import org.mockito.internal.MockitoCore;
import org.mockito.internal.creation.MockSettingsImpl;
import org.mockito.internal.progress.ThreadSafeMockingProgress;
import org.mockito.internal.stubbing.InvocationContainerImpl;
import org.mockito.internal.stubbing.OngoingStubbingImpl;
import org.mockito.internal.verification.AtLeast;
import org.mockito.internal.verification.Times;
import org.mockito.internal.verification.api.VerificationMode;
import org.mockito.stubbing.Answer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MockitoCore_ESTest extends MockitoCore_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.stubVoid((MockSettingsImpl) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
      // Undeclared exception!
      try { 
        mockitoCore0.stub(mockSettingsImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      mockitoCore0.doAnswer((Answer) null);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.getLastInvocation();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.MockitoCore", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.validateMockitoUsage();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Class<String> class0 = String.class;
      MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
      // Undeclared exception!
      try { 
        mockitoCore0.mock(class0, (MockSettings) mockSettingsImpl0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Class<Integer> class0 = Integer.class;
      MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
      // Undeclared exception!
      try { 
        mockitoCore0.mock(class0, (MockSettings) mockSettingsImpl0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      ThreadSafeMockingProgress threadSafeMockingProgress0 = new ThreadSafeMockingProgress();
      InvocationContainerImpl invocationContainerImpl0 = new InvocationContainerImpl(threadSafeMockingProgress0);
      OngoingStubbingImpl<OngoingStubbingImpl<Annotation>> ongoingStubbingImpl0 = new OngoingStubbingImpl<OngoingStubbingImpl<Annotation>>(invocationContainerImpl0);
      // Undeclared exception!
      try { 
        mockitoCore0.when(ongoingStubbingImpl0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object object0 = new Object();
      AtLeast atLeast0 = new AtLeast(0);
      // Undeclared exception!
      try { 
        mockitoCore0.verify(object0, (VerificationMode) atLeast0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Times times0 = new Times(0);
      // Undeclared exception!
      try { 
        mockitoCore0.verify((String) null, (VerificationMode) times0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Integer[] integerArray0 = new Integer[0];
      mockitoCore0.reset(integerArray0);
      assertEquals(0, integerArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      OngoingStubbingImpl<Integer>[] ongoingStubbingImplArray0 = (OngoingStubbingImpl<Integer>[]) Array.newInstance(OngoingStubbingImpl.class, 2);
      // Undeclared exception!
      try { 
        mockitoCore0.reset(ongoingStubbingImplArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockitoCore0;
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions((Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder((Object[]) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      MockitoCore mockitoCore0 = new MockitoCore();
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) mockitoCore0;
      // Undeclared exception!
      try { 
        mockitoCore0.inOrder(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }
}
