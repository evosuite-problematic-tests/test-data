/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 17:36:37 GMT 2018
 */

package org.mockito;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.hamcrest.core.IsAnything;
import org.hamcrest.text.IsEmptyString;
import org.junit.runner.RunWith;
import org.mockito.Mockito;
import org.mockito.MockitoDebugger;
import org.mockito.internal.verification.api.VerificationMode;
import org.mockito.stubbing.Answer;
import org.mockito.stubbing.Stubber;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Mockito_ESTest extends Mockito_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        Mockito.mock(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Stubber stubber0 = Mockito.doNothing();
      assertNotNull(stubber0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VerificationMode verificationMode0 = Mockito.only();
      assertNotNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IsEmptyString isEmptyString0 = new IsEmptyString();
      // Undeclared exception!
      try { 
        Mockito.when((Object) isEmptyString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      IsAnything<String> isAnything0 = new IsAnything<String>();
      VerificationMode verificationMode0 = Mockito.times(0);
      // Undeclared exception!
      try { 
        Mockito.verify((Object) isAnything0, verificationMode0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Object[] objectArray0 = new Object[0];
      // Undeclared exception!
      try { 
        Mockito.verifyZeroInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        Mockito.reset(stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stubber stubber0 = Mockito.doCallRealMethod();
      assertNotNull(stubber0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Class<Locale.FilteringMode> class0 = Locale.FilteringMode.class;
      // Undeclared exception!
      try { 
        Mockito.mock(class0, "org.mockito.Mockito");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      MockitoDebugger mockitoDebugger0 = Mockito.debug();
      assertNotNull(mockitoDebugger0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VerificationMode verificationMode0 = Mockito.never();
      assertNotNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mockito.spy((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.Mockito", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Class<Integer> class0 = Integer.class;
      Answer<Object> answer0 = Mockito.RETURNS_MOCKS;
      // Undeclared exception!
      try { 
        Mockito.mock(class0, (Answer) answer0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mockito mockito0 = new Mockito();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Stubber stubber0 = Mockito.doAnswer((Answer) null);
      assertNotNull(stubber0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      VerificationMode verificationMode0 = Mockito.atMost(60);
      assertNotNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mockito.stubVoid((Object) ")S[");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IsEmptyString isEmptyString0 = new IsEmptyString();
      // Undeclared exception!
      try { 
        Mockito.stub(isEmptyString0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Object[] objectArray0 = new Object[9];
      // Undeclared exception!
      try { 
        Mockito.verifyNoMoreInteractions(objectArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      VerificationMode verificationMode0 = Mockito.atLeastOnce();
      assertNotNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      VerificationMode verificationMode0 = Mockito.atLeast(1199);
      assertNotNull(verificationMode0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Stubber stubber0 = Mockito.doReturn("JFo:ll@h7)9<s");
      assertNotNull(stubber0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mockito.verify("org.mockito.Mockito");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        Mockito.validateMockitoUsage();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      SQLIntegrityConstraintViolationException sQLIntegrityConstraintViolationException0 = new SQLIntegrityConstraintViolationException("cqS.ybTXOwu|");
      Stubber stubber0 = Mockito.doThrow(sQLIntegrityConstraintViolationException0);
      assertNotNull(stubber0);
  }
}
