/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 05 18:14:39 GMT 2019
 */

package org.mockito.internal.stubbing.defaultanswers;

import org.junit.Test;
import static org.junit.Assert.*;
import java.sql.SQLClientInfoException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReturnsEmptyValues_ESTest extends ReturnsEmptyValues_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReturnsEmptyValues returnsEmptyValues0 = new ReturnsEmptyValues();
      Class<SQLClientInfoException> class0 = SQLClientInfoException.class;
      Object object0 = returnsEmptyValues0.returnValueFor(class0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ReturnsEmptyValues returnsEmptyValues0 = new ReturnsEmptyValues();
      Class<Integer> class0 = Integer.class;
      Object object0 = returnsEmptyValues0.returnValueFor(class0);
      assertEquals(0, object0);
  }
}
