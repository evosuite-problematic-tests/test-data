/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 05 18:58:48 GMT 2019
 */

package org.mockito.internal.invocation;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Method;
import java.util.List;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.hamcrest.Matcher;
import org.hamcrest.number.IsCloseTo;
import org.junit.runner.RunWith;
import org.mockito.cglib.proxy.MethodProxy;
import org.mockito.internal.creation.DelegatingMockitoMethodProxy;
import org.mockito.internal.debugging.Location;
import org.mockito.internal.invocation.Invocation;
import org.mockito.internal.invocation.InvocationMatcher;
import org.mockito.internal.invocation.SerializableMethod;
import org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod;
import org.mockito.internal.matchers.CapturingMatcher;
import org.mockito.internal.reporting.PrintSettings;
import org.mockito.internal.stubbing.StubbedInvocationMatcher;
import org.mockito.stubbing.answers.ReturnsElementsOf;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InvocationMatcher_ESTest extends InvocationMatcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(invocation0).argumentsToMatchers();
      doReturn((String) null).when(invocation0).toString(anyList() , any(org.mockito.internal.reporting.PrintSettings.class));
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      PrintSettings printSettings0 = new PrintSettings();
      String string0 = invocationMatcher0.toString(printSettings0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((List) null, (List) null).when(invocation0).argumentsToMatchers();
      doReturn((String) null).when(invocation0).toString();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      Vector<IsCloseTo> vector0 = new Vector<IsCloseTo>();
      ReturnsElementsOf returnsElementsOf0 = new ReturnsElementsOf(vector0);
      StubbedInvocationMatcher stubbedInvocationMatcher0 = new StubbedInvocationMatcher(invocationMatcher0, returnsElementsOf0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(invocation0).argumentsToMatchers();
      doReturn((String) null).when(invocation0).toString(anyList() , any(org.mockito.internal.reporting.PrintSettings.class));
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      String string0 = invocationMatcher0.toString();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Object object0 = null;
      Invocation invocation0 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((List) null, (List) null).when(invocation0).argumentsToMatchers();
      doReturn((Location) null).when(invocation0).getLocation();
      doReturn((Method) null).when(invocation0).getMethod();
      InvocationMatcher invocationMatcher0 = new InvocationMatcher(invocation0);
      List<Matcher> list0 = (List<Matcher>)invocationMatcher0.getMatchers();
      InvocationMatcher invocationMatcher1 = new InvocationMatcher(invocation0, list0);
      invocationMatcher1.getMatchers();
      invocationMatcher1.getMethod();
      invocationMatcher1.getLocation();
      Invocation invocation1 = mock(Invocation.class, new ViolatedAssumptionAnswer());
      doReturn((List) null).when(invocation1).argumentsToMatchers();
      doReturn((Method) null).when(invocation1).getMethod();
      InvocationMatcher invocationMatcher2 = new InvocationMatcher(invocation1);
      invocationMatcher2.captureArgumentsFrom((Invocation) null);
      invocationMatcher2.getMethod();
      SerializableMethod serializableMethod0 = null;
      try {
        serializableMethod0 = new SerializableMethod((Method) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mockito.internal.invocation.SerializableMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      CapturingMatcher<Invocation> capturingMatcher0 = new CapturingMatcher<Invocation>();
      List<Invocation> list0 = capturingMatcher0.getAllValues();
      List<InvocationMatcher> list1 = InvocationMatcher.createFrom(list0);
      assertEquals(0, list1.size());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      CapturingMatcher<Invocation> capturingMatcher0 = new CapturingMatcher<Invocation>();
      Object object0 = new Object();
      capturingMatcher0.captureFrom(object0);
      List<Invocation> list0 = capturingMatcher0.getAllValues();
      // Undeclared exception!
      try { 
        InvocationMatcher.createFrom(list0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.mockito.internal.invocation.Invocation
         //
         verifyException("org.mockito.internal.invocation.InvocationMatcher", e);
      }
  }
}
