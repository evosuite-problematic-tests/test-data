/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 05 17:27:09 GMT 2019
 */

package org.apache.commons.math.complex;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.text.DecimalFormat;
import java.text.FieldPosition;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import org.apache.commons.math.complex.Complex;
import org.apache.commons.math.complex.ComplexFormat;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComplexFormat_ESTest extends ComplexFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ComplexFormat complexFormat0 = new ComplexFormat("(Infinity) + (Infinity)i");
      try { 
        complexFormat0.parse("(Infinity) + (Infinity)i");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable complex number: \"(Infinity) + (Infinity)i\"
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Complex complex0 = Complex.INF;
      String string0 = ComplexFormat.formatComplex(complex0);
      assertEquals("(Infinity) + (Infinity)i", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ComplexFormat complexFormat0 = new ComplexFormat(decimalFormat0, decimalFormat0);
      // Undeclared exception!
      try { 
        complexFormat0.formatToCharacterIterator(decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Cannot format given Object as a Date
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Complex complex0 = new Complex((-1.0), 0.0);
      complex0.imaginary = (-1470.8734664095);
      String string0 = ComplexFormat.formatComplex(complex0);
      assertEquals("-1 - 1,470.87i", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ComplexFormat complexFormat0 = new ComplexFormat();
      Double double0 = new Double(1326.6);
      StringBuffer stringBuffer0 = new StringBuffer(4741);
      FieldPosition fieldPosition0 = new FieldPosition((-1456));
      complexFormat0.format((Object) double0, stringBuffer0, fieldPosition0);
      assertEquals("1,326.6", stringBuffer0.toString());
      assertEquals(7, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Complex complex0 = Complex.NaN;
      String string0 = ComplexFormat.formatComplex(complex0);
      assertEquals("(NaN) + (NaN)i", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParsePosition parsePosition0 = new ParsePosition(43);
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ComplexFormat complexFormat0 = new ComplexFormat(decimalFormat0, decimalFormat0);
      complexFormat0.parse("", parsePosition0);
      assertEquals(42, parsePosition0.getErrorIndex());
      assertEquals("java.text.ParsePosition[index=43,errorIndex=42]", parsePosition0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ComplexFormat complexFormat0 = ComplexFormat.getInstance();
      ParsePosition parsePosition0 = new ParsePosition(4);
      parsePosition0.setIndex(12);
      complexFormat0.parse("(Infinity) + (Infinity)i", parsePosition0);
      assertEquals(13, parsePosition0.getErrorIndex());
      assertEquals("java.text.ParsePosition[index=24,errorIndex=13]", parsePosition0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ComplexFormat complexFormat0 = new ComplexFormat("1-uh K}ylvr4wHX>");
      try { 
        complexFormat0.parseObject("1-uh K}ylvr4wHX>");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Format.parseObject(String) failed
         //
         verifyException("java.text.Format", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ComplexFormat complexFormat0 = ComplexFormat.getInstance();
      ParsePosition parsePosition0 = new ParsePosition(0);
      complexFormat0.parseObject("7*8~X}lt9", parsePosition0);
      assertEquals(1, parsePosition0.getErrorIndex());
      assertEquals("java.text.ParsePosition[index=0,errorIndex=1]", parsePosition0.toString());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ComplexFormat complexFormat0 = new ComplexFormat(decimalFormat0, decimalFormat0);
      Complex complex0 = complexFormat0.parse("(Infinity) + (Infinity)i");
      assertEquals(Double.POSITIVE_INFINITY, complex0.getImaginary(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      NumberFormat numberFormat0 = NumberFormat.getNumberInstance();
      ComplexFormat complexFormat0 = new ComplexFormat("|p$7H1w!usuY,", numberFormat0);
      try { 
        complexFormat0.parse("9+ ");
        fail("Expecting exception: ParseException");
      
      } catch(ParseException e) {
         //
         // Unparseable complex number: \"9+ \"
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DecimalFormat decimalFormat0 = new DecimalFormat();
      ComplexFormat complexFormat0 = null;
      try {
        complexFormat0 = new ComplexFormat((String) null, decimalFormat0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // imaginaryCharacter must be a non-empty string.
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ComplexFormat complexFormat0 = null;
      try {
        complexFormat0 = new ComplexFormat("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // imaginaryCharacter must be a non-empty string.
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ComplexFormat complexFormat0 = null;
      try {
        complexFormat0 = new ComplexFormat((NumberFormat) null, (NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // imaginaryFormat can not be null.
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ComplexFormat complexFormat0 = new ComplexFormat();
      // Undeclared exception!
      try { 
        complexFormat0.setRealFormat((NumberFormat) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // realFormat can not be null.
         //
         verifyException("org.apache.commons.math.complex.ComplexFormat", e);
      }
  }
}
