/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 06 13:57:19 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.HTML32.escape("8e9>zZNz'o");
      assertEquals("8e9&gt;zZNz'o", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = new Entities();
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("", 329);
      int int0 = entities_BinaryEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(2);
      entities_ArrayEntityMap0.add((String) null, 118);
      String string0 = entities_ArrayEntityMap0.name(118);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(139);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name((-2976));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.escape((Writer) stringWriter0, "l3(c@~Y3?Zdi5YO>");
      assertEquals("l3(c@~Y3?Zdi5YO&gt;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter(59);
      entities0.unescape((Writer) stringWriter0, "&gt;N:%:;R0&gt;8mt&gt;]vCyKm");
      assertEquals(">N:%:;R0>8mt>]vCyKm", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add((String) null, 552);
      int int0 = entities_HashEntityMap0.value((String) null);
      assertEquals(552, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      int int0 = entities_HashEntityMap0.value("s5YWw9]c@)')t/");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.entityName(552);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.ensureCapacity(1553);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("961", (-2430));
      String string0 = entities_ArrayEntityMap0.name(Integer.MAX_VALUE);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      int int0 = entities_ArrayEntityMap0.value("Illegal Capacity: ");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(2703);
      entities_ArrayEntityMap0.add("Hq1.0~-Uh2;6^Vv+", 120);
      int int0 = entities_ArrayEntityMap0.value("Hq1.0~-Uh2;6^Vv+");
      assertEquals(120, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add((String) null, 120);
      entities_BinaryEntityMap0.add("@", 112);
      entities_BinaryEntityMap0.add("k", 120);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add((String) null, 1657);
      String string0 = entities_BinaryEntityMap0.name(1657);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      String string0 = entities_BinaryEntityMap0.name(111);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape(" ;<l:[g");
      assertEquals(" ;<l:[g", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("\"%aR0mifa%2VUFZl&");
      assertEquals("\"%aR0mifa%2VUFZl&", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("0&#&n%M-;[");
      assertEquals("0&#&n%M-;[", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.XML.unescape("&gt;N:%:;R0&gt;8mt&gt;]vCyKm");
      assertEquals(">N:%:;R0>8mt>]vCyKm", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("0&;#n%M-;[");
      assertEquals("0&;#n%M-;[", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("&#;");
      assertEquals("&#;", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("0&#U`8%ML-#;A");
      assertEquals("0&#U`8%ML-#;A", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter(112);
      entities0.unescape((Writer) stringWriter0, " ;<l:[g");
      assertEquals(" ;<l:[g", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter(1602);
      entities0.HTML32.unescape((Writer) stringWriter0, ">/j{0IO&a&Yy1?PdN+");
      assertEquals(">/j{0IO&a&Yy1?PdN+", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "0&#&n%M-;[");
      assertEquals("0&#&n%M-;[", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "0&;#n%M-;[");
      assertEquals("0&;#n%M-;[", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "0&#U`8%ML-#;A");
      assertEquals("0&#U`8%ML-#;A", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "&#;");
      assertEquals("&#;", stringWriter0.toString());
  }
}
