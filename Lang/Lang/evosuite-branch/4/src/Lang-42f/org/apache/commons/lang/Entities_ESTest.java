/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 06 13:13:26 GMT 2019
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.HTML32.escape("*&Ym}R:E?^*?^vw");
      assertEquals("*&amp;Ym}R:E?^*?^vw", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = new Entities();
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("OW$fSRrsuPsa", 126);
      int int0 = entities_BinaryEntityMap0.value("");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(130);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(2703);
      entities_ArrayEntityMap0.add("Hq1.0~-Uh2;6^Vv+", 120);
      int int0 = entities_ArrayEntityMap0.value("Hq1.0~-Uh2;6^Vv+");
      assertEquals(120, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name(3574);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.escape("Hq1.0~-Uh2;6^Vv+");
      assertEquals("Hq1.0~-Uh2;6^Vv+", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("Q#lpUS(&gt;&Q#lpUS(>/&yJ;&amp;yJ");
      assertEquals("Q#lpUS(>&Q#lpUS(>/&yJ;&yJ", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      entities_HashEntityMap0.add((String) null, 552);
      int int0 = entities_HashEntityMap0.value((String) null);
      assertEquals(552, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      int int0 = entities_HashEntityMap0.value("WhW/i");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.entityName(552);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.ensureCapacity(1553);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("961", (-2430));
      String string0 = entities_ArrayEntityMap0.name(Integer.MAX_VALUE);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add((String) null, 0);
      String string0 = entities_ArrayEntityMap0.name(0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      int int0 = entities_ArrayEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("OW$fSRrsuPsa", 126);
      entities_BinaryEntityMap0.add("8250", (-2059));
      entities_BinaryEntityMap0.add("Iuml", 126);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add((String) null, 3408);
      String string0 = entities_BinaryEntityMap0.name(3408);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      String string0 = entities_BinaryEntityMap0.name((-2652));
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = new Entities();
      String string0 = entities0.HTML40.unescape("abh.$-SHs@mgq[YCzJV");
      assertEquals("abh.$-SHs@mgq[YCzJV", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter(7224);
      entities0.HTML32.unescape((Writer) stringWriter0, "*&Ym}R:E?^*?^vw");
      assertEquals("*&Ym}R:E?^*?^vw", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.XML.unescape((Writer) stringWriter0, "><f/v=Mq?_(+-");
      assertEquals("><f/v=Mq?_(+-", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.XML.unescape("46_YkV+&;IO:{");
      assertEquals("46_YkV+&;IO:{", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("Q#lpUS(&gt;/&amp;yJ");
      assertEquals("Q#lpUS(>/&yJ", string0);
  }
}
