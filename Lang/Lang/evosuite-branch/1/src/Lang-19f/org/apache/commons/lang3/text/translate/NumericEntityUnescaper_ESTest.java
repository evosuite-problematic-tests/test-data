/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 11:57:04 GMT 2018
 */

package org.apache.commons.lang3.text.translate;

import org.junit.Test;
import static org.junit.Assert.*;
import java.nio.CharBuffer;
import org.apache.commons.lang3.text.translate.NumericEntityUnescaper;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NumericEntityUnescaper_ESTest extends NumericEntityUnescaper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[6];
      charArray0[5] = '&';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000&", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, 'x');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&#x", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, 'X');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&#X", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, 'X');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&#X\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, 'f');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&#f", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, '9');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("\t", string0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, 'g');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&#g", string0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, 'D');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("&#D", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      NumericEntityUnescaper numericEntityUnescaper0 = new NumericEntityUnescaper();
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charArray0[1] = '#';
      charBuffer0.put(2, '9');
      charArray0[0] = '&';
      String string0 = numericEntityUnescaper0.translate((CharSequence) charBuffer0);
      assertEquals("\t\u0000\u0000\u0000\u0000\u0000", string0);
  }
}
