/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 12:51:04 GMT 2018
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      String string0 = entities_LookupEntityMap0.name(2600);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.XML.escape("JG'<14u]");
      assertEquals("JG&apos;&lt;14u]", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("org.apache.commons.lang.IntHashMap", 144);
      String string0 = entities_ArrayEntityMap0.name(49);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.size = 20;
      String[] stringArray0 = new String[3];
      entities_BinaryEntityMap0.names = stringArray0;
      // Undeclared exception!
      try { 
        entities_BinaryEntityMap0.add("", (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.add("org.apache.commons.lang.IntHashMap", 138);
      int int0 = entities_TreeEntityMap0.value("org.apache.commons.lang.IntHashMap");
      assertEquals(138, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.escape("org.apache.commons.lang.IntHashMap");
      assertEquals("org.apache.commons.lang.IntHashMap", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name(130);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      int int0 = entities_TreeEntityMap0.value("hBFPI");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(20);
      String string0 = entities_ArrayEntityMap0.name(1);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap(4089);
      entities_ArrayEntityMap0.add("{&pr)u", 4089);
      String string0 = entities_ArrayEntityMap0.name(4089);
      assertEquals("{&pr)u", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(127);
      entities_BinaryEntityMap0.add("%--a5*hJ`9\"da#cxC", (-980));
      int int0 = entities_BinaryEntityMap0.value("%--a5*hJ`9\"da#cxC");
      assertEquals((-980), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(129);
      entities_BinaryEntityMap0.add("", 129);
      int int0 = entities_BinaryEntityMap0.value((String) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(1224);
      entities_BinaryEntityMap0.add("z{+h", 1224);
      String string0 = entities_BinaryEntityMap0.name(1224);
      assertEquals("z{+h", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(1224);
      entities_BinaryEntityMap0.add("z{+h", 1224);
      String string0 = entities_BinaryEntityMap0.name(145);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("!guI{b@1}7Kjn", (-12));
      entities_BinaryEntityMap0.add("Vu/b+dT!,9Pi&Ck,", (-2226));
      entities_BinaryEntityMap0.add("org.apache.commons.lang.UnhandledException", (-12));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.unescape("196");
      assertEquals("196", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = new Entities();
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "'7 &-qZHJ6A3$e6-_");
      assertEquals("'7 &-qZHJ6A3$e6-_", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "[e6iT");
      assertEquals("[e6iT", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("J&apos;&lt;1&H&u>>`97_K;u]");
      assertEquals("J'<1&H&u>>`97_K;u]", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter(259);
      entities0.unescape((Writer) stringWriter0, "nBn?SHGHjKUV&;#w");
      assertEquals("nBn?SHGHjKUV&;#w", stringWriter0.toString());
  }
}
