/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 18 10:51:02 GMT 2018
 */

package org.apache.commons.lang3.builder;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.CharBuffer;
import java.util.LinkedList;
import java.util.WeakHashMap;
import org.apache.commons.lang3.builder.StandardToStringStyle;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.JVM)
@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ToStringStyle_ESTest extends ToStringStyle_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "java.home", (short)4598);
      assertEquals(6, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isArrayContentDetail();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(boolean0);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      toStringStyle0.setUseShortClassName(true);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectStartText();
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      boolean boolean0 = toStringStyle0.isUseFieldNames();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "<", '~');
      assertEquals(4, stringBuffer0.length());
      assertEquals("<=~,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isFieldSeparatorAtEnd();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(boolean0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "}", 1);
      assertEquals("\u0000}=1,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "", (long) 0);
      assertEquals("=0,", stringBuffer0.toString());
      assertFalse(standardToStringStyle0.isUseShortClassName());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("#SAdi}ds_");
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "T'nKfy)}?pMLl1k%l .", (-4501.25));
      assertEquals(38, stringBuffer0.length());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeEndText();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", string0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      String string0 = toStringStyle0.getFieldNameValueSeparator();
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      toStringStyle0.SIMPLE_STYLE.appendStart(stringBuffer0, stringBuffer0);
      assertEquals(0, stringBuffer0.length());
      assertEquals("", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSummaryObjectEndText();
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", string0);
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      int[] intArray0 = new int[4];
      Boolean boolean0 = new Boolean("<");
      toStringStyle0.append(stringBuffer0, "<", intArray0, boolean0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("<=<size=4>\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getArrayStart();
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", string0);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getNullText();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<null>", string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      toStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "  ", linkedList0);
      assertEquals("[]", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.append(stringBuffer0, "3sD>|/", (byte) (-35));
      assertEquals("3sD>|/=-35,", stringBuffer0.toString());
      assertEquals(11, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      boolean boolean0 = toStringStyle0.isUseClassName();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldSeparatorAtEnd(true);
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) null);
      assertEquals(1, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("I");
      Object[] objectArray0 = new Object[4];
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "@<cBokE#", objectArray0, boolean0);
      assertEquals("I@<cBokE#=<size=4>\n  ", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setUseIdentityHashCode(false);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      boolean boolean0 = toStringStyle0.isUseShortClassName();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      
      standardToStringStyle0.setFieldSeparatorAtStart(true);
      assertTrue(standardToStringStyle0.isFieldSeparatorAtStart());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentEnd();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", string0);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("line.separator");
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.append(stringBuffer0, "]V ", false);
      assertEquals(24, stringBuffer0.length());
      assertEquals("line.separator]V =false,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(13);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendStart(stringBuffer0, stringBuffer0);
      Object[] objectArray0 = new Object[7];
      objectArray0[3] = (Object) stringBuffer0;
      standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, "", objectArray0);
      assertEquals(93, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "kr&BLZq:UBH");
      standardToStringStyle0.appendSuper(stringBuffer0, (String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      boolean boolean0 = standardToStringStyle0.isDefaultFullDetail();
      assertTrue(boolean0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getContentStart();
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("[", string0);
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.getArrayEnd();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "}");
      standardToStringStyle0.MULTI_LINE_STYLE.removeLastFieldSeparator(stringBuffer0);
      Double double0 = new Double(940.0);
      standardToStringStyle0.SIMPLE_STYLE.appendEnd(stringBuffer0, double0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte)0;
      standardToStringStyle0.MULTI_LINE_STYLE.appendDetail(stringBuffer0, "zYLh^5MHIC", byteArray0);
      standardToStringStyle0.setSizeEndText("");
      Float float0 = new Float(940.0);
      Float.isFinite(0.0F);
      Float.max(0.0F, (byte)0);
      standardToStringStyle0.appendDetail(stringBuffer0, "}", float0);
      standardToStringStyle0.getArraySeparator();
      Object[] objectArray0 = new Object[6];
      objectArray0[0] = (Object) "";
      objectArray0[1] = (Object) (byte) (-9);
      objectArray0[2] = (Object) ",";
      objectArray0[3] = (Object) "}";
      Object object0 = new Object();
      objectArray0[4] = object0;
      objectArray0[5] = (Object) float0;
      standardToStringStyle0.appendDetail(stringBuffer0, "}", objectArray0);
      assertEquals(52, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      
      standardToStringStyle0.setArrayContentDetail(false);
      assertFalse(standardToStringStyle0.isArrayContentDetail());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      Boolean boolean0 = Boolean.valueOf(false);
      boolean[] booleanArray0 = new boolean[0];
      standardToStringStyle0.append(stringBuffer0, ">", booleanArray0, boolean0);
      assertEquals(12, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setDefaultFullDetail(true);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertTrue(standardToStringStyle0.isUseFieldNames());
      
      standardToStringStyle0.setUseFieldNames(false);
      assertFalse(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      float[] floatArray0 = new float[4];
      Boolean boolean0 = new Boolean((String) null);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, (String) null, floatArray0, boolean0);
      assertEquals(11, stringBuffer0.length());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[2];
      Boolean boolean0 = new Boolean("zOp5Od$evz");
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "zOp5Od$evz", doubleArray0, boolean0);
      assertEquals("zOp5Od$evz=<size=2>\n  ", stringBuffer0.toString());
      assertEquals("{", standardToStringStyle0.getArrayStart());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      standardToStringStyle0.appendEnd(stringBuffer0, (Object) null);
      assertEquals(1, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      byte[] byteArray0 = new byte[1];
      Boolean boolean0 = Boolean.valueOf(false);
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, ">", byteArray0, boolean0);
      assertEquals(14, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = standardToStringStyle0.getSizeStartText();
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<size=", string0);
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ToStringStyle.register((Object) null);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(13);
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) 'N';
      standardToStringStyle0.SIMPLE_STYLE.appendDetail(stringBuffer0, "", objectArray0);
      assertEquals(45, stringBuffer0.length());
      assertEquals("]", standardToStringStyle0.getContentEnd());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.appendToString(stringBuffer0, "]");
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "kr&BLZq:UBH");
      toStringStyle0.DEFAULT_STYLE.appendToString(stringBuffer0, "Wt- m!");
      assertEquals(11, stringBuffer0.length());
      assertEquals("kr&BLZq:UBH", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.SIMPLE_STYLE.appendToString(stringBuffer0, "Iv,kEH\"");
      assertEquals(9, stringBuffer0.length());
      assertEquals("Iv,kEH\",", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.NO_FIELD_NAMES_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      toStringStyle0.appendStart(stringBuffer0, (Object) null);
      assertEquals(1, stringBuffer0.length());
      assertEquals(">", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      WeakHashMap<String, Object> weakHashMap0 = new WeakHashMap<String, Object>();
      standardToStringStyle0.MULTI_LINE_STYLE.appendStart(stringBuffer0, weakHashMap0);
      assertEquals(27, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setFieldSeparator("");
      StringBuffer stringBuffer0 = new StringBuffer(11);
      standardToStringStyle0.append(stringBuffer0, "", (float[]) null, (Boolean) null);
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals("=<null>", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(13);
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "", (-3435.137F));
      standardToStringStyle0.removeLastFieldSeparator(stringBuffer0);
      assertEquals(10, stringBuffer0.length());
      assertEquals("=-3435.137", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "kr&BLZq:UBH");
      toStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "<", (Object) null, (Boolean) null);
      assertEquals(18, stringBuffer0.length());
      assertEquals("kr&BLZq:UBH<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      String string0 = "X";
      StringBuffer stringBuffer0 = new StringBuffer("X");
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendFieldStart(stringBuffer0, "X");
      standardToStringStyle0.getFieldSeparator();
      standardToStringStyle0.isFieldSeparatorAtStart();
      Short short0 = new Short((short)59);
      Object[] objectArray0 = new Object[9];
      objectArray0[7] = (Object) short0;
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendDetail(stringBuffer0, (String) null, objectArray0);
      assertEquals(63, stringBuffer0.length());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setUseClassName(false);
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang3.builder.ToStringStyle");
      char[] charArray0 = new char[9];
      charArray0[0] = '.';
      charArray0[1] = 'O';
      charArray0[2] = 'E';
      charArray0[3] = '&';
      charArray0[4] = 'R';
      charArray0[5] = '`';
      charArray0[6] = ';';
      charArray0[7] = ',';
      charArray0[8] = '6';
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "org.apache.commons.lang3.builder.ToStringStyle", charArray0);
      boolean boolean0 = false;
      StringBuffer stringBuffer1 = new StringBuffer(46);
      Boolean boolean1 = Boolean.FALSE;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "o", (Object) boolean1, boolean1);
      assertEquals(75, stringBuffer0.length());
      assertFalse(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(0);
      WeakHashMap<Character, StandardToStringStyle> weakHashMap0 = new WeakHashMap<Character, StandardToStringStyle>();
      Object[] objectArray0 = new Object[5];
      objectArray0[2] = (Object) weakHashMap0;
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.appendDetail(stringBuffer0, "{", objectArray0);
      assertEquals(32, stringBuffer0.length());
      assertEquals("{<null>,<null>,{},<null>,<null>}", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      WeakHashMap<StandardToStringStyle, Long> weakHashMap0 = new WeakHashMap<StandardToStringStyle, Long>();
      standardToStringStyle0.SIMPLE_STYLE.appendInternal(stringBuffer0, ">", weakHashMap0, false);
      assertEquals(24, stringBuffer0.length());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ">");
      Boolean boolean0 = Boolean.valueOf(false);
      toStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "6GWkwT`=,c24*", (Object[]) null, boolean0);
      assertEquals(22, stringBuffer0.length());
      assertEquals(">6GWkwT`=,c24*=<null>,", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Object[] objectArray0 = new Object[2];
      Boolean boolean0 = Boolean.TRUE;
      standardToStringStyle0.append(stringBuffer0, "6><lqr_l?41]4*c", objectArray0, boolean0);
      assertEquals("6><lqr_l?41]4*c={<null>,<null>},", stringBuffer0.toString());
      assertEquals(32, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      long[] longArray0 = new long[4];
      Boolean boolean0 = Boolean.valueOf(true);
      standardToStringStyle0.append(stringBuffer0, "^", longArray0, boolean0);
      assertEquals(12, stringBuffer0.length());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "]");
      Boolean boolean0 = Boolean.valueOf("3D>|/");
      standardToStringStyle0.append(stringBuffer0, "<null>", (long[]) null, boolean0);
      assertEquals("]<null>=<null>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("S{ld]yccY*e/UOY");
      long[] longArray0 = new long[7];
      Boolean boolean0 = new Boolean("S{ld]yccY*e/UOY");
      standardToStringStyle0.append(stringBuffer0, "5.0", longArray0, boolean0);
      assertEquals("S{ld]yccY*e/UOY5.0=<size=7>,", stringBuffer0.toString());
      assertEquals("<null>", standardToStringStyle0.getNullText());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.SIMPLE_STYLE.append(stringBuffer0, "java.home", (int[]) null, boolean0);
      assertEquals("\u0000<null>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[0];
      Boolean boolean0 = new Boolean(true);
      toStringStyle0.append(stringBuffer0, "+`]0W{!HK", intArray0, boolean0);
      assertEquals(13, stringBuffer0.length());
      assertEquals("+`]0W{!HK={},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      int[] intArray0 = new int[3];
      standardToStringStyle0.appendDetail(stringBuffer0, "[", intArray0);
      assertEquals(7, stringBuffer0.length());
      assertTrue(standardToStringStyle0.isUseClassName());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      short[] shortArray0 = new short[2];
      toStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "{Tk", shortArray0, (Boolean) null);
      assertEquals(6, stringBuffer0.length());
      assertEquals("{0,0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(false);
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "CqwCZ&tvYz6eq[N!6;", (short[]) null, boolean0);
      assertEquals("<null>,", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(2);
      short[] shortArray0 = new short[3];
      Boolean boolean0 = new Boolean("{");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "BZl1_Lc5`,b;]r~", shortArray0, boolean0);
      assertEquals("<size=3>,", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        toStringStyle0.MULTI_LINE_STYLE.append((StringBuffer) null, (String) null, (byte[]) null, boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer((CharSequence) "<size=");
      byte[] byteArray0 = new byte[1];
      standardToStringStyle0.append(stringBuffer0, "@\b=J}NfW", byteArray0, (Boolean) null);
      assertEquals("<size=@\b=J}NfW={0},", stringBuffer0.toString());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(true);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      char[] charArray0 = new char[8];
      standardToStringStyle0.MULTI_LINE_STYLE.append(stringBuffer0, "v0u<(_ADYH", charArray0, boolean0);
      assertEquals(31, stringBuffer0.length());
      assertEquals("v0u<(_ADYH={\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000,\u0000}\n  ", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer(0);
      Boolean boolean0 = Boolean.valueOf("");
      toStringStyle0.append(stringBuffer0, "*:_U,kN<~']", (char[]) null, boolean0);
      assertEquals("*:_U,kN<~']=<null>,", stringBuffer0.toString());
      assertEquals(19, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("@U<,");
      char[] charArray0 = new char[1];
      Boolean boolean0 = Boolean.valueOf("@U<,");
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.append(stringBuffer0, "@U<,", charArray0, boolean0);
      assertEquals("@U<,<size=1>,", stringBuffer0.toString());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("#SAdi}ds_");
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.append(stringBuffer0, "T'nKfy)}?pMLl1k%l .", (double[]) null, boolean0);
      assertEquals(36, stringBuffer0.length());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SHORT_PREFIX_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      double[] doubleArray0 = new double[3];
      toStringStyle0.DEFAULT_STYLE.append(stringBuffer0, "+`]0W{!HK", doubleArray0, (Boolean) null);
      assertEquals("+`]0W{!HK={0.0,0.0,0.0},", stringBuffer0.toString());
      assertEquals(24, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      Boolean boolean0 = new Boolean(true);
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      float[] floatArray0 = new float[2];
      standardToStringStyle0.SHORT_PREFIX_STYLE.append(stringBuffer0, "+`]0W{!HK", floatArray0, boolean0);
      assertEquals(20, stringBuffer0.length());
      assertEquals("+`]0W{!HK={0.0,0.0},", stringBuffer0.toString());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer("");
      Boolean boolean0 = Boolean.valueOf(true);
      toStringStyle0.append(stringBuffer0, (String) null, (boolean[]) null, boolean0);
      assertEquals(7, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer(">");
      boolean[] booleanArray0 = new boolean[7];
      booleanArray0[3] = true;
      standardToStringStyle0.append(stringBuffer0, ">", booleanArray0, (Boolean) booleanArray0[3]);
      assertEquals(">>={false,false,false,true,false,false,false},", stringBuffer0.toString());
      assertEquals(46, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      StringBuffer stringBuffer0 = new StringBuffer();
      toStringStyle0.appendClassName(stringBuffer0, (Object) null);
      assertEquals(0, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer("org.apache.commons.lang3.builder.ToStringStyle");
      Boolean boolean0 = Boolean.FALSE;
      standardToStringStyle0.SHORT_PREFIX_STYLE.appendClassName(stringBuffer0, boolean0);
      assertEquals("org.apache.commons.lang3.builder.ToStringStyleBoolean", stringBuffer0.toString());
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      StringBuffer stringBuffer0 = new StringBuffer();
      standardToStringStyle0.MULTI_LINE_STYLE.appendIdentityHashCode(stringBuffer0, (Object) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("", stringBuffer0.toString());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart("");
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("{", standardToStringStyle0.getArrayStart());
      
      standardToStringStyle0.setArrayStart((String) null);
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setArrayEnd(">");
      assertEquals(">", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SHORT_PREFIX_STYLE.setArrayEnd((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      standardToStringStyle0.setArraySeparator("");
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      
      standardToStringStyle0.setArraySeparator((String) null);
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setContentStart("T'nKfy)}?pMLl1k%l .");
      assertEquals("T'nKfy)}?pMLl1k%l .", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("[", standardToStringStyle0.getContentStart());
      
      standardToStringStyle0.setContentStart((String) null);
      assertEquals(">", standardToStringStyle0.getSizeEndText());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("]", standardToStringStyle0.getContentEnd());
      
      standardToStringStyle0.setContentEnd("");
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.NO_FIELD_NAMES_STYLE.setContentEnd((String) null);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setFieldNameValueSeparator("{");
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.MULTI_LINE_STYLE;
      toStringStyle0.setFieldNameValueSeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.DEFAULT_STYLE;
      toStringStyle0.SIMPLE_STYLE.setFieldSeparator((String) null);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.DEFAULT_STYLE.setNullText("");
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ToStringStyle toStringStyle0 = ToStringStyle.SIMPLE_STYLE;
      toStringStyle0.setNullText((String) null);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSizeStartText(">");
      assertEquals(">", standardToStringStyle0.getSizeStartText());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      
      standardToStringStyle0.setSizeStartText((String) null);
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      
      standardToStringStyle0.setSizeEndText((String) null);
      assertEquals("[", standardToStringStyle0.getContentStart());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.NO_FIELD_NAMES_STYLE.setSummaryObjectStartText("");
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertTrue(standardToStringStyle0.isUseFieldNames());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertEquals("}", standardToStringStyle0.getArrayEnd());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.SIMPLE_STYLE.setSummaryObjectStartText((String) null);
      assertEquals("}", standardToStringStyle0.getArrayEnd());
      assertEquals(",", standardToStringStyle0.getArraySeparator());
      assertEquals(",", standardToStringStyle0.getFieldSeparator());
      assertTrue(standardToStringStyle0.isUseIdentityHashCode());
      assertEquals(">", standardToStringStyle0.getSizeEndText());
      assertEquals("[", standardToStringStyle0.getContentStart());
      assertEquals("=", standardToStringStyle0.getFieldNameValueSeparator());
      assertTrue(standardToStringStyle0.isArrayContentDetail());
      assertEquals("<size=", standardToStringStyle0.getSizeStartText());
      assertFalse(standardToStringStyle0.isUseShortClassName());
      assertEquals("<null>", standardToStringStyle0.getNullText());
      assertEquals("{", standardToStringStyle0.getArrayStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtStart());
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
      assertTrue(standardToStringStyle0.isDefaultFullDetail());
      assertEquals("]", standardToStringStyle0.getContentEnd());
      assertEquals("<", standardToStringStyle0.getSummaryObjectStartText());
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      assertTrue(standardToStringStyle0.isUseClassName());
      assertTrue(standardToStringStyle0.isUseFieldNames());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      standardToStringStyle0.setSummaryObjectEndText("0");
      assertEquals("0", standardToStringStyle0.getSummaryObjectEndText());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StandardToStringStyle standardToStringStyle0 = new StandardToStringStyle();
      assertEquals(">", standardToStringStyle0.getSummaryObjectEndText());
      
      standardToStringStyle0.setSummaryObjectEndText((String) null);
      assertFalse(standardToStringStyle0.isFieldSeparatorAtEnd());
  }
}
