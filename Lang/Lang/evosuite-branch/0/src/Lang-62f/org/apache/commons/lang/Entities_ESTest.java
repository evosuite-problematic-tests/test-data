/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 18 11:55:26 GMT 2018
 */

package org.apache.commons.lang;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import org.apache.commons.lang.Entities;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.junit.FixMethodOrder;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.JVM)
@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Entities_ESTest extends Entities_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter(2511);
      entities0.unescape((Writer) stringWriter0, "I1&quot;y&lt;+)+%2dK");
      assertEquals("I1\"y<+)+%2dK", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      String string0 = entities0.escape("I1\"y<+)+%2dK");
      assertEquals("I1&quot;y&lt;+)+%2dK", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Entities entities0 = new Entities();
      entities0.escape((Writer) null, "");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      Entities.fillWithHtml40Entities(entities0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("", 1969);
      String string0 = entities_ArrayEntityMap0.name(1969);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap(146);
      entities_BinaryEntityMap0.add("", (-2429));
      int int0 = entities_BinaryEntityMap0.value("");
      assertEquals((-2429), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Entities.HashEntityMap entities_HashEntityMap0 = new Entities.HashEntityMap();
      int int0 = entities_HashEntityMap0.value("2&lt;^f=/54m6-GPjZd");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.size = 131;
      // Undeclared exception!
      try { 
        entities_BinaryEntityMap0.add((String) null, 971);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      entities_TreeEntityMap0.add("OTZ!4o9kkL", 1956);
      int int0 = entities_TreeEntityMap0.value("OTZ!4o9kkL");
      assertEquals(1956, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Entities.TreeEntityMap entities_TreeEntityMap0 = new Entities.TreeEntityMap();
      String string0 = entities_TreeEntityMap0.name(1956);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Entities.LookupEntityMap entities_LookupEntityMap0 = new Entities.LookupEntityMap();
      String string0 = entities_LookupEntityMap0.name(1416);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("", (-1));
      String string0 = entities_ArrayEntityMap0.name(117);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Entities.ArrayEntityMap entities_ArrayEntityMap0 = new Entities.ArrayEntityMap();
      entities_ArrayEntityMap0.add("", (-1));
      int int0 = entities_ArrayEntityMap0.value("-?vHs-");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.size = 20;
      entities_BinaryEntityMap0.add("0!", 1053);
      entities_BinaryEntityMap0.add("0!", 1053);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("", Integer.MAX_VALUE);
      String string0 = entities_BinaryEntityMap0.name(268);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Entities.BinaryEntityMap entities_BinaryEntityMap0 = new Entities.BinaryEntityMap();
      entities_BinaryEntityMap0.add("sube", (-1));
      String string0 = entities_BinaryEntityMap0.name((-1));
      assertEquals("sube", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.escape((Writer) stringWriter0, "2&lt;^f=/54m6-GPjZd");
      assertEquals("2&amp;lt;^f=/54m6-GPjZd", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("2&amp;lt;^f=/54m6-GPjZd");
      assertEquals("2&lt;^f=/54m6-GPjZd", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.unescape("0!");
      assertEquals("0!", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.XML.unescape("X?t,.&\";4&d");
      assertEquals("X?t,.&\";4&d", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Entities entities0 = Entities.XML;
      String string0 = entities0.HTML32.unescape("&Cf_bwn36d6edvj&^;");
      assertEquals("&Cf_bwn36d6edvj&^;", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      String string0 = entities0.unescape("&Cf_bn36d6edvj&;");
      assertEquals("&Cf_bn36d6edvj&;", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Entities entities0 = Entities.HTML32;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "2<^f=/54m6-GPjZd");
      assertEquals("2<^f=/54m6-GPjZd", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.XML.unescape((Writer) stringWriter0, "X?t,.&\";4&d");
      assertEquals("X?t,.&\";4&d", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Entities entities0 = Entities.XML;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "&Cf_bwn36d6edvj&^;");
      assertEquals("&Cf_bwn36d6edvj&^;", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Entities entities0 = Entities.HTML40;
      StringWriter stringWriter0 = new StringWriter();
      entities0.unescape((Writer) stringWriter0, "&Cf_bn36d6edvj&;");
      assertEquals("&Cf_bn36d6edvj&;", stringWriter0.toString());
  }
}
