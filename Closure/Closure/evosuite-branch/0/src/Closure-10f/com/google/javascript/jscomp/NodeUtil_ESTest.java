/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 07 03:05:26 GMT 2019
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableSet;
import com.google.common.collect.ImmutableSetMultimap;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.AbstractPeepholeOptimization;
import com.google.javascript.jscomp.CheckLevel;
import com.google.javascript.jscomp.CheckMissingReturn;
import com.google.javascript.jscomp.CheckRegExp;
import com.google.javascript.jscomp.CheckSideEffects;
import com.google.javascript.jscomp.ClosureCodingConvention;
import com.google.javascript.jscomp.CodingConvention;
import com.google.javascript.jscomp.CodingConventions;
import com.google.javascript.jscomp.CombinedCompilerPass;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerInput;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.DeadAssignmentsElimination;
import com.google.javascript.jscomp.DefaultPassConfig;
import com.google.javascript.jscomp.DiagnosticGroup;
import com.google.javascript.jscomp.ExploitAssigns;
import com.google.javascript.jscomp.GlobalNamespace;
import com.google.javascript.jscomp.GoogleCodingConvention;
import com.google.javascript.jscomp.InlineProperties;
import com.google.javascript.jscomp.InlineSimpleMethods;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.JSModuleGraph;
import com.google.javascript.jscomp.JqueryCodingConvention;
import com.google.javascript.jscomp.JsAst;
import com.google.javascript.jscomp.LightweightMessageFormatter;
import com.google.javascript.jscomp.LoggerErrorManager;
import com.google.javascript.jscomp.MemoizedScopeCreator;
import com.google.javascript.jscomp.MoveFunctionDeclarations;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.NodeUtil;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.PassConfig;
import com.google.javascript.jscomp.PeepholeCollectPropertyAssignments;
import com.google.javascript.jscomp.PeepholeFoldConstants;
import com.google.javascript.jscomp.PeepholeRemoveDeadCode;
import com.google.javascript.jscomp.PeepholeReplaceKnownMethods;
import com.google.javascript.jscomp.PeepholeSimplifyRegExp;
import com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax;
import com.google.javascript.jscomp.PreprocessorSymbolTable;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.jscomp.ProcessClosurePrimitives;
import com.google.javascript.jscomp.ProcessCommonJSModules;
import com.google.javascript.jscomp.RemoveUnusedClassProperties;
import com.google.javascript.jscomp.ReorderConstantExpression;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.SimpleDefinitionFinder;
import com.google.javascript.jscomp.SourceFile;
import com.google.javascript.jscomp.SourceMap;
import com.google.javascript.jscomp.StatementFusion;
import com.google.javascript.jscomp.SyntacticScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.jscomp.TightenTypes;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.jscomp.VerboseMessageFormatter;
import com.google.javascript.jscomp.WhitelistWarningsGuard;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.InputId;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.SimpleErrorReporter;
import com.google.javascript.rhino.jstype.EnumElementType;
import com.google.javascript.rhino.jstype.EnumType;
import com.google.javascript.rhino.jstype.FunctionType;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import com.google.javascript.rhino.jstype.ModificationVisitor;
import com.google.javascript.rhino.jstype.ObjectType;
import com.google.javascript.rhino.jstype.ParameterizedType;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.TemplateType;
import com.google.javascript.rhino.jstype.TernaryValue;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.io.StringWriter;
import java.io.UnsupportedEncodingException;
import java.net.URI;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NodeUtil_ESTest extends NodeUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(45);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isStatementParent(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "6qW";
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6qW", "6qW");
      node0.addSuppression("z<$^A~CIkuq//");
      Node node1 = new Node((-5700), node0, node0);
      node0.setLineno(12);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
      NodeUtil.isReferenceName(node0);
      ControlFlowAnalysis.computeFollowNode(node1, controlFlowAnalysis0);
      // Undeclared exception!
      try { 
        NodeUtil.getRootOfQualifiedName(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1090.8852865276424");
      NodeUtil.isCallOrNew(node0);
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
      String string0 = "'eAcV#M:'p0|myc";
      Node node0 = null;
      Compiler compiler0 = new Compiler();
      Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_NormalizeStatements0, syntacticScopeCreator0);
      Compiler compiler1 = nodeTraversal0.getCompiler();
      // Undeclared exception!
      try { 
        compiler1.areNodesEqualForInlining((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      try { 
        NodeUtil.getBestLValue((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      NodeUtil.isStrWhiteSpaceChar(39);
      // Undeclared exception!
      try { 
        CompilerOptions.TweakProcessing.valueOf("s2tw$H&D&@cyiC2.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.javascript.jscomp.CompilerOptions.TweakProcessing.s2tw$H&D&@cyiC2.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte) (-71);
      byteArray0[2] = (byte) (-86);
      byteArray0[3] = (byte)18;
      byteArray0[4] = (byte)98;
      byteArray0[5] = (byte)38;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-74);
      byteArray1[1] = (byte) (-12);
      byteArray1[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(".d0|cUb9D5(");
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertEquals(".d0|cUb9D5(", string0);
      
      boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
      boolean boolean1 = NodeUtil.isControlStructure(node0);
      assertTrue(boolean1 == boolean0);
      
      String string1 = NodeUtil.arrayToString(node0);
      assertEquals("", string1);
      
      boolean boolean2 = NodeUtil.isEmptyBlock(node0);
      boolean boolean3 = NodeUtil.isGet(node0);
      assertTrue(boolean3 == boolean2);
      
      boolean boolean4 = NodeUtil.isLoopStructure(node0);
      boolean boolean5 = NodeUtil.isSymmetricOperation(node0);
      assertTrue(boolean5 == boolean4);
      assertFalse(boolean5);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(false);
      node0.setOptionalArg(false);
      node0.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node0);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      NodeUtil.isSwitchCase(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isLValue(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isNumericResult(node1);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.anyResultsMatch(node0, nodeUtil_MatchNodeType0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2865), (-2865), (-2865));
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      NodeUtil.isPrototypeProperty(node1);
      NodeUtil.isImmutableValue(node0);
      node1.isLocalResultCall();
      NodeUtil.isLatin("W");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(95, "quPRDt<57xvB+=Lg", 95, (-1711));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getPrototypeClassName(node0);
      NodeUtil.getInverseOperator(8);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(91, "quPRDt<57xvB+=Lg", 91, (-1707));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getBestLValueOwner(node0);
      NodeUtil.getNameReferenceCount(node0, "quPRDt<57xvB+=Lg");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx%", 129, (-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node0.getQualifiedName();
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.isNumericResultHelper(node1);
      NodeUtil.isExprAssign(node1);
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("nKL_.'");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      int int0 = 25;
      NodeUtil.isAssociative(25);
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      charArray0[1] = 'v';
      charArray0[2] = '{';
      charArray0[3] = 's';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 25, 25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = Node.newString("0:Q9I`p95Ib|,Wu");
      boolean boolean0 = NodeUtil.isWithinLoop(node0);
      boolean boolean1 = NodeUtil.isSwitchCase(node0);
      Compiler compiler0 = new Compiler();
      InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
      Set<String> set0 = inlineSimpleMethods0.externMethods;
      boolean boolean2 = NodeUtil.isValidDefineValue(node0, set0);
      assertTrue(boolean2);
      
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(closureCodingConvention0);
      PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
      Node node1 = peepholeCollectPropertyAssignments0.optimizeSubtree(node0);
      NodeUtil.isConstantByConvention(jqueryCodingConvention0, node1, node0);
      Node node2 = NodeUtil.newVarNode("prototype", node0);
      assertFalse(node0.hasChildren());
      
      Node node3 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "Variable {0} not declared before @lends annotation.");
      assertEquals(33, node3.getType());
      assertEquals(2, node3.getChildCount());
      
      boolean boolean3 = NodeUtil.canBeSideEffected(node1, set0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3 == boolean0);
      
      Node node4 = ControlFlowAnalysis.computeFallThrough(node0);
      node4.toString();
      boolean boolean4 = NodeUtil.isPrototypePropertyDeclaration(node4);
      assertTrue(boolean4 == boolean1);
      
      boolean boolean5 = NodeUtil.isReferenceName(node2);
      assertTrue(boolean5 == boolean1);
      
      String string0 = NodeUtil.arrayToString(node2);
      assertNull(string0);
      assertEquals(118, node2.getType());
      
      boolean boolean6 = NodeUtil.isAssociative(2);
      assertTrue(boolean6 == boolean0);
      assertFalse(boolean6);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.isAssociative((-94));
      String string0 = "s";
      Node node0 = Node.newString("s", (-94), (-94));
      // Undeclared exception!
      try { 
        NodeUtil.getOpFromAssignmentOp(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not an assignment op:STRING s
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(18, node0, 4095, 50);
      // Undeclared exception!
      try { 
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      String string0 = NodeUtil.trimJsWhiteSpace("`Q");
      assertEquals("`Q", string0);
      
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      ClosureCodingConvention closureCodingConvention1 = new ClosureCodingConvention();
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(closureCodingConvention1);
      Node node0 = NodeUtil.newQualifiedNameNode(codingConventions_Proxy0, "`Q");
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      node1.setSourceEncodedPosition(2);
      NodeUtil.isForIn(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^*W1qwZ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-8);
      byteArray0[7] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = NodeUtil.referencesThis(node1);
      boolean boolean1 = NodeUtil.isCommutative((-2475));
      assertFalse(boolean1);
      
      NodeUtil.getPureBooleanValue(node0);
      boolean boolean2 = NodeUtil.isLiteralValue(node0, true);
      assertTrue(boolean2 == boolean0);
      
      Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
      int int0 = NodeUtil.getCount(node0, predicate0, predicate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "Z6qW";
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "Z6qW", "Z6qW");
      Node node1 = new Node((-5700), node0, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
      Node node2 = Node.newString(38, "Z6qW");
      NodeUtil.getBestJSDocInfo(node0);
      Node.newNumber((-1138.1950117887004), 41, 25);
      node2.setOptionalArg(true);
      // Undeclared exception!
      try { 
        NodeUtil.isBleedingFunctionName(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      SyntheticAst syntheticAst0 = new SyntheticAst("c");
      Compiler compiler0 = new Compiler();
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
      NodeUtil.getLoopCodeBlock(node0);
      Node node1 = null;
      try {
        node1 = new Node(38, node0, (Node) null, (-9), (-18));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
      try { 
        NodeUtil.getConditionExpression(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // PARAM_LIST does not have a condition.
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      NodeUtil.getStringNumberValue(" x9E_|0t]Y}FAJTF?(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)104;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NaN");
      byteArray0[1] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NodeUtil.isSimpleOperatorType(1006);
      NodeUtil.opToStr((-1826));
      Node node0 = null;
      NodeUtil.getInputId((Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.newVarNode((String) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      double double0 = Double.NaN;
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      Node node0 = Node.newNumber(0.0);
      Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction(node1, 49);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6kFSBm", "6kFSBm");
      Node node1 = new Node(85, node0, node0, node0, 108, (-506));
      node1.getJSDocInfo();
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(12);
      NodeUtil.allResultsMatch(node1, nodeUtil_MatchNodeType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NodeUtil.getRValueOfLValue(node0);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: SCRIPT [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533] of COMMA
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      NodeUtil.opToStr(90);
      NodeUtil.isCommutative(90);
      NodeUtil.precedence(90);
      String string0 = "g";
      NodeUtil.isValidQualifiedName("g");
      NodeUtil.isValidSimpleName("g");
      Compiler compiler0 = new Compiler();
      Compiler.IntermediateState compiler_IntermediateState0 = compiler0.getState();
      Node node0 = compiler_IntermediateState0.externsRoot;
      compiler0.parseSyntheticCode("<<=", "g");
      // Undeclared exception!
      try { 
        NodeUtil.getRValueOfLValue((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = NodeUtil.booleanNode(true);
      Node node1 = NodeUtil.newUndefinedNode(node0);
      NodeUtil.mayEffectMutableState(node1);
      NodeUtil.isUndefined(node1);
      int int0 = 520;
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2865), (-2865), (-2865));
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      NodeUtil.isPrototypeProperty(node1);
      NodeUtil.isImmutableValue(node0);
      node0.addChildrenToFront(node1);
      node1.isLocalResultCall();
      NodeUtil.isSimpleOperator(node0);
      // Undeclared exception!
      NodeUtil.isExecutedExactlyOnce(node0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      NodeUtil.mayHaveSideEffects(node1);
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      // Undeclared exception!
      try { 
        NodeUtil.hasCatchHandler(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString(44, "u");
      node0.getLength();
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "<";
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      node0.addSuppression("<");
      node0.setIsSyntheticBlock(false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      // Undeclared exception!
      try { 
        NodeUtil.getObjectLitKeyName(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node type: TRUE u [jsdoc_info: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003]
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(39);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      node0.setType(53);
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(71);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isNumericResult(node0);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      node0.setType(53);
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 53
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Node node0 = new Node(149, (-2447), (-2447));
      NodeUtil.isBleedingFunctionName(node0);
      node0.setLength(149);
      NodeUtil.isGetOrSetKey(node0);
      // Undeclared exception!
      try { 
        NodeUtil.precedence(1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 1
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(16);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(39);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "isDef");
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.isForIn(node1);
      NodeUtil.referencesThis(node0);
      NodeUtil.getImpureBooleanValue(node1);
      NodeUtil.isExprCall(node0);
      // Undeclared exception!
      try { 
        NodeUtil.maybeAddFinally(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      Node node0 = Node.newString("com.google.javascript.jscomp.JsMessage$Hash");
      boolean boolean0 = nodeUtil_MatchShallowStatement0.apply(node0);
      boolean boolean1 = NodeUtil.isPrototypeProperty(node0);
      assertFalse(boolean1);
      
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      nodeUtil_MatchDeclaration0.equals(node0);
      boolean boolean2 = nodeUtil_MatchDeclaration0.apply(node0);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(true);
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      Node node1 = new Node(47);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      nodeUtil_MayBeStringResultPredicate0.equals("$");
      node0.copyInformationFrom(node1);
      nodeUtil_MayBeStringResultPredicate0.equals("$");
      node1.setVarArgs(false);
      node1.checkTreeEquals(node0);
      nodeUtil_MayBeStringResultPredicate0.equals(ternaryValue0);
      NodeUtil.isNameReferenced(node1, "$", nodeUtil_MayBeStringResultPredicate0);
      NodeUtil.getVarsDeclaredInBranch(node0);
      NodeUtil.copyNameAnnotations(node1, node1);
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      node1.toString();
      // Undeclared exception!
      try { 
        NodeUtil.newName((CodingConvention) null, "4E1?(3`I]WikUDe,$%", node0, "Node tree inequality:\nTree1:\nREGEXP\n\n\nTree2:\nTRUE\n\n\nSubtree1: REGEXP\n\n\nSubtree2: TRUE\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(false);
      // Undeclared exception!
      try { 
        NodeUtil.getConditionExpression(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // FALSE does not have a condition.
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionParameters((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      NodeUtil.getStringValue(1112.904966586);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1112.904966586");
      node0.isOptionalArg();
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("k_LcS;D1H9c. R8_*s", (-833), 87855567);
      // Undeclared exception!
      try { 
        NodeUtil.hasFinally(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForCallOrNew((Node) null, (-3077));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = NodeUtil.isValidQualifiedName("test");
      boolean boolean1 = NodeUtil.isSimpleOperatorType((-1983));
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      NodeUtil.opToStrNoFail(21);
      Compiler compiler0 = new Compiler();
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      // Undeclared exception!
      try { 
        tightenTypes0.getTypeRegistry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getCatchBlock((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = 0;
      Node node0 = Node.newNumber(53.0, 0, 1674);
      Node[] nodeArray0 = new Node[1];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(googleCodingConvention0);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      NodeUtil.opToStr(461);
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement1 = new NodeUtil.MatchShallowStatement();
      Node node0 = Node.newString(38, "yq+F=");
      boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      NodeUtil.isCommutative(2);
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.parseSyntheticCode("", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // a source must have a name
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String string0 = "cQ3\\u";
      boolean boolean0 = NodeUtil.isValidPropertyName(string0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      NodeUtil.isValidPropertyName("");
      NodeUtil.getStringNumberValue("");
      Node node0 = new Node((-1392));
      int int0 = 6;
      Node.newString("");
      int int1 = 281;
      // Undeclared exception!
      try { 
        node0.getDouble();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // -1392
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = Node.newString("");
      boolean boolean0 = NodeUtil.isUndefined(node0);
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
      nodeUtil_BooleanResultPredicate0.equals("");
      boolean boolean1 = nodeUtil_BooleanResultPredicate0.apply(node0);
      assertTrue(boolean1 == boolean0);
      
      Node node1 = NodeUtil.newUndefinedNode(node0);
      assertFalse(node1.isString());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      NodeUtil.getStringValue(Double.NEGATIVE_INFINITY);
      // Undeclared exception!
      try { 
        NodeUtil.isBooleanResult((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      VerboseMessageFormatter verboseMessageFormatter0 = new VerboseMessageFormatter(compiler0);
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(verboseMessageFormatter0, (Logger) null);
      Compiler compiler1 = new Compiler(loggerErrorManager0);
      Node node0 = compiler1.parseTestCode("CnoU");
      boolean boolean0 = NodeUtil.isBooleanResult(node0);
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.isForIn(node0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = Node.newString("Not an assignment op:", 8232, (-809));
      Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
      boolean boolean0 = NodeUtil.containsType(node0, 55, predicate0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      NodeUtil.isStrWhiteSpaceChar(0);
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      assertNull(googleCodingConvention0.getDelegateSuperclassName());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.functionCallHasSideEffects((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      NodeUtil.isStrWhiteSpaceChar(126);
      boolean boolean0 = NodeUtil.isValidPropertyName("KZ^Xnha+k;24l}SOZgI");
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      Node node0 = Node.newString("KZ^Xnha+k;24l}SOZgI", 126, (-2121));
      Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, "KZ^Xnha+k;24l}SOZgI", node0, "xDWD#h$uHm:G6jy6");
      Node node2 = peepholeRemoveDeadCode0.tryOptimizeBlock(node1);
      Node node3 = NodeUtil.newVarNode("KZ^Xnha+k;24l}SOZgI", node2);
      boolean boolean1 = NodeUtil.mayBeString(node3);
      assertFalse(boolean1 == boolean0);
      assertEquals(38, node1.getType());
      assertFalse(node3.isName());
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      SyntheticAst syntheticAst0 = new SyntheticAst("u^FWh");
      Compiler compiler0 = new Compiler();
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      Node node1 = NodeUtil.getLoopCodeBlock(node0);
      assertNull(node1);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = new Node(130, 0, (-1984));
      String string0 = NodeUtil.getSourceName(node0);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isNameReferenced(node0, "\"5$A,)1O");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      NodeUtil.getLoopCodeBlock(node0);
      NodeUtil.getSourceFile((Node) null);
      String string0 = NodeUtil.getSourceName(node0);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.containsType(node0, 45);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
      MockPrintStream mockPrintStream0 = new MockPrintStream(" PJZ.;AZV");
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(lightweightMessageFormatter0, mockPrintStream0);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "..bKDU]Afh3E.B}", " PJZ.;AZV");
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = NodeUtil.booleanNode(true);
      // Undeclared exception!
      try { 
        NodeUtil.getRootOfQualifiedName(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = Node.newString("2T[Y7^8f8 ;:", 0, 0);
      Node node1 = NodeUtil.numberNode((-1.0), node0);
      Node node2 = peepholeRemoveDeadCode0.tryOptimizeBlock(node1);
      boolean boolean0 = nodeUtil_BooleanResultPredicate0.apply(node2);
      assertFalse(boolean0);
      assertEquals(39, node1.getType());
      assertEquals(0, node2.getSourcePosition());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = null;
      Node node1 = NodeUtil.newVarNode(":WnQ-e4M,9ZYh-\"1!", (Node) null);
      Node node2 = NodeUtil.numberNode((-1738.1225998418101), node1);
      Node.newString(2395, "n", 0, 4095);
      NodeUtil.isNameReferenced(node2, ":WnQ-e4M,9ZYh-\"1!");
      NodeUtil.getNearestFunctionName(node1);
      String string0 = "gJ";
      try { 
        node1.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // VAR is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      Compiler compiler0 = new Compiler();
      compiler0.newCompilerOptions();
      DiagnosticGroup.forType(compiler0.MOTION_ITERATIONS_ERROR);
      DiagnosticGroup[] diagnosticGroupArray0 = new DiagnosticGroup[2];
      // Undeclared exception!
      try { 
        compiler0.buildKnownSymbolTable();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String string0 = ";%:m#;DG1Te";
      NodeUtil.getStringNumberValue(";%:m#;DG1Te");
      StatementFusion statementFusion0 = new StatementFusion();
      Node node0 = new Node(0);
      NodeUtil.getBestLValueOwner(node0);
      // Undeclared exception!
      try { 
        statementFusion0.mayHaveSideEffects((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = null;
      NodeUtil.numberNode(0.0, (Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.isExpressionResultUsed((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getVarsDeclaredInBranch((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = 825;
      NodeUtil.isCommutative(825);
      Node node0 = Node.newString(825, "");
      Node node1 = NodeUtil.numberNode(825, node0);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForCallOrNew(node1, 50);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString("*S3rVUNw4][#B");
      Node node1 = new Node(503, node0, node0);
      node0.addChildToFront(node1);
      node1.useSourceInfoFrom(node0);
      node0.isVarArgs();
      node0.setOptionalArg(false);
      node1.setOptionalArg(false);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      String string0 = "k";
      Node node0 = Node.newString((-1074), "k", (-1074), (-1074));
      node0.isLocalResultCall();
      Node node1 = NodeUtil.newUndefinedNode(node0);
      NodeUtil.isStatementBlock(node1);
      String string1 = "3f\\xaoc`2ogrhf`X?y";
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      String string2 = "%\",>#mFdW9";
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("%\",>#mFdW9", "%\",>#mFdW9");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // %\",>#mFdW9
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      String string0 = "lc$4jn\\8 /(@R`";
      NodeUtil.isValidQualifiedName("lc$4jn8 /(@R`");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        Normalize.parseAndNormalizeSyntheticCode(compiler0, "lc$4jn8 /(@R`", "lc$4jn8 /(@R`");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(true);
      node0.setSourceFileForTesting("com.google.javascript.jscomp.NodeUtil$VarCollector");
      NodeUtil.copyNameAnnotations(node0, node0);
      try { 
        node0.getDouble();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // TRUE [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000003] is not a number node
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = new Node(0, nodeArray0);
      node0.setIsSyntheticBlock(true);
      boolean boolean0 = NodeUtil.isNameReferenced(node0, "5&S)Izt");
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      boolean boolean1 = NodeUtil.isNameReferenced(node0, "5&S)Izt", nodeUtil_NumbericResultPredicate0);
      assertFalse(boolean1);
      
      boolean boolean2 = NodeUtil.isFunctionObjectCall(node0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      String string0 = "$:QwXf(~]c8t";
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.newName(jqueryCodingConvention0, "$:QwXf(~]c8t", (Node) null, "$:QwXf(~]c8t");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      simpleErrorReporter0.warning("", "h+o7!As#Q`0Jr2D`6b", 12288, 12288);
      jSTypeRegistry0.getTypesWithProperty(",O3A|");
      Node node0 = Node.newString("", 12288, 879);
      ObjectType.cast((JSType) null);
      NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createEnumType("", node0, (JSType) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.jstype.EnumElementType", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      SyntheticAst syntheticAst0 = new SyntheticAst(" _*");
      Compiler compiler0 = new Compiler();
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      nodeUtil_NumbericResultPredicate0.apply(node0);
      Node node1 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction((Node) null, 75);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1694);
      Node node0 = Node.newString("M", (-2537), (-1708));
      Node node1 = NodeUtil.newExpr(node0);
      Compiler compiler0 = new Compiler();
      CheckSideEffects.StripProtection checkSideEffects_StripProtection0 = new CheckSideEffects.StripProtection(compiler0);
      SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkSideEffects_StripProtection0, syntacticScopeCreator0);
      Compiler compiler1 = nodeTraversal0.getCompiler();
      compiler1.getRoot();
      Node node2 = null;
      try {
        node2 = new Node(2351, node1, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      NodeUtil.isStrWhiteSpaceChar(11);
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isEmptyFunctionExpression((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = new Node((-401));
      Node node1 = NodeUtil.numberNode((-1461.3), node0);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1534);
      int int0 = NodeUtil.getCount(node1, nodeUtil_MatchNodeType0, nodeUtil_MatchNodeType0);
      assertEquals(0, int0);
      
      NodeUtil.getPureBooleanValue(node1);
      assertEquals(39, node1.getType());
      
      int int1 = NodeUtil.getInverseOperator(523);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isStatementParent((Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = 380;
      // Undeclared exception!
      try { 
        NodeUtil.opToStrNoFail(380);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 380
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.mayEffectMutableState((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      NodeUtil.isAssociative(85);
      JsAst jsAst0 = null;
      try {
        jsAst0 = new JsAst((SourceFile) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.JsAst", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StatementFusion statementFusion0 = new StatementFusion();
      Node node0 = Node.newString("`y0D~8;Ex|?s");
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionBody(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
      Node node0 = Node.newNumber((-1567.8821019498787), 2504, 2504);
      NodeUtil.isEmptyBlock(node0);
      node0.children();
      NodeUtil.mayBeString(node0, false);
      node0.getSideEffectFlags();
      StringBuilder stringBuilder0 = new StringBuilder();
      StringBuilder stringBuilder1 = stringBuilder0.append((-3182L));
      char[] charArray0 = new char[8];
      charArray0[0] = 'm';
      charArray0[1] = 'g';
      charArray0[2] = 'I';
      char char0 = 'Y';
      charArray0[3] = 'Y';
      charArray0[4] = '(';
      charArray0[5] = '*';
      charArray0[6] = 'y';
      charArray0[7] = '+';
      StringBuilder stringBuilder2 = stringBuilder1.append(charArray0);
      // Undeclared exception!
      try { 
        stringBuilder2.replace(35, 39, "aJ9_$8%V5g{b\"n");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // start > length()
         //
         verifyException("java.lang.AbstractStringBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = Node.newNumber((-1133.0), 2538, 2538);
      NodeUtil.isObjectLitKey(node0, node0);
      NodeUtil.copyNameAnnotations(node0, node0);
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      String string0 = "";
      Node node1 = NodeUtil.newName(googleCodingConvention0, "nK0H8t]\"AvCEEf+lQW", node0, "");
      // Undeclared exception!
      try { 
        node0.addChildrenAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      SyntheticAst syntheticAst0 = new SyntheticAst("gW/@s|Mi");
      Compiler compiler0 = new Compiler();
      Compiler.IntermediateState compiler_IntermediateState0 = compiler0.getState();
      compiler0.setState(compiler_IntermediateState0);
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        NodeUtil.getBestLValue(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newNumber((-1507.2970169342443), 8232, 8232);
      // Undeclared exception!
      try { 
        NodeUtil.isVarArgsFunction(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
      MockPrintStream mockPrintStream0 = new MockPrintStream("y512X4/4vA79f^?<U");
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(lightweightMessageFormatter0, mockPrintStream0);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
      compiler0.getMessages();
      mockPrintStream0.print('\'');
      nodeTraversal0.getCurrentNode();
      // Undeclared exception!
      try { 
        NodeUtil.canBeSideEffected((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = null;
      NodeUtil.getInputId((Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.isVarDeclaration((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      NodeUtil.isAssociative(0);
      // Undeclared exception!
      try { 
        NodeUtil.precedence(0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 0
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(true);
      NodeUtil.getImpureBooleanValue(node0);
      // Undeclared exception!
      try { 
        SimpleDefinitionFinder.getNameNodeFromFunctionNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = "";
      Node node0 = Node.newString("");
      node0.putBooleanProp(0, true);
      node0.setVarArgs(false);
      node0.isSyntheticBlock();
      // Undeclared exception!
      try { 
        NodeUtil.functionCallHasSideEffects(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected CALL node, got STRING
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = NodeUtil.booleanNode(false);
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('@');
      node0.appendStringTree(stringWriter1);
      assertEquals("@FALSE\n", stringWriter1.toString());
      
      NodeUtil.canBeSideEffected(node1, (Set<String>) null);
      node0.useSourceInfoFromForTree(node1);
      boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      SyntheticAst syntheticAst0 = new SyntheticAst(" _*");
      Compiler compiler0 = new Compiler();
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      nodeUtil_NumbericResultPredicate0.apply(node0);
      NodeUtil.isGet(node0);
      int int0 = 12288;
      NodeUtil.getSourceName(node0);
      SourceFile sourceFile0 = syntheticAst0.getSourceFile();
      JsAst jsAst0 = new JsAst(sourceFile0);
      // Undeclared exception!
      try { 
        compiler0.addNewSourceAst(jsAst0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NodeUtil.getStringValue(1112.904966586);
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1112.904966586");
      node0.isOptionalArg();
      NodeUtil.isWithinLoop(node0);
      // Undeclared exception!
      try { 
        NodeUtil.has(node0, (Predicate<Node>) null, (Predicate<Node>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = NodeUtil.newExpr(node0);
      StringWriter stringWriter0 = new StringWriter();
      char[] charArray0 = new char[4];
      charArray0[0] = '|';
      charArray0[1] = 'D';
      charArray0[2] = 'D';
      charArray0[3] = 'D';
      stringWriter0.write(charArray0);
      StringWriter stringWriter1 = stringWriter0.append('D');
      node0.appendStringTree(stringWriter1);
      assertEquals("|DDDDFALSE\n", stringWriter1.toString());
      
      NodeUtil.canBeSideEffected(node1, (Set<String>) null);
      node0.useSourceInfoFromForTree(node1);
      NodeUtil.nodeTypeMayHaveSideEffects(node0);
      int int0 = NodeUtil.getInverseOperator(1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = Node.newString("*S3rVUNw4][#B");
      Node node1 = new Node(534, node0, node0);
      node0.addChildToFront(node1);
      node1.useSourceInfoFrom(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isNameReferenced(node0, "*S3rVUNw4][#B");
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(1249, "", 1249, 1249);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.isSyntheticBlock();
      NodeUtil.getBestLValueOwner(node0);
      NodeUtil.isBooleanResultHelper(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isLValue(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      // Undeclared exception!
      try { 
        NodeUtil.isStatement(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      int int0 = 22;
      NodeUtil.isSimpleOperatorType(22);
      Node node0 = null;
      Compiler compiler0 = new Compiler();
      CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
      Set<String> set0 = compilerOptions0.stripTypePrefixes;
      // Undeclared exception!
      try { 
        NodeUtil.isValidDefineValue((Node) null, set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
      MockPrintStream mockPrintStream0 = new MockPrintStream(" PJZ.;AZV");
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(lightweightMessageFormatter0, mockPrintStream0);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "..bKDU]Afh3E.B}", " PJZ.;AZV");
      ControlFlowAnalysis.getCatchHandlerForBlock(node0);
      NodeUtil.isVarOrSimpleAssignLhs((Node) null, node0);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(102);
      // Undeclared exception!
      try { 
        nodeUtil_MatchNodeType0.apply((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "B*y");
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NodeUtil.isStrWhiteSpaceChar(116);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      ArrayList<JSType> arrayList0 = new ArrayList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) arrayList0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      node0.getJSDocInfo();
      NodeUtil.isImmutableValue(node0);
      NodeUtil.isPrototypePropertyDeclaration(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getRValueOfLValue(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.constructorCallHasSideEffects((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = Node.newString("com.google.javascript.jscomp.SymbolTable");
      // Undeclared exception!
      try { 
        NodeUtil.getOpFromAssignmentOp(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not an assignment op:STRING com.google.javascript.jscomp.SymbolTable
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Compiler.createFillFileName("+infinity");
      Node node0 = NodeUtil.newUndefinedNode((Node) null);
      assertEquals(42, Node.SIDE_EFFECT_FLAGS);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = NodeUtil.booleanNode(false);
      NodeUtil.mayEffectMutableState(node1);
      NodeUtil.isUndefined(node1);
      int int0 = 520;
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(48);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      NodeUtil.getStringValue(1112.904966586);
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1112.904966586");
      node0.setVarArgs(false);
      NodeUtil.isAssignmentOp(node0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("1112.904966586");
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) "1112.904966586";
      Object object0 = new Object();
      objectArray0[1] = object0;
      objectArray0[2] = (Object) "1112.904966586";
      objectArray0[3] = (Object) mockPrintStream0;
      objectArray0[4] = (Object) null;
      PrintStream printStream0 = mockPrintStream0.printf((Locale) null, "B'9yO-", objectArray0);
      Compiler compiler0 = new Compiler(printStream0);
      // Undeclared exception!
      try { 
        NodeUtil.constructorCallHasSideEffects(node0, compiler0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Expected NEW node, got GETPROP
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.getPrototypePropertyName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager((PrintStream) null);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
      Compiler compiler1 = nodeTraversal0.getCompiler();
      ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention)compiler1.defaultCodingConvention;
      boolean boolean0 = NodeUtil.isConstantByConvention(closureCodingConvention0, node0, node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      // Undeclared exception!
      try { 
        NodeUtil.hasCatchHandler(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = Node.newNumber(1115.0);
      InputId inputId0 = NodeUtil.getInputId(node0);
      assertNull(inputId0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      node0.setString("com.google.javascript.rhino.head.ast.DoLoop");
      NodeUtil.opToStr(1);
      int int0 = NodeUtil.getNameReferenceCount(node0, "");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "JSCompiler_renameProperty");
      NodeUtil.isRelationalOperation(node0);
      Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction(node1, (-942));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      VerboseMessageFormatter verboseMessageFormatter0 = new VerboseMessageFormatter(compiler0);
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(verboseMessageFormatter0, (Logger) null);
      Compiler compiler1 = new Compiler(loggerErrorManager0);
      Node node0 = compiler1.parseTestCode("CnoU");
      boolean boolean0 = NodeUtil.isBooleanResult(node0);
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      node0.isOnlyModifiesThisCall();
      boolean boolean1 = NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
      assertFalse(boolean1);
      
      boolean boolean2 = NodeUtil.isSwitchCase(node0);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.isLatin("YK");
      int int0 = 1245;
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = Node.newString("YK", 1245, 1245);
      Node node1 = new Node(1245, node0, 4095, (-4372));
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryOptimizeBlock(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
      String string1 = NodeUtil.arrayToString(node1);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isLoopStructure(node0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      NodeUtil.getStringValue(1112.904966586);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1112.904966586");
      node0.isOptionalArg();
      Node node1 = NodeUtil.getRootOfQualifiedName(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction(node1, (-942));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      boolean boolean1 = NodeUtil.isEmptyBlock(node0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      NodeUtil.getBestLValueName(node0);
      NodeUtil.getPureBooleanValue(node0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      String string0 = NodeUtil.opToStr(88);
      assertNotNull(string0);
      assertEquals("^=", string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      // Undeclared exception!
      try { 
        NodeUtil.opToStrNoFail(109);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 109
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = NodeUtil.newExpr(node0);
      NodeUtil.mayEffectMutableState(node1);
      NodeUtil.isUndefined(node1);
      int int0 = 520;
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      String string0 = NodeUtil.getStringValue(1112.904966586);
      assertEquals("1112.904966586", string0);
      
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1112.904966586");
      node0.isOptionalArg();
      boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
      boolean boolean1 = NodeUtil.isAssignmentOp(node0);
      assertTrue(boolean1 == boolean0);
      assertEquals(2, node0.getChildCount());
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      NodeUtil.getStringNumberValue("+infinity");
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionBody((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(4095);
      NodeUtil.mayEffectMutableState(node1);
      NodeUtil.isUndefined(node1);
      int int0 = 520;
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      // Undeclared exception!
      try { 
        NodeUtil.mayHaveSideEffects((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)83;
      boolean boolean0 = NodeUtil.isSimpleOperatorType((-2201));
      assertFalse(boolean0);
      
      Node node0 = Node.newNumber(1156.7047146905513, 2021, (-2201));
      boolean boolean1 = NodeUtil.isConstantName(node0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = NodeUtil.isSimpleOperatorType((byte)83);
      Node node0 = Node.newString(".d0|cUb9D5(");
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertEquals(".d0|cUb9D5(", string0);
      
      boolean boolean1 = NodeUtil.isBooleanResultHelper(node0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1090.8852865276424");
      NodeUtil.isReferenceName(node0);
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)83;
      boolean boolean0 = NodeUtil.isSimpleOperatorType((-2201));
      assertFalse(boolean0);
      
      Node node0 = Node.newNumber(1156.7047146905513, 2021, (-2201));
      node0.setType((byte) (-12));
      NodeUtil.isConstantName(node0);
      String string0 = NodeUtil.getStringValue((byte) (-12));
      assertEquals("-12", string0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx%", 129, (-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.isNumericResultHelper(node1);
      NodeUtil.isExprAssign(node1);
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("nKL_.'");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "1112.904966586");
      boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = NodeUtil.booleanNode(true);
      Node node1 = new Node(47, node0);
      NodeUtil.mayEffectMutableState(node1);
      NodeUtil.isUndefined(node1);
      int int0 = 520;
      // Undeclared exception!
      try { 
        NodeUtil.getAssignedValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager((PrintStream) null);
      Compiler compiler0 = new Compiler(printStreamErrorManager0);
      Node node0 = compiler0.externAndJsRoot;
      // Undeclared exception!
      try { 
        NodeUtil.newHasLocalResult((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newUndefinedNode(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      NodeUtil.isPrototypeProperty(node1);
      NodeUtil.isVarOrSimpleAssignLhs(node0, node1);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(25);
      assertEquals("%", string0);
      assertNotNull(string0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      boolean boolean1 = NodeUtil.isEmptyBlock(node0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2865), (-2865), (-2865));
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      NodeUtil.isPrototypeProperty(node1);
      NodeUtil.isImmutableValue(node0);
      NodeUtil.isLatin("W");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.isEmptyBlock(node0);
      boolean boolean2 = NodeUtil.isSimpleOperatorType(39);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      boolean boolean3 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      boolean boolean4 = NodeUtil.referencesThis(node0);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1090.8852865276424");
      NodeUtil.mayBeString(node0);
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(true);
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      Node node1 = new Node(47);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      nodeUtil_MayBeStringResultPredicate0.equals("$");
      node0.copyInformationFrom(node1);
      nodeUtil_MayBeStringResultPredicate0.equals("$");
      node1.setVarArgs(false);
      node1.checkTreeEquals(node0);
      nodeUtil_MayBeStringResultPredicate0.equals(ternaryValue0);
      NodeUtil.isNameReferenced(node1, "$", nodeUtil_MayBeStringResultPredicate0);
      NodeUtil.getVarsDeclaredInBranch(node0);
      NodeUtil.copyNameAnnotations(node1, node1);
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      // Undeclared exception!
      try { 
        NodeUtil.newName((CodingConvention) null, "4E1?(3`I]WikUDe,$%", node0, "Node tree inequality:\nTree1:\nREGEXP\n\n\nTree2:\nTRUE\n\n\nSubtree1: REGEXP\n\n\nSubtree2: TRUE\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)100;
      byteArray0[1] = (byte) (-57);
      byteArray0[2] = (byte) (-21);
      byteArray0[3] = (byte)45;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NodeUtil.getInverseOperator(127);
      Node node0 = Node.newString("|", (int) (byte)100, (int) (byte)45);
      node0.getString();
      node0.isOnlyModifiesThisCall();
      node0.setWasEmptyNode(false);
      NodeUtil.isWithinLoop(node0);
      NodeUtil.isGetOrSetKey(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getArrayElementStringValue((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(true);
      TernaryValue ternaryValue0 = NodeUtil.getImpureBooleanValue(node0);
      Node node1 = NodeUtil.booleanNode(true);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      nodeUtil_MayBeStringResultPredicate0.equals("$");
      nodeUtil_MayBeStringResultPredicate0.equals("$");
      node1.setVarArgs(false);
      node1.checkTreeEquals(node0);
      nodeUtil_MayBeStringResultPredicate0.equals(ternaryValue0);
      NodeUtil.isNameReferenced(node1, "$", nodeUtil_MayBeStringResultPredicate0);
      NodeUtil.getVarsDeclaredInBranch(node0);
      NodeUtil.copyNameAnnotations(node1, node1);
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      // Undeclared exception!
      try { 
        NodeUtil.newName((CodingConvention) null, "4E1?(3`I]WikUDe,$%", node0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "g-~VGW/");
      Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryFoldFor(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "@~|'");
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(closureCodingConvention0);
      ClosureCodingConvention closureCodingConvention1 = new ClosureCodingConvention(jqueryCodingConvention0);
      Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention1, ".com.google.javascript.rhino.Node$SideEffectFlags");
      closureCodingConvention1.getClassesDefinedByCall(node0);
      NodeUtil.isSwitchCase(node0);
      NodeUtil.isNullOrUndefined(node0);
      Node node1 = null;
      closureCodingConvention1.getClassesDefinedByCall(node0);
      // Undeclared exception!
      try { 
        NodeUtil.containsFunction((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      NodeUtil.getStringNumberValue("==");
      boolean boolean0 = false;
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
      Node node0 = Node.newString(46, "==");
      Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);
      // Undeclared exception!
      try { 
        node1.addChildrenAfter(node0, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      NodeUtil.opToStrNoFail(97);
      Compiler compiler0 = new Compiler();
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      ExploitAssigns exploitAssigns0 = new ExploitAssigns();
      // Undeclared exception!
      try { 
        exploitAssigns0.getCodingConvention();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.AbstractPeepholeOptimization", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~J2h^uC");
      Node node0 = new Node(115, 115, 115);
      // Undeclared exception!
      try { 
        ControlFlowAnalysis.computeFallThrough(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      Node node0 = NodeUtil.booleanNode(false);
      NodeUtil.getImpureBooleanValue(node0);
      // Undeclared exception!
      try { 
        SimpleDefinitionFinder.getNameNodeFromFunctionNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isNumericResult(node0);
      boolean boolean1 = NodeUtil.isEmptyBlock(node0);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = NodeUtil.isSimpleOperatorType(33);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      boolean boolean3 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      assertFalse(boolean3 == boolean2);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*=");
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      NodeUtil.isSimpleOperator(node0);
      // Undeclared exception!
      try { 
        NodeUtil.hasCatchHandler(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(googleCodingConvention0);
      googleCodingConvention0.getAssertionFunctions();
      Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "");
      NodeUtil.isStrWhiteSpaceChar((-166));
      NodeUtil.getPureBooleanValue(node0);
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      // Undeclared exception!
      try { 
        jSTypeRegistry0.createInterfaceType("3(", node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)83;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean0 = NodeUtil.isSimpleOperatorType((byte)83);
      assertFalse(boolean0);
      
      Node node0 = Node.newString((-2201), ".d0|cUb9D5(", (int) (byte) (-12), (int) (byte) (-74));
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertNull(string0);
      
      boolean boolean1 = NodeUtil.isObjectLitKey(node0, node0);
      boolean boolean2 = NodeUtil.isPrototypeProperty(node0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(31);
      assertNull(string0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      boolean boolean1 = NodeUtil.isControlStructure(node0);
      assertFalse(boolean1);
      
      boolean boolean2 = NodeUtil.isSimpleOperatorType(39);
      assertTrue(boolean2 == boolean0);
      
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      boolean boolean3 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      boolean boolean4 = NodeUtil.isForIn(node1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx%", 129, (-1160));
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("nKL_.'");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)11;
      byteArray0[2] = (byte)14;
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      Node node1 = new Node(2080, node0, 32, 16);
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.isNumericResultHelper(node1);
      NodeUtil.isExprAssign(node1);
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      MockFileReader mockFileReader0 = new MockFileReader("nKL_.'");
      // Undeclared exception!
      try { 
        NodeUtil.getObjectLitKeyName(node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected node type: GETELEM 32
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1090.8852865276424");
      NodeUtil.containsType(node0, 1);
      // Undeclared exception!
      try { 
        peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node0.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      node1.children();
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node1.getInputId();
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected expression nodeEXPR_RESULT
         //  parent:null
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Node node0 = Node.newString(30, "Infinity");
      node0.getAncestors();
      Node node1 = new Node((-1739), node0, node0, 38, 45);
      node1.getQualifiedName();
      NodeUtil.getNumberValue(node1);
      int int0 = NodeUtil.getInverseOperator(12);
      assertEquals((-1), int0);
      
      String string0 = NodeUtil.trimJsWhiteSpace("%");
      assertEquals("%", string0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "*=");
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isExprCall(node0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(80, "quPRDt<57xvB+=Lg", 80, (-1751));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 80
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "6qW";
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6qW", "6qW");
      Node node1 = new Node((-5700), node0, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
      Node node2 = Node.newString(38, "6qW");
      // Undeclared exception!
      try { 
        NodeUtil.isBleedingFunctionName(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(12);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(39);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      peepholeSubstituteAlternateSyntax0.mayHaveSideEffects(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      // Undeclared exception!
      try { 
        NodeUtil.newHasLocalResult(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "c", "YT_p_?Lm;%s_TV");
      Node.newNumber(3207.9340773164);
      NodeUtil.isLoopStructure(node0);
      compiler0.parseSyntheticCode("com.google.javascript.jscomp.NodeUtil$VarCollector", "t");
      NodeUtil.isEmptyBlock(node0);
      node0.getJsDocBuilderForNode();
      // Undeclared exception!
      try { 
        NodeUtil.isTryCatchNodeContainer(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)68;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      boolean boolean0 = NodeUtil.isSimpleOperatorType((byte)68);
      Node node0 = Node.newString(".d0|cUb9D5(");
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertEquals(".d0|cUb9D5(", string0);
      
      boolean boolean1 = NodeUtil.isBooleanResultHelper(node0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      int int0 = 25;
      NodeUtil.isSimpleOperatorType(25);
      char[] charArray0 = new char[4];
      charArray0[0] = ' ';
      charArray0[1] = 'v';
      charArray0[2] = '{';
      charArray0[3] = 'p';
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, 25, 25);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(91, "quPRDt<57xvB+=Lg", 91, (-1707));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getBestLValueOwner(node0);
      NodeUtil.getNameReferenceCount(node0, "quPRDt<57xvB+=Lg");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(20);
      assertEquals(">>>", string0);
      assertNotNull(string0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      boolean boolean1 = NodeUtil.isControlStructure(node0);
      assertFalse(boolean1);
      
      boolean boolean2 = NodeUtil.isSimpleOperatorType(39);
      assertTrue(boolean2 == boolean0);
      
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      peepholeSubstituteAlternateSyntax0.mayHaveSideEffects(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      boolean boolean3 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      boolean boolean4 = NodeUtil.isForIn(node1);
      assertTrue(boolean4 == boolean3);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Node node0 = null;
      NodeUtil.getBestLValueName((Node) null);
      NodeUtil.numberNode(1.2, (Node) null);
      // Undeclared exception!
      try { 
        Node.newString(40, (String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(43);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      peepholeSubstituteAlternateSyntax0.mayHaveSideEffects(node0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.getOpFromAssignmentOp(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Not an assignment op:STRING isDef
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      System.setCurrentTimeMillis((-456L));
      boolean boolean0 = NodeUtil.isSimpleOperatorType(6);
      Node node0 = Node.newString("0:Q9I`p95Ib|,Wu");
      boolean boolean1 = NodeUtil.isWithinLoop(node0);
      assertTrue(boolean1 == boolean0);
      
      boolean boolean2 = NodeUtil.isSwitchCase(node0);
      Compiler compiler0 = new Compiler();
      InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
      Set<String> set0 = inlineSimpleMethods0.externMethods;
      boolean boolean3 = NodeUtil.isValidDefineValue(node0, set0);
      assertFalse(boolean3 == boolean2);
      assertTrue(boolean3);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      String string0 = "<=";
      Node node0 = Node.newString("<=");
      node0.getProp((-691));
      NodeUtil.getSourceFile(node0);
      NodeUtil.getBestJSDocInfo(node0);
      // Undeclared exception!
      try { 
        NodeUtil.tryMergeBlock(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      NodeUtil.isImmutableValue(node0);
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isNumericResult(node1);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.anyResultsMatch(node0, nodeUtil_MatchNodeType0);
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      System.setCurrentTimeMillis((-456L));
      boolean boolean0 = NodeUtil.isSimpleOperatorType(6);
      assertFalse(boolean0);
      
      Node node0 = new Node(6);
      boolean boolean1 = NodeUtil.isWithinLoop(node0);
      boolean boolean2 = NodeUtil.isSwitchCase(node0);
      Compiler compiler0 = new Compiler();
      InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
      Set<String> set0 = inlineSimpleMethods0.externMethods;
      boolean boolean3 = NodeUtil.isValidDefineValue(node0, set0);
      assertTrue(boolean3 == boolean1);
      
      boolean boolean4 = NodeUtil.isPrototypePropertyDeclaration(node0);
      assertTrue(boolean4 == boolean2);
      assertFalse(boolean4);
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      NodeUtil.opToStr(27);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~");
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      Node node0 = null;
      // Undeclared exception!
      try { 
        reorderConstantExpression0.optimizeSubtree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(".d0|cUb9D5(");
      NodeUtil.getArrayElementStringValue(node0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      NodeUtil.isControlStructure(node0);
      NodeUtil.getNumberValue(node0);
      // Undeclared exception!
      try { 
        NodeUtil.hasFinally(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-74);
      Node node0 = Node.newString(".d0|cUb9D5(");
      NodeUtil.getArrayElementStringValue(node0);
      NodeUtil.isBooleanResultHelper(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      NodeUtil.getNodeTypeReferenceCount(node0, 4095, nodeUtil_NumbericResultPredicate0);
      NodeUtil.redeclareVarsInsideBranch(node0);
      assertFalse(node0.isBreak());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isNumericResult(node1);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.isExprAssign(node1);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      boolean boolean0 = NodeUtil.isValidQualifiedName(".lc$4jn8 /(@R`");
      Node node0 = Node.newString(".lc$4jn8 /(@R`");
      Compiler compiler0 = new Compiler();
      boolean boolean1 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      NodeUtil.opToStr(64);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      Node node0 = null;
      // Undeclared exception!
      try { 
        reorderConstantExpression0.optimizeSubtree((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(".d0|cUb9D5(");
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertEquals(".d0|cUb9D5(", string0);
      
      boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.isControlStructure(node0);
      boolean boolean2 = NodeUtil.isAssociative(9);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = new Node((-2865), (-2865), (-2865));
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      NodeUtil.isPrototypeProperty(node1);
      NodeUtil.isImmutableValue(node0);
      node0.addChildrenToFront(node1);
      node1.isLocalResultCall();
      NodeUtil.isSimpleOperator(node0);
      // Undeclared exception!
      NodeUtil.isExecutedExactlyOnce(node0);
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isBleedingFunctionName(node0);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.anyResultsMatch(node0, nodeUtil_MatchNodeType0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(".d0|cUb9D5(");
      NodeUtil.getArrayElementStringValue(node0);
      NodeUtil.isBooleanResultHelper(node0);
      NodeUtil.isControlStructure(node0);
      SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
      NodeUtil.getCount(node0, sourceMap_DetailLevel0, sourceMap_DetailLevel0);
      System.setCurrentTimeMillis((-1L));
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      nodeUtil_NumbericResultPredicate0.equals(node0);
      node0.putBooleanProp((-5476), true);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(39);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      peepholeSubstituteAlternateSyntax0.mayHaveSideEffects(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      compiler0.getPropertyMap();
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      NodeUtil.trimJsWhiteSpace("-infinity");
      NodeUtil.isLoopStructure(node1);
      NodeUtil.has(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
      // Undeclared exception!
      try { 
        NodeUtil.precedence(55);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 55
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(86);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(50);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      NodeUtil.isStrWhiteSpaceChar(10);
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.isStatementParent((Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      String string0 = NodeUtil.trimJsWhiteSpace("`Q");
      assertEquals("`Q", string0);
      
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      ClosureCodingConvention closureCodingConvention1 = new ClosureCodingConvention(closureCodingConvention0);
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(closureCodingConvention1);
      Node node0 = NodeUtil.newQualifiedNameNode(codingConventions_Proxy0, "`Q");
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      node1.setSourceEncodedPosition(2);
      boolean boolean0 = NodeUtil.isForIn(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^*W1qwZ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-8);
      byteArray0[7] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean1 = NodeUtil.referencesThis(node1);
      boolean boolean2 = NodeUtil.isCommutative((-2475));
      assertTrue(boolean2 == boolean0);
      
      NodeUtil.getPureBooleanValue(node0);
      boolean boolean3 = NodeUtil.isLiteralValue(node0, false);
      assertTrue(boolean3 == boolean1);
      
      Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
      int int0 = NodeUtil.getCount(node0, predicate0, predicate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(18, node0, 4095, 50);
      Node node2 = new Node(18, node1, node1, 35, 42);
      Node node3 = peepholeFoldConstants0.optimizeSubtree(node2);
      Node node4 = NodeUtil.newUndefinedNode(node3);
      assertEquals(122, node4.getType());
      assertEquals(143402, node4.getSourcePosition());
      
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertEquals("false", string0);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(78, "quPRDt<57xvB+=Lg", 78, (-1707));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 78
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(89, "quPRDt<57xvB+=Lg", 89, (-1711));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getPrototypeClassName(node0);
      NodeUtil.getInverseOperator(8);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      NodeUtil.isStrWhiteSpaceChar(126);
      boolean boolean0 = NodeUtil.isValidPropertyName("KZ^Xnha+k;24l}SOZgI");
      assertFalse(boolean0);
      
      Node.newString("KZ^Xnha+k;24l}SOZgI", 126, (-2121));
      int int0 = NodeUtil.precedence(52);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(53, node0, node0);
      NodeUtil.isPrototypeProperty(node1);
      NodeUtil.isImmutableValue(node0);
      node1.isLocalResultCall();
      NodeUtil.isLatin("W");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx%", 129, (-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node0.getQualifiedName();
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.isNumericResultHelper(node1);
      NodeUtil.isExprAssign(node1);
      node1.toString();
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      NodeUtil.isSimpleOperatorType(31);
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("nKL_.'");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      NodeUtil.opToStr(103);
      Logger logger0 = Logger.getAnonymousLogger();
      LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
      Compiler compiler0 = new Compiler(loggerErrorManager0);
      TightenTypes tightenTypes0 = new TightenTypes(compiler0);
      // Undeclared exception!
      try { 
        tightenTypes0.getTypeRegistry();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isSimpleOperatorType(38);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      NodeUtil.isSimpleOperatorType(119);
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "7K,U8gt");
      Node node1 = NodeUtil.newExpr(node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false, true);
      ControlFlowAnalysis.computeFollowNode(node1, controlFlowAnalysis0);
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionBody((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = Node.newNumber(1090.8852865276424);
      Node node1 = peepholeRemoveDeadCode0.tryOptimizeBlock(node0);
      NodeUtil.getArrayElementStringValue(node1);
      // Undeclared exception!
      try { 
        NodeUtil.getArgumentForFunction(node1, (-942));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(18, node0, node0, 35, 42);
      // Undeclared exception!
      try { 
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test201()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(114, "quPRDt<57xvB+=Lg", 114, (-1707));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected expression nodeDO quPRDt<57xvB+=Lg
         //  parent:null
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test202()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = NodeUtil.booleanNode(false);
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
      assertTrue(boolean0);
      
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "false");
      String string1 = NodeUtil.trimJsWhiteSpace("false");
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test203()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(95, "quPRDt<57xvB+=Lg", 95, (-1711));
      NodeUtil.isSimpleOperatorType(47);
      NodeUtil.getPrototypeClassName(node0);
      NodeUtil.getInverseOperator(8);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test204()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Node node0 = Node.newString(".d0|cUb9D5(");
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.isControlStructure(node0);
      String string1 = NodeUtil.trimJsWhiteSpace(".d0|cUb9D5(");
      assertTrue(string1.equals((Object)string0));
      
      Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
      boolean boolean2 = NodeUtil.has(node0, predicate0, predicate0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test205()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(18);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test206()  throws Throwable  {
      String string0 = "eval";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "eval");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NodeUtil.precedence(41);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = null;
      // Undeclared exception!
      try { 
        ControlFlowAnalysis.getExceptionHandler((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.ControlFlowAnalysis", e);
      }
  }

  @Test(timeout = 4000)
  public void test207()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(23);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(39);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test208()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "8DOeTSnz(l)7FX_X");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      Node node1 = peepholeRemoveDeadCode0.optimizeSubtree(node0);
      boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
      boolean boolean1 = NodeUtil.isLoopStructure(node0);
      assertTrue(boolean1 == boolean0);
      
      node0.srcrefTree(node1);
      Node node2 = NodeUtil.newVarNode("<2RcHm/", node1);
      simpleErrorReporter0.error("l^b~VWgl*-s", "8DOeTSnz(l)7FX_X", 49, (-971));
      Node node3 = ControlFlowAnalysis.computeFallThrough(node2);
      node0.useSourceInfoIfMissingFrom(node3);
      assertEquals(118, node3.getType());
      
      int int0 = NodeUtil.precedence(12);
      assertEquals(8, int0);
      
      boolean boolean2 = NodeUtil.isAssignmentOp(node1);
      boolean boolean3 = NodeUtil.isGetOrSetKey(node0);
      assertTrue(boolean3 == boolean2);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test209()  throws Throwable  {
      NodeUtil.isStrWhiteSpaceChar(39);
      Node node0 = null;
      Node node1 = Node.newString(38, "\"");
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
      NodeUtil.getCount(node1, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
      // Undeclared exception!
      try { 
        NodeUtil.isStatementParent((Node) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test210()  throws Throwable  {
      boolean boolean0 = NodeUtil.isSimpleOperatorType(6);
      Node node0 = Node.newString("0:Q9I`p95Ib|,Wu");
      NodeUtil.isWithinLoop(node0);
      boolean boolean1 = NodeUtil.isSwitchCase(node0);
      Compiler compiler0 = new Compiler();
      InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
      Set<String> set0 = inlineSimpleMethods0.externMethods;
      boolean boolean2 = NodeUtil.isValidDefineValue(node0, set0);
      assertFalse(boolean2 == boolean0);
      
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(closureCodingConvention0);
      Node node1 = NodeUtil.newVarNode("prototype", node0);
      assertTrue(node1.isVar());
      
      boolean boolean3 = NodeUtil.isWithinLoop(node0);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
  }

  @Test(timeout = 4000)
  public void test211()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.isAssociative((-94));
      Node node0 = Node.newString("s");
      NodeUtil.isStatementParent(node0);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("9bIdM'%5K", "y");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // y
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test212()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(18, node0, 4095, 50);
      Node node2 = new Node(18, node1, node1, 35, 42);
      NodeUtil.getBestLValue(node0);
      NodeUtil.newUndefinedNode((Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.getPrototypePropertyName(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test213()  throws Throwable  {
      String string0 = NodeUtil.trimJsWhiteSpace("`Q");
      assertEquals("`Q", string0);
      
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      ClosureCodingConvention closureCodingConvention1 = new ClosureCodingConvention(closureCodingConvention0);
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(closureCodingConvention1);
      Node node0 = NodeUtil.newQualifiedNameNode(codingConventions_Proxy0, "`Q");
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      node1.setSourceEncodedPosition(2);
      boolean boolean0 = NodeUtil.isForIn(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^*W1qwZ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-8);
      byteArray0[7] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean1 = NodeUtil.isPrototypeProperty(node1);
      boolean boolean2 = NodeUtil.isCommutative((-2475));
      assertTrue(boolean2 == boolean0);
      
      NodeUtil.getPureBooleanValue(node0);
      boolean boolean3 = NodeUtil.isLiteralValue(node0, false);
      assertTrue(boolean3 == boolean1);
      
      Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
      int int0 = NodeUtil.getCount(node0, predicate0, predicate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test214()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newUndefinedNode((Node) null);
      boolean boolean0 = NodeUtil.isImmutableValue(node0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test215()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = new Node((-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node0.getQualifiedName();
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.evaluatesToLocalValue(node1);
      NodeUtil.isExprAssign(node1);
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("nKL_.'");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test216()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(18, node0, 4095, 50);
      Node node2 = new Node(18, node1, node1, 35, 42);
      peepholeFoldConstants0.optimizeSubtree(node2);
      NodeUtil.getBestLValueName(node0);
      assertEquals(43, node0.getType());
      assertFalse(node0.isTrue());
  }

  @Test(timeout = 4000)
  public void test217()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(48);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isForIn(node1);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test218()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node[] nodeArray0 = new Node[2];
      ExploitAssigns exploitAssigns0 = new ExploitAssigns();
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      MockPrintStream mockPrintStream0 = new MockPrintStream("com.google.javascript.jscomp.RenameVars$Assignment");
      Compiler compiler0 = new Compiler(mockPrintStream0);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "com.google.javascript.jscomp.RenameVars$Assignment", "com.google.javascript.jscomp.RenameVars$Assignment");
      Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
      Node node2 = exploitAssigns0.optimizeSubtree(node1);
      nodeArray0[0] = node2;
      Node node3 = new Node(0, (-1346), 55);
      nodeArray0[1] = node3;
      Node node4 = new Node(8298, nodeArray0);
      Double double0 = NodeUtil.getNumberValue(node4);
      assertNull(double0);
  }

  @Test(timeout = 4000)
  public void test219()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.booleanNode(false);
      NodeUtil.opToStr(46);
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream("9bIdM'%5K", "");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
         //
         // 
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test220()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx%", 129, (-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node0.getQualifiedName();
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.mayBeString(node1);
      NodeUtil.isExprAssign(node1);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("nKL_.'");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("nKL_.'");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test221()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(105, "quPRDt<57xvB+=Lg", 105, (-1707));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getBestLValueOwner(node0);
      NodeUtil.getNameReferenceCount(node0, "quPRDt<57xvB+=Lg");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test222()  throws Throwable  {
      NodeUtil.getStringNumberValue("0KfPr7s");
      NodeUtil.getInverseOperator(8194);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      Node node0 = null;
      // Undeclared exception!
      try { 
        NodeUtil.newName(closureCodingConvention0, "s", (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test223()  throws Throwable  {
      NodeUtil.getStringNumberValue("j]");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)104;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NaN");
      byteArray0[1] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NodeUtil.isSimpleOperatorType((byte)104);
      NodeUtil.opToStr((-1826));
      Node node0 = null;
      NodeUtil.getInputId((Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.newVarNode((String) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test224()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(83, "quPRDt<57xvB+=Lg", 83, (-1707));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected expression nodePARAM_LIST quPRDt<57xvB+=Lg
         //  parent:null
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test225()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isNumericResult(node1);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.anyResultsMatch(node0, nodeUtil_MatchNodeType0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      NodeUtil.opToStr(42);
      nodeArray0[1] = node1;
      node1.copyInformationFrom(node1);
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test226()  throws Throwable  {
      String string0 = NodeUtil.trimJsWhiteSpace("`Q");
      assertEquals("`Q", string0);
      
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      ClosureCodingConvention closureCodingConvention1 = new ClosureCodingConvention(closureCodingConvention0);
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(closureCodingConvention1);
      Node node0 = NodeUtil.newQualifiedNameNode(codingConventions_Proxy0, "`Q");
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      node1.setSourceEncodedPosition(2);
      boolean boolean0 = NodeUtil.isForIn(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^*W1qwZ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-8);
      byteArray0[7] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      boolean boolean1 = NodeUtil.referencesThis(node1);
      boolean boolean2 = NodeUtil.isCommutative((-2475));
      assertTrue(boolean2 == boolean0);
      
      NodeUtil.getPureBooleanValue(node0);
      boolean boolean3 = NodeUtil.isLiteralValue(node0, false);
      assertTrue(boolean3 == boolean1);
      
      Predicate<Node> predicate0 = new NodeUtil.MayBeStringResultPredicate();
      int int0 = NodeUtil.getCount(node0, predicate0, predicate0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test227()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6kFSBm", "6kFSBm");
      Node node1 = new Node(85, node0, node0, node0, 108, (-506));
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(12);
      NodeUtil.allResultsMatch(node1, nodeUtil_MatchNodeType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: SCRIPT [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533] of COMMA [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533]
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test228()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      String string0 = "`>lUS]{LyC";
      simpleErrorReporter0.warning(".<<", "`>lUS]{LyC", (-870), (-870));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      NodeUtil.isVarDeclaration(node0);
      NodeUtil.isRelationalOperation(node0);
      NodeUtil.getInverseOperator(15);
      // Undeclared exception!
      try { 
        NodeUtil.isExpressionResultUsed(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test229()  throws Throwable  {
      SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
      ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
      JSType jSType0 = modificationVisitor0.caseVoidType();
      // Undeclared exception!
      try { 
        NodeUtil.getObjectLitKeyTypeFromValueType((Node) null, jSType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test230()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
      Node node0 = NodeUtil.booleanNode(true);
      Node node1 = new Node(18, node0, 4095, 50);
      Node node2 = new Node(18, node1, node1, 35, 42);
      Node node3 = NodeUtil.newUndefinedNode(node2);
      NodeUtil.getBestLValueName(node3);
      String string0 = NodeUtil.arrayToString(node3);
      assertNotNull(string0);
      assertEquals(143402, node3.getSourcePosition());
      assertEquals("0", string0);
      assertTrue(node0.isTrue());
  }

  @Test(timeout = 4000)
  public void test231()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx%", 129, (-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node1);
      Node node2 = peepholeSimplifyRegExp0.optimizeSubtree(node1);
      node0.getQualifiedName();
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.isNumericResultHelper(node1);
      // Undeclared exception!
      try { 
        NodeUtil.mayEffectMutableState(node2);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test232()  throws Throwable  {
      String string0 = "g.";
      NodeUtil.isValidQualifiedName("g.");
      boolean boolean0 = false;
      Node node0 = NodeUtil.booleanNode(false);
      Node node1 = new Node(27, node0, node0, node0);
      node1.getJsDocBuilderForNode();
      node1.setLength(47);
      node0.putIntProp(53, 42);
      // Undeclared exception!
      try { 
        node1.setQuotedString();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // not a StringNode
         //
         verifyException("com.google.javascript.rhino.Node", e);
      }
  }

  @Test(timeout = 4000)
  public void test233()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = new Node(29, 37, 49);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isNumericResult(node1);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.anyResultsMatch(node0, nodeUtil_MatchNodeType0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test234()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "6qW";
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6qW", "6qW");
      Node node1 = new Node((-5700), node0, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
      Node node2 = Node.newString(38, "6qW");
      NodeUtil.getBestJSDocInfo(node0);
      node2.setOptionalArg(true);
      // Undeclared exception!
      try { 
        NodeUtil.isBleedingFunctionName(node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test235()  throws Throwable  {
      boolean boolean0 = NodeUtil.isSimpleOperatorType(6);
      assertFalse(boolean0);
      
      Node node0 = Node.newString("0:Q9I`p95Ib|,Wu");
      boolean boolean1 = NodeUtil.isWithinLoop(node0);
      boolean boolean2 = NodeUtil.isSwitchCase(node0);
      Compiler compiler0 = new Compiler();
      InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
      Set<String> set0 = inlineSimpleMethods0.externMethods;
      Level level0 = Level.ALL;
      Compiler.setLoggingLevel(level0);
      boolean boolean3 = NodeUtil.isValidDefineValue(node0, set0);
      assertFalse(boolean3 == boolean1);
      
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(closureCodingConvention0);
      PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
      Node node1 = peepholeCollectPropertyAssignments0.optimizeSubtree(node0);
      NodeUtil.isConstantByConvention(jqueryCodingConvention0, node1, node0);
      Node node2 = NodeUtil.newVarNode("prototype", node0);
      assertTrue(node2.isVar());
      
      Node node3 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "Variable {0} not declared before @lends annotation.");
      boolean boolean4 = NodeUtil.canBeSideEffected(node1, set0);
      assertTrue(boolean4 == boolean2);
      
      NodeUtil.opToStr(113);
      Node node4 = NodeUtil.getRootOfQualifiedName(node3);
      assertTrue(node3.hasMoreThanOneChild());
      assertEquals(0, node4.getChildCount());
  }

  @Test(timeout = 4000)
  public void test236()  throws Throwable  {
      NodeUtil.getStringNumberValue(" x9E_|0t]Y}FAJTF?(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)104;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NaN");
      byteArray0[1] = (byte)91;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NodeUtil.isSimpleOperatorType(1006);
      NodeUtil.opToStr((byte)104);
      Node node0 = null;
      NodeUtil.getInputId((Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.newVarNode((String) null, (Node) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // StringNode: str is null
         //
         verifyException("com.google.javascript.rhino.Node$StringNode", e);
      }
  }

  @Test(timeout = 4000)
  public void test237()  throws Throwable  {
      ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
      Node node0 = Node.newNumber(0.0);
      Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
      NodeUtil.getLoopCodeBlock(node1);
      Node node2 = NodeUtil.numberNode(Double.NaN, (Node) null);
      assertNotNull(node2);
      
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      int int0 = NodeUtil.getCount(node2, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
      assertEquals(1, int0);
      assertFalse(node2.isNumber());
  }

  @Test(timeout = 4000)
  public void test238()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(100, "quPRDt<57xvB+=Lg", 100, (-1707));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test239()  throws Throwable  {
      NodeUtil.opToStr(97);
      NodeUtil.isValidQualifiedName("%=");
      NodeUtil.precedence(97);
      NodeUtil.isValidQualifiedName("g");
      NodeUtil.isValidSimpleName("g");
      Compiler compiler0 = new Compiler();
      Compiler.IntermediateState compiler_IntermediateState0 = compiler0.getState();
      Node node0 = compiler_IntermediateState0.externsRoot;
      compiler0.parseSyntheticCode("%=", "g");
      // Undeclared exception!
      try { 
        NodeUtil.getRValueOfLValue((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test240()  throws Throwable  {
      PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(true);
      Node node0 = NodeUtil.booleanNode(true);
      Node node1 = new Node(18, node0, 4095, 50);
      // Undeclared exception!
      try { 
        peepholeFoldConstants0.optimizeSubtree(node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test241()  throws Throwable  {
      NodeUtil.trimJsWhiteSpace("`Q");
      PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      ClosureCodingConvention closureCodingConvention1 = new ClosureCodingConvention(closureCodingConvention0);
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(closureCodingConvention1);
      Node node0 = NodeUtil.newQualifiedNameNode(codingConventions_Proxy0, "`Q");
      Node node1 = peepholeReplaceKnownMethods0.optimizeSubtree(node0);
      node1.setSourceEncodedPosition(2);
      NodeUtil.isForIn(node1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "^*W1qwZ");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)34;
      byteArray0[2] = (byte) (-6);
      byteArray0[3] = (byte) (-94);
      byteArray0[4] = (byte)28;
      byteArray0[5] = (byte) (-65);
      byteArray0[6] = (byte) (-8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      NodeUtil.referencesThis(node1);
      NodeUtil.isCommutative((-2475));
      NodeUtil.getPureBooleanValue(node0);
      NodeUtil.isLiteralValue(node0, false);
      Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
      NodeUtil.getCount(node0, predicate0, predicate0);
      String string0 = NodeUtil.getArrayElementStringValue(node0);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test242()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6qW", "6qW");
      Node node1 = new Node(45, node0, node0, node0, node0);
      ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false, false);
      Node.newString(38, "6qW");
      NodeUtil.getBestJSDocInfo(node0);
      NodeUtil.isSymmetricOperation(node1);
      NodeUtil.isStatementParent(node1);
      Node node2 = null;
      NodeUtil.newUndefinedNode((Node) null);
      Compiler compiler1 = new Compiler();
      PassConfig passConfig0 = compiler1.getPassConfig();
      // Undeclared exception!
      try { 
        compiler1.setPassConfig(passConfig0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // this.passes has already been assigned
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test243()  throws Throwable  {
      NodeUtil.opToStr(101);
      NodeUtil.isCommutative(101);
      NodeUtil.precedence(101);
      NodeUtil.isValidQualifiedName("g");
      NodeUtil.isValidSimpleName("g");
      Compiler compiler0 = new Compiler();
      Compiler.IntermediateState compiler_IntermediateState0 = compiler0.getState();
      Node node0 = compiler_IntermediateState0.externsRoot;
      compiler0.parseSyntheticCode("&&", "g");
      // Undeclared exception!
      try { 
        NodeUtil.getRValueOfLValue((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test244()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Compiler compiler0 = new Compiler();
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6kFSBm", "6kFSBm");
      Node node1 = new Node(85, node0, node0, node0, 108, (-506));
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(12);
      NodeUtil.allResultsMatch(node1, nodeUtil_MatchNodeType0);
      NodeUtil.opToStr(50);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: SCRIPT [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533] of COMMA [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533]
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test245()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.getBestLValueOwner((Node) null);
      // Undeclared exception!
      try { 
        NodeUtil.isAssignmentOp((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test246()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "6kFSBm", "6kFSBm");
      Node node1 = new Node(85, node0, node0, node0, 108, 102);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(12);
      NodeUtil.allResultsMatch(node1, nodeUtil_MatchNodeType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
      nodeUtil_MatchShallowStatement0.apply(node0);
      node1.clonePropsFrom(node0);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Invalid attempt to remove node: SCRIPT [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533] of COMMA 108 [source_file: com.google.javascript.rhino.Node$ObjectPropListItem@0000000532] [input_id: com.google.javascript.rhino.Node$ObjectPropListItem@0000000533]
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test247()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      PrintStream printStream0 = null;
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      nodeUtil_NumbericResultPredicate0.apply(node0);
      NodeUtil.opToStr(15);
      // Undeclared exception!
      try { 
        SimpleDefinitionFinder.getNameNodeFromFunctionNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test248()  throws Throwable  {
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      Node node0 = NodeUtil.booleanNode(true);
      NodeUtil.mayEffectMutableState(node0);
      NodeUtil.isUndefined(node0);
      node0.getInputId();
      MockFile mockFile0 = new MockFile("QePty^tk", "QePty^tk");
      File file0 = MockFile.createTempFile("QePty^tk", "QePty^tk", (File) mockFile0);
      Set<String> set0 = WhitelistWarningsGuard.loadWhitelistedJsWarnings(file0);
      NodeUtil.isValidDefineValue(node0, set0);
      Node node1 = new Node(520, node0, node0, node0, node0, 65377, 1);
      Node.newNumber((double) 38, 8192, 46);
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionParameters(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test249()  throws Throwable  {
      NodeUtil.isSimpleOperatorType(46);
      Node node0 = Node.newNumber((double) 46, 46, 24);
      Node[] nodeArray0 = new Node[8];
      Node.newNumber((-1461.3));
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      nodeArray0[0] = node0;
      nodeArray0[1] = node0;
      nodeArray0[2] = node0;
      nodeArray0[3] = node0;
      nodeArray0[4] = node0;
      nodeArray0[5] = node0;
      nodeArray0[6] = node0;
      nodeArray0[7] = node0;
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test250()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      NodeUtil.precedence(13);
      Node node0 = Node.newString("? kh[r]AA", 8, 8);
      JSDocInfo jSDocInfo0 = new JSDocInfo();
      Node node1 = Node.newString("? kh[r]AA", 29, 53);
      // Undeclared exception!
      try { 
        node0.replaceChildAfter(node1, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // prev is not a child of this node.
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test251()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(93, "quPRDt<57xvB+=Lg", 93, (-1707));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getBestLValueOwner(node0);
      NodeUtil.getNameReferenceCount(node0, "quPRDt<57xvB+=Lg");
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test252()  throws Throwable  {
      GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
      googleCodingConvention0.isConstant("(");
      Node node0 = new Node(6);
      googleCodingConvention0.describeFunctionBind(node0, false);
      NodeUtil.newQualifiedNameNode(googleCodingConvention0, "CZ.:e)!N*'GW:YcAK");
      AbstractCompiler abstractCompiler0 = null;
      CheckLevel checkLevel0 = CheckLevel.OFF;
      CheckMissingReturn checkMissingReturn0 = new CheckMissingReturn((AbstractCompiler) null, checkLevel0);
      TypedScopeCreator typedScopeCreator0 = null;
      try {
        typedScopeCreator0 = new TypedScopeCreator((AbstractCompiler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.TypedScopeCreator", e);
      }
  }

  @Test(timeout = 4000)
  public void test253()  throws Throwable  {
      NodeUtil.getStringNumberValue(" x9E_|0t]Y}FAJTF?(");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)104;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "NaN");
      byteArray0[1] = (byte)91;
      NodeUtil.isSimpleOperatorType(994);
      NodeUtil.opToStrNoFail((byte)91);
      Node node0 = null;
      NodeUtil.getInputId((Node) null);
      Node node1 = NodeUtil.newVarNode(">>=", (Node) null);
      int int0 = 641;
      // Undeclared exception!
      try { 
        NodeUtil.getConditionExpression(node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // VAR does not have a condition.
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test254()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      String string0 = NodeUtil.opToStr(16);
      assertNotNull(string0);
      assertEquals(">", string0);
      
      boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
      assertFalse(boolean0);
      
      boolean boolean1 = NodeUtil.isControlStructure(node0);
      boolean boolean2 = NodeUtil.isSimpleOperatorType(39);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      boolean boolean3 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      boolean boolean4 = NodeUtil.isForIn(node1);
      assertTrue(boolean4 == boolean2);
      
      boolean boolean5 = NodeUtil.referencesThis(node0);
      assertTrue(boolean5 == boolean3);
      
      boolean boolean6 = NodeUtil.isExprCall(node0);
      assertTrue(boolean6 == boolean1);
      assertFalse(boolean6);
  }

  @Test(timeout = 4000)
  public void test255()  throws Throwable  {
      int int0 = 15;
      NodeUtil.isSimpleOperatorType(15);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      NodeUtil.isValidSimpleName(".prototype.");
      NodeUtil.opToStr(101);
      ByteArrayOutputStream byteArrayOutputStream0 = null;
      try {
        byteArrayOutputStream0 = new ByteArrayOutputStream((-4414));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Negative initial size: -4414
         //
         verifyException("java.io.ByteArrayOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test256()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      String string0 = "isDef";
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(31);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(12);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      PeepholeSubstituteAlternateSyntax.containsUnicodeEscape("isDef");
      peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      // Undeclared exception!
      try { 
        compiler0.initInputsByIdMap();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test257()  throws Throwable  {
      Stack<JSType> stack0 = new Stack<JSType>();
      int int0 = 112;
      // Undeclared exception!
      try { 
        NodeUtil.precedence(112);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Unknown precedence for DEFAULT_CASE (type 112)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test258()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(16);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      Node node1 = NodeUtil.getBestLValueOwner(node0);
      assertNull(node1);
  }

  @Test(timeout = 4000)
  public void test259()  throws Throwable  {
      NodeUtil.opToStr(78);
      NodeUtil.isCommutative(78);
      // Undeclared exception!
      try { 
        NodeUtil.precedence(78);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 78
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test260()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(120, "quPRDt<57xvB+=Lg", 120, 103);
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Unexpected expression nodeCATCH quPRDt<57xvB+=Lg 120
         //  parent:null
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test261()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(79, "quPRDt<57xvB+=Lg", 79, (-1711));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 79
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test262()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(62, "quPRDt<57xvB+=Lg", 62, (-1707));
      // Undeclared exception!
      try { 
        NodeUtil.evaluatesToLocalValue(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 62
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test263()  throws Throwable  {
      NodeUtil.opToStr(98);
      NodeUtil.isCommutative(98);
      NodeUtil.precedence(98);
      NodeUtil.isValidQualifiedName("g");
      NodeUtil.isValidSimpleName("g");
      Compiler compiler0 = new Compiler();
      // Undeclared exception!
      try { 
        compiler0.parseSyntheticCode((String) null, "g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // a source must have a name
         //
         verifyException("com.google.javascript.jscomp.SourceFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test264()  throws Throwable  {
      int int0 = NodeUtil.precedence(18);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test265()  throws Throwable  {
      NodeUtil.isCommutative(90);
      NodeUtil.precedence(90);
      NodeUtil.isSimpleOperatorType(90);
      NodeUtil.isValidSimpleName("g");
      Compiler compiler0 = new Compiler();
      Compiler.IntermediateState compiler_IntermediateState0 = compiler0.getState();
      Node node0 = compiler_IntermediateState0.externsRoot;
      // Undeclared exception!
      try { 
        NodeUtil.getRValueOfLValue((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test266()  throws Throwable  {
      NodeUtil.getStringValue(1090.8852865276424);
      PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
      Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "1090.8852865276424");
      NodeUtil.isSymmetricOperation(node0);
      NodeUtil.getPrototypeClassName(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getFunctionName((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test267()  throws Throwable  {
      String string0 = "ASSIGN_BITXOR";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ASSIGN_BITXOR");
      NodeUtil.getStringNumberValue("");
      NodeUtil.isSimpleOperatorType(29);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(29);
      ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
      nodeUtil_MatchNodeType0.equals("");
      CodingConventions.Proxy codingConventions_Proxy0 = new CodingConventions.Proxy(closureCodingConvention0);
      JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(codingConventions_Proxy0);
      Compiler compiler0 = new Compiler();
      nodeUtil_MatchNodeType0.equals("ASSIGN_BITXOR");
      // Undeclared exception!
      try { 
        compiler0.ensureLibraryInjected((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Compiler", e);
      }
  }

  @Test(timeout = 4000)
  public void test268()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(9);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(45);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isStatementParent(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test269()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)57;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      NodeUtil.precedence(16);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(9);
      nodeUtil_MatchNodeType0.equals("=(X7YnR-");
      Enumeration<PushbackInputStream> enumeration0 = (Enumeration<PushbackInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      nodeUtil_MatchNodeType0.equals(sequenceInputStream0);
      Node node0 = null;
      // Undeclared exception!
      try { 
        nodeUtil_MatchNodeType0.apply((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test270()  throws Throwable  {
      String string0 = "quPRDt<57xvB+=Lg";
      Node node0 = Node.newString(43, "quPRDt<57xvB+=Lg", 43, (-1711));
      NodeUtil.evaluatesToLocalValue(node0);
      NodeUtil.getPrototypeClassName(node0);
      // Undeclared exception!
      try { 
        NodeUtil.removeChild(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test271()  throws Throwable  {
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      Node node0 = NodeUtil.booleanNode(true);
      node0.setOptionalArg(true);
      Node node1 = NodeUtil.newExpr(node0);
      node1.isVarArgs();
      NodeUtil.redeclareVarsInsideBranch(node1);
      NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
      node0.getInputId();
      nodeUtil_MayBeStringResultPredicate0.apply(node1);
      NodeUtil.isNumericResult(node1);
      NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(4095);
      NodeUtil.anyResultsMatch(node0, nodeUtil_MatchNodeType0);
      Node[] nodeArray0 = new Node[2];
      nodeArray0[0] = node1;
      nodeArray0[1] = node1;
      NodeUtil.opToStr(39);
      // Undeclared exception!
      try { 
        NodeUtil.newCallNode(node1, (Node[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test272()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Node node0 = Node.newNumber((-940.0), 3182, 1793);
      Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
      NodeUtil.evaluatesToLocalValue(node0, predicate0);
      NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
      nodeUtil_MatchDeclaration0.apply(node0);
      // Undeclared exception!
      try { 
        NodeUtil.getCatchBlock(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test273()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(41);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(45);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isStatementParent(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test274()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+}&|(6nS9N/>[4YCOy");
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);
      NodeUtil.precedence(96);
      Stack<JSType> stack0 = new Stack<JSType>();
      Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
      // Undeclared exception!
      try { 
        NodeUtil.getConditionExpression(node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // PARAM_LIST does not have a condition.
         //
         verifyException("com.google.javascript.jscomp.NodeUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test275()  throws Throwable  {
      PeepholeSimplifyRegExp peepholeSimplifyRegExp0 = new PeepholeSimplifyRegExp();
      Node node0 = Node.newString("P[%.x73Fx", 129, (-1160));
      Node node1 = new Node(2080, node0, 32, 16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      node0.addChildToFront(node1);
      Node node2 = NodeUtil.newUndefinedNode(node0);
      node0.getQualifiedName();
      node2.getSideEffectFlags();
      NodeUtil.getImpureBooleanValue(node2);
      node1.setType(35);
      NodeUtil.isNumericResultHelper(node1);
      NodeUtil.isExprAssign(node1);
      Compiler compiler0 = new Compiler((PrintStream) null);
      RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
      compiler0.getTypedScopeCreator();
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, removeUnusedClassProperties0, (ScopeCreator) null);
      String string0 = "NiT0F)Embt|RCBXl`";
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("nKL_.'");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test276()  throws Throwable  {
      NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
      Node node0 = Node.newString("isDef");
      NodeUtil.getSourceFile(node0);
      NodeUtil.opToStr(40);
      NodeUtil.isFunctionObjectApply(node0);
      NodeUtil.isControlStructure(node0);
      NodeUtil.isSimpleOperatorType(45);
      PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
      Node node1 = ControlFlowAnalysis.computeFallThrough(node0);
      Compiler compiler0 = new Compiler((PrintStream) null);
      NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
      NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
      NodeUtil.isStatementParent(node0);
      // Undeclared exception!
      try { 
        NodeUtil.isControlStructureCodeBlock(node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test277()  throws Throwable  {
      // Undeclared exception!
      try { 
        NodeUtil.precedence(104);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 104
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }

  @Test(timeout = 4000)
  public void test278()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)107;
      byteArray0[1] = (byte)126;
      byte byte0 = (byte)118;
      byteArray0[2] = (byte)118;
      byte byte1 = (byte)26;
      byteArray0[3] = (byte)26;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        NodeUtil.precedence(107);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // 107
         //
         verifyException("com.google.javascript.rhino.Token", e);
      }
  }
}
