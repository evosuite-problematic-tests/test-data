/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 07 04:28:52 GMT 2019
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.jscomp.TypedScopeCreator;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TypedScopeCreator_ESTest extends TypedScopeCreator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.google.javascript.jscomp.TypedScopeCreator$DiscoveEnusAndTypedefs");
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Compiler compiler1 = new Compiler();
      Node node0 = compiler1.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createScope(node0, (Scope) null);
      assertEquals(33, scope0.getVarCount());
      
      typedScopeCreator0.patchGlobalScope(scope0, node0);
      assertEquals(32, scope0.getVarCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.google.javascript.jscomp.TypedScopeCreator$DiscoveEnusAndTypedefs");
      Compiler compiler0 = new Compiler();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "=uupB");
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Compiler compiler1 = new Compiler();
      Node node0 = compiler1.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      assertEquals(32, scope0.getVarCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "GqVB5<f5&dvHeNTSm");
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Compiler compiler1 = new Compiler();
      Node node0 = compiler1.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      assertFalse(scope0.isLocal());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.google.javascript.jscomp.TypedScopeCreator$DiscoveEnusAndTypedefs");
      Compiler compiler0 = new Compiler();
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "=uupB");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "=uupB");
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      Compiler compiler1 = new Compiler();
      Node node1 = compiler1.parse(jSSourceFile0);
      Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
      assertEquals(0, scope1.getVarCount());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      Node node1 = Node.newNumber((-1.0));
      Node node2 = new Node(51, node0, node1, node0, node1, 0, 36);
      Scope scope1 = typedScopeCreator0.createScope(node2, scope0);
      assertFalse(scope1.isGlobal());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Node node1 = new Node(41, node0, node0, node0);
      Scope scope0 = typedScopeCreator0.createScope(node1, (Scope) null);
      assertTrue(scope0.isGlobal());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.google.javascript.jscomp.TypedScopeCreator$DxscoveEnusAndTVpedefs");
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Compiler compiler1 = new Compiler();
      Node node1 = compiler1.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      node1.setType(49);
      Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
      assertEquals(1, scope1.getVarCount());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.google.javascript.jscomp.TypedScopeCreator$DiscoverEnumsAndTypedefs");
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      jSSourceFile0.setIsExtern(false);
      Compiler compiler1 = new Compiler();
      Node node1 = compiler1.parse(jSSourceFile0);
      Scope scope1 = typedScopeCreator0.createScope(node1, scope0);
      assertEquals(1, scope1.getVarCount());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("0Q&Q/af9t?");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "com.google.javascript.jscomp.TypedScopeCreator$DiscoveEnusAndTypedefs");
      Compiler compiler0 = new Compiler();
      JSSourceFile jSSourceFile0 = JSSourceFile.fromFile("0Q&Q/af9t?");
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compilerOptions0.ideMode = true;
      compiler0.compile(jSSourceFile0, jSSourceFile0, compilerOptions0);
      TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
      Node node0 = compiler0.parse(jSSourceFile0);
      Scope scope0 = typedScopeCreator0.createInitialScope(node0);
      Node node1 = compiler0.parse(jSSourceFile0);
      Node node2 = new Node(51, node0, node1, node0, node1, 0, 36);
      Scope scope1 = typedScopeCreator0.createScope(node2, scope0);
      assertEquals(32, scope0.getVarCount());
      assertEquals(1, scope1.getVarCount());
  }
}
