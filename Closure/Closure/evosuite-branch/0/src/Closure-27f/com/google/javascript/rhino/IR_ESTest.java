/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 07 03:39:26 GMT 2019
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.IR;
import com.google.javascript.rhino.Node;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IR_ESTest extends IR_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = IR.empty();
      Node node1 = new Node(75, node0, node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = IR.block();
      // Undeclared exception!
      try { 
        IR.doNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = IR.labelName(".");
      // Undeclared exception!
      try { 
        IR.catchNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.paramList((List<Node>) linkedList0);
      // Undeclared exception!
      try { 
        IR.tryFinally(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Node node0 = IR.paramList();
      // Undeclared exception!
      try { 
        IR.breakNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.ifNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.exprResult(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
      try { 
        IR.and(nodeArray0[7], nodeArray0[4]);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = IR.falseNode();
      Node node1 = IR.sheq(node0, node0);
      Node node2 = IR.neg(node1);
      assertEquals(45, node1.getType());
      assertEquals(29, node2.getType());
      assertEquals(43, node0.getType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.label(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = IR.falseNode();
      // Undeclared exception!
      try { 
        IR.tryCatchFinally(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = IR.falseNode();
      Node node1 = IR.not(node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = IR.falseNode();
      // Undeclared exception!
      try { 
        IR.assign(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = IR.string("");
      Node node1 = IR.getelem(node0, node0);
      assertEquals(35, node1.getType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Node node0 = IR.trueNode();
      // Undeclared exception!
      try { 
        IR.function(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = IR.number(48);
      assertFalse(node0.isNE());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = Node.newString("Vn|u!0x[L.F!Ppq", 114, 8207);
      Node node1 = IR.or(node0, node0);
      // Undeclared exception!
      try { 
        IR.add(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Node node0 = IR.thisNode();
      Node node1 = IR.throwNode(node0);
      assertTrue(node1.isThrow());
      assertTrue(node0.isThis());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = IR.name("k4Urr~f(B]D");
      assertTrue(node0.isQualifiedName());
      
      Node node1 = IR.assign(node0, node0);
      assertTrue(node1.isAssign());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      Node node0 = Node.newString("]!0F{U|m");
      // Undeclared exception!
      try { 
        IR.block(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = IR.string("");
      // Undeclared exception!
      try { 
        IR.getprop(node0, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node node0 = IR.string("");
      Node node1 = IR.sub(node0, node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node node0 = new Node(119, 1120, 119);
      // Undeclared exception!
      try { 
        IR.pos(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.paramList(nodeArray0);
      // Undeclared exception!
      try { 
        IR.caseNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node node0 = Node.newString((-2181), "");
      // Undeclared exception!
      try { 
        IR.tryCatch(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node node0 = IR.falseNode();
      Node node1 = IR.neg(node0);
      assertEquals(43, node0.getType());
      assertEquals(29, node1.getType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node node0 = IR.paramList();
      // Undeclared exception!
      try { 
        IR.continueNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = IR.block();
      IR.defaultCase(node0);
      assertTrue(node0.isSyntheticBlock());
      assertFalse(node0.wasEmptyNode());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.regexp(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = IR.string("q");
      // Undeclared exception!
      try { 
        IR.paramList(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Node node0 = IR.returnNode();
      Node[] nodeArray0 = new Node[8];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.block(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        IR.paramList(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.falseNode();
      linkedList0.add(node0);
      // Undeclared exception!
      try { 
        IR.paramList((List<Node>) linkedList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node[] nodeArray0 = new Node[8];
      // Undeclared exception!
      try { 
        IR.block(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.paramList((List<Node>) linkedList0);
      // Undeclared exception!
      try { 
        IR.var(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Node node0 = IR.name("#*gE_L/:");
      Node node1 = Node.newString(32, "#*gE_L/:", 39, 49);
      Node node2 = IR.var(node0, node1);
      // Undeclared exception!
      try { 
        IR.var(node0, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = IR.name("R-");
      Node node1 = Node.newString(32, "R-", 39, 49);
      Node node2 = IR.var(node0, node1);
      // Undeclared exception!
      try { 
        IR.forNode(node2, node0, node2, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      Node node1 = IR.newNode(node0, nodeArray0);
      Node node2 = IR.switchNode(node1, nodeArray0);
      assertEquals(110, node2.getType());
      assertTrue(node0.isBlock());
      assertTrue(node1.isNew());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node node0 = IR.string("");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.switchNode(nodeArray0[0], nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.labelName("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.objectlit(nodeArray0);
      Node node1 = IR.call(node0, nodeArray0);
      assertEquals(37, node1.getType());
      assertEquals(64, node0.getType());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = IR.stringKey("MUL");
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.call(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = IR.stringKey("NOT_NULL");
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.objectlit(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node node0 = new Node(94);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.objectlit(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = IR.stringKey("Uq1L\"(");
      Node node1 = Node.newString("Uq1L\"(", 16, 4602);
      Node node2 = IR.propdef(node0, node1);
      // Undeclared exception!
      try { 
        IR.propdef(node2, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = Node.newString("XQoq{N,");
      nodeArray0[0] = node0;
      Node node1 = IR.arraylit(nodeArray0);
      Node node2 = IR.add(node1, node1);
      assertTrue(node1.hasOneChild());
      assertEquals(21, node2.getType());
      assertTrue(node1.isArrayLit());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      Node node0 = IR.empty();
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = IR.name("");
      node0.setType(105);
      Node node1 = IR.block(node0);
      assertEquals(125, node1.getType());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = IR.name("");
      node0.setType(114);
      Node node1 = IR.block(node0);
      assertEquals(125, node1.getType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = IR.name("");
      node0.setType(115);
      Node node1 = IR.block(node0);
      assertTrue(node1.isBlock());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node[] nodeArray0 = new Node[1];
      Node node0 = IR.breakNode();
      assertEquals(116, node0.getType());
      
      nodeArray0[0] = node0;
      Node node1 = IR.script(nodeArray0);
      assertEquals(1, node1.getChildCount());
      assertEquals(132, node1.getType());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = IR.continueNode();
      Node node1 = IR.block(node0);
      assertEquals(117, node0.getType());
      assertTrue(node1.isBlock());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = IR.empty();
      Node node1 = IR.block(node0);
      assertTrue(node0.isEmpty());
      assertTrue(node1.isBlock());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = IR.block();
      Node node1 = IR.block(node0);
      assertTrue(node1.hasOneChild());
      assertEquals(125, node1.getType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = Node.newString(126, ";3;");
      Node node1 = IR.block(node0);
      assertEquals(125, node1.getType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString(152, "3;");
      Node node1 = IR.block(node0);
      assertEquals(125, node1.getType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = Node.newString(103, "Sc+Cwv9Np_*qbQ`.", 4329, 103);
      Node node1 = IR.eq(node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = new Node(14, (-630), 14);
      Node node1 = IR.throwNode(node0);
      assertTrue(node1.isThrow());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = IR.breakNode();
      Node node1 = new Node(15, node0, node0, node0, 49, 54);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node[] nodeArray0 = new Node[6];
      Node node0 = Node.newString(16, "RzHZZgb");
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(19);
      Node node1 = IR.voidNode(node0);
      assertEquals(122, node1.getType());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = new Node(20, (-630), 20);
      Node node1 = IR.throwNode(node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 471, 2023);
      Node node1 = IR.add(node0, node0);
      Node node2 = IR.comma(node1, node1);
      assertTrue(node1.isAdd());
      assertTrue(node2.isComma());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = new Node(25, (-630), 25);
      Node node1 = IR.throwNode(node0);
      assertTrue(node1.isThrow());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = new Node(27);
      Node node1 = IR.voidNode(node0);
      assertEquals(122, node1.getType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = new Node(28, (-3681), 28);
      Node node1 = IR.pos(node0);
      assertEquals(28, node1.getType());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = Node.newString("", 65535, 1180);
      Node node1 = IR.neg(node0);
      // Undeclared exception!
      try { 
        IR.hook(node1, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = IR.name("R-");
      Node node1 = Node.newString(31, "R-", 39, 49);
      Node node2 = IR.var(node0, node1);
      assertTrue(node0.hasOneChild());
      assertEquals(118, node2.getType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = IR.block();
      Node node1 = new Node(35);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node[] nodeArray0 = new Node[7];
      Node node0 = new Node(113, 113, 113);
      nodeArray0[0] = node0;
      Node node1 = new Node(36, node0, nodeArray0[0], node0, node0);
      // Undeclared exception!
      try { 
        IR.comma(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = new Node(37, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = IR.block();
      Node node1 = new Node(46, node0, node0, node0, node0, 29, 29);
      Node node2 = IR.neg(node1);
      assertEquals(29, node2.getType());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = Node.newString("N'<W0^,a=", 0, 9);
      Node node1 = IR.regexp(node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = IR.thisNode();
      Node node1 = new Node(48, node0, node0, node0, 29, 16);
      // Undeclared exception!
      try { 
        IR.neg(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 471, 471);
      Node node1 = new Node(50);
      // Undeclared exception!
      try { 
        IR.ifNode(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = IR.labelName("A");
      node0.type = 51;
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = IR.name("");
      Node node1 = Node.newString(52, "");
      // Undeclared exception!
      try { 
        IR.forNode(node1, node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = new Node(53);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = IR.continueNode();
      Node node1 = new Node(54, node0, node0);
      // Undeclared exception!
      try { 
        IR.comma(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = new Node(57);
      // Undeclared exception!
      try { 
        IR.hook(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = new Node(58);
      // Undeclared exception!
      try { 
        IR.hook(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = new Node(59);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = new Node(60);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(61);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(62);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.objectlit(nodeArray0);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = new Node(65);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(66);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(68, (-630), 68);
      // Undeclared exception!
      try { 
        IR.throwNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(69);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(70);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = new Node(71);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString(72, "];I=TB", (-4183), 1065);
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = Node.newString(73, "Sc+Cwv9Np_*qbQ`.", 4329, 73);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(74);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = Node.newString(76, "Sc+Cwv9Np_*qbQ`.", 4329, 76);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(77);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = Node.newString(78, "CE2e!$-bh!", 838, 154);
      // Undeclared exception!
      try { 
        IR.throwNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = Node.newString(79, "Sc+Cwv9Np_*qbQ`.", 4329, 79);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(80);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(82, "Sc+Cwv9Np_*Y|QhP", 4329, 82);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = new Node(84);
      // Undeclared exception!
      try { 
        IR.returnNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 471, 2023);
      Node node1 = IR.comma(node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node1, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node[] nodeArray0 = new Node[7];
      Node node0 = new Node(86);
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.newNode(node0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = IR.block();
      Node node1 = new Node(87, node0, 21, 40);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(88, 88, 88);
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = Node.newString(89, "Sc+Cwv9Np_*qbQ`.", 4329, 89);
      Node node1 = IR.eq(node0, node0);
      assertEquals(12, node1.getType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node node0 = IR.labelName("A");
      node0.type = 90;
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = IR.labelName("A");
      node0.type = 91;
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = Node.newString(92, "U*s:Ifk55`]~~;sUH)b");
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(93);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(94);
      Node node1 = IR.pos(node0);
      assertEquals(28, node1.getType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = Node.newString(97, "Sc+Cwv9Np_*qbQ`.", 4329, 97);
      Node node1 = IR.eq(node0, node0);
      assertEquals(12, node1.getType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 2284, 2284);
      Node node1 = IR.hook(node0, node0, node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node node0 = Node.newString(99, "Sc+Cwv9Np_*qbQ`.", 4345, 3634);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = Node.newString(574, "", 101, 574);
      Node node1 = new Node(101, node0, 4095, 42);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(102);
      Node node1 = IR.voidNode(node0);
      assertTrue(node1.isVoid());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = new Node(104);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString(105, ";+C%S(WIgpuG)+x.", 96, 40);
      Node node1 = IR.eq(node0, node0);
      assertEquals(12, node1.getType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(106);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = new Node(107);
      // Undeclared exception!
      try { 
        IR.voidNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString(108, "Sc+Cwv9Np_*qbQ`.", 4345, 3634);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = IR.thisNode();
      Node node1 = new Node(109, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.trueNode();
      Node node1 = IR.switchNode(node0, nodeArray0);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = Node.newString(111, "Sc+Cwv9Np_*qbQ`.", 111, 3634);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.objectlit(nodeArray0);
      Node node1 = new Node(112, node0, node0, node0, 38, 43);
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(113, "", 1149, 115);
      // Undeclared exception!
      try { 
        IR.hook(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = Node.newString(3704, "v&=CPYA$c;QH");
      Node node1 = new Node(114, node0, node0, node0, 37, (-3966));
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = new Node(120, 120, 120);
      // Undeclared exception!
      try { 
        IR.or(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = Node.newString(121, "Sc+Cwv9Np_*qbQ`.", 4329, 121);
      // Undeclared exception!
      try { 
        IR.eq(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node[] nodeArray0 = new Node[19];
      Node node0 = Node.newString("GdWpk|>2xrXoU6uk", 0, 0);
      Node node1 = IR.voidNode(node0);
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }
}
