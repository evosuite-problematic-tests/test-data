/*
 * This file was automatically generated by EvoSuite
 * Sun Jan 06 10:41:00 GMT 2019
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Normalize_ESTest extends Normalize_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Normalize normalize0 = new Normalize(compiler0, true);
      Node node0 = Node.newString("");
      Node node1 = compiler0.parseTestCode("s");
      node0.addChildrenToBack(node1);
      normalize0.process(node1, node1);
      assertFalse(node1.isVarArgs());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      Node node0 = Node.newString(0, "U#%m]xvw\"-okC_lkd");
      Node node1 = new Node(126, node0, node0, 38, 2);
      // Undeclared exception!
      try { 
        normalize0.process(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, true);
      Node node0 = Node.newString(0, "");
      Node node1 = new Node(113, node0, node0, 38, 2);
      // Undeclared exception!
      try { 
        normalize0.process(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, false);
      // Undeclared exception!
      try { 
        normalize_VerifyConstants0.process(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      Node node0 = Node.newString("");
      Node node1 = compiler0.parseTestCode("s");
      node0.addChildrenToBack(node1);
      Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
      normalize_VerifyConstants0.process(node1, node1);
      assertEquals(19, Node.LABEL_PROP);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      Node node1 = compiler0.parseTestCode("Q_");
      node0.addChildrenToBack(node1);
      Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, false);
      normalize_VerifyConstants0.process(node1, node1);
      assertEquals(2, Node.SPECIALCALL_WITH);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      SyntheticAst syntheticAst0 = new SyntheticAst("");
      Node node0 = syntheticAst0.getAstRoot(compiler0);
      Node node1 = compiler0.parseTestCode("Q_");
      node0.addChildrenToBack(node1);
      Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
      normalize_VerifyConstants0.process(node1, node1);
      assertEquals(24, Node.LASTUSE_PROP);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      Node node0 = new Node(122, 122, 122);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      Node node2 = new Node(126, node1, node1, 38, 2);
      // Undeclared exception!
      try { 
        normalize0.process(node2, node2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(113, 113, 113);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      boolean boolean0 = normalize0.shouldTraverse(nodeTraversal0, node1, node0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(114, 114, 114);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      boolean boolean0 = normalize0.shouldTraverse(nodeTraversal0, node1, node0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(115, 115, 115);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(116, 116, 116);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(117, 117, 117);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Normalize constraints violated:
         // LABEL normalization
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(120, 120, 120);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(121, 121, 121);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(125, 125, 125);
      Node node1 = new Node(126, node0, node0, node0, 24, 8);
      boolean boolean0 = normalize0.shouldTraverse(nodeTraversal0, node1, node0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(132, node0, node0, node0, 24, 8);
      boolean boolean0 = normalize0.shouldTraverse(nodeTraversal0, node1, node0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, true);
      NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, normalize0);
      Node node0 = new Node(118, 118, 118);
      Node node1 = new Node(132, node0, node0, node0, 24, 8);
      // Undeclared exception!
      try { 
        normalize0.shouldTraverse(nodeTraversal0, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Empty VAR node.
         //
         verifyException("com.google.javascript.jscomp.Normalize", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      Node node0 = Node.newString(105, "U#%m]xvw\"-okC_lkd", 105, 105);
      node0.addChildrenToBack(node0);
      // Undeclared exception!
      try { 
        normalize0.process(node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Normalize normalize0 = new Normalize((AbstractCompiler) null, false);
      Node node0 = Node.newString(105, "U#%m]xvw\"-okC_lkd", 105, 105);
      Node node1 = new Node(105, node0, node0, 38, 2);
      // Undeclared exception!
      try { 
        normalize0.process(node1, node1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.NodeTraversal", e);
      }
  }
}
