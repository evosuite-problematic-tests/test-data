/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 04 12:41:57 GMT 2019
 */

package com.google.javascript.rhino;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.rhino.ErrorReporter;
import com.google.javascript.rhino.IR;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.JSTypeRegistry;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IR_ESTest extends IR_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Node node0 = new Node(95, 95, 123);
      // Undeclared exception!
      try { 
        IR.doNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Node node0 = IR.nullNode();
      // Undeclared exception!
      try { 
        IR.catchNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Node node0 = IR.breakNode();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.script(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Node node0 = IR.continueNode();
      // Undeclared exception!
      try { 
        IR.returnNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.breakNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = IR.exprResult(node0);
      assertTrue(node1.isExprResult());
      
      Node node2 = IR.block(node1);
      assertEquals(125, node2.getType());
      assertTrue(node0.isNull());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Node node0 = IR.string("");
      Node node1 = IR.sub(node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Node node0 = Node.newString("G[vP^w[vH~");
      Node node1 = IR.regexp(node0);
      assertEquals(47, node1.getType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = IR.add(node0, node0);
      assertEquals(41, node0.getType());
      assertEquals(21, node1.getType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Node node0 = IR.trueNode();
      // Undeclared exception!
      try { 
        IR.label(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      Node node0 = IR.block();
      // Undeclared exception!
      try { 
        IR.tryCatchFinally(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Node node0 = IR.block();
      assertEquals(125, node0.getType());
      
      Node node1 = IR.tryFinally(node0, node0);
      assertTrue(node1.hasOneChild());
      assertEquals(77, node1.getType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      Node node0 = IR.string("%s");
      Node node1 = IR.not(node0);
      Node node2 = IR.add(node1, node1);
      assertEquals(26, node1.getType());
      assertEquals(21, node2.getType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Node node0 = IR.thisNode();
      // Undeclared exception!
      try { 
        IR.function(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Node node0 = new Node(101);
      Node node1 = IR.or(node0, node0);
      assertTrue(node1.isOr());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.paramList((List<Node>) linkedList0);
      // Undeclared exception!
      try { 
        IR.block(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Node node0 = new Node(95, 95, 123);
      Node node1 = IR.neg(node0);
      assertEquals(29, node1.getType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Node node0 = IR.number((-710.7752));
      Node node1 = IR.hook(node0, node0, node0);
      Node node2 = IR.throwNode(node1);
      assertEquals(49, node2.getType());
      assertEquals(98, node1.getType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.continueNode((Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Node node0 = Node.newString(".z.C{J^<~Z_BB", 0, 0);
      // Undeclared exception!
      try { 
        IR.defaultCase(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.regexp((Node) null, (Node) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Node node0 = IR.number((-710.7752));
      // Undeclared exception!
      try { 
        IR.paramList(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.paramList(nodeArray0);
      assertTrue(node0.isParamList());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        IR.paramList(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = Node.newNumber((-1767.459));
      linkedList0.add(node0);
      // Undeclared exception!
      try { 
        IR.paramList((List<Node>) linkedList0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.block(nodeArray0);
      assertEquals(125, node0.getType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Node[] nodeArray0 = new Node[14];
      // Undeclared exception!
      try { 
        IR.block(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.script(nodeArray0);
      assertTrue(node0.isScript());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Node node0 = Node.newString((-1490), " nz", 113, 0);
      // Undeclared exception!
      try { 
        IR.var(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Node node0 = IR.name("tWr _N4-");
      Node node1 = Node.newNumber((double) 16, 35, 32);
      IR.var(node0, node1);
      // Undeclared exception!
      try { 
        IR.var(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Node node0 = new Node(118, 118, 107);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.paramList((List<Node>) linkedList0);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Node node0 = new Node(118, 118, 107);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Node node0 = IR.string("");
      Node node1 = new Node(50, node0, node0, node0, 47, 4095);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[0];
      Node node1 = IR.switchNode(node0, nodeArray0);
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Node node0 = IR.empty();
      Node node1 = new Node(16, node0, node0, node0);
      Node[] nodeArray0 = new Node[3];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      // Undeclared exception!
      try { 
        IR.labelName("");
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Node node0 = IR.labelName("me");
      assertTrue(node0.isLabelName());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Node node0 = IR.continueNode();
      Node[] nodeArray0 = new Node[0];
      Node node1 = IR.call(node0, nodeArray0);
      assertTrue(node1.isCall());
      assertEquals(117, node0.getType());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.arraylit(nodeArray0);
      Node node1 = IR.newNode(node0, nodeArray0);
      // Undeclared exception!
      try { 
        IR.getprop(node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      LinkedList<Node> linkedList0 = new LinkedList<Node>();
      Node node0 = IR.paramList((List<Node>) linkedList0);
      Node[] nodeArray0 = new Node[7];
      // Undeclared exception!
      try { 
        IR.newNode(node0, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Node node0 = new Node(9, 76, 76);
      Node[] nodeArray0 = new Node[22];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.objectlit(nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Node node0 = IR.stringKey("");
      node0.addChildToBack(node0);
      // Undeclared exception!
      try { 
        IR.propdef(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      Node node0 = IR.stringKey("");
      // Undeclared exception!
      try { 
        IR.propdef(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Node[] nodeArray0 = new Node[2];
      // Undeclared exception!
      try { 
        IR.arraylit(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Node node0 = IR.empty();
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Node node0 = IR.empty();
      Node node1 = new Node(38, node0, node0, 54, 3312);
      Node node2 = IR.assign(node1, node1);
      // Undeclared exception!
      try { 
        IR.ifNode(node2, node2);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);
      LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
      Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
      // Undeclared exception!
      try { 
        IR.assign(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Node node0 = IR.returnNode();
      assertTrue(node0.isReturn());
      
      Node node1 = IR.block(node0);
      assertTrue(node1.isBlock());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Node node0 = new Node(108, 108, 108);
      Node node1 = IR.block(node0);
      assertEquals(125, node1.getType());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      Node node0 = IR.continueNode();
      Node node1 = IR.block(node0);
      assertTrue(node1.isBlock());
      assertTrue(node0.isContinue());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Node node0 = new Node(118, 118, 118);
      Node node1 = IR.block(node0);
      assertTrue(node1.isBlock());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Node node0 = IR.empty();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.script(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Node node0 = IR.block();
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node0;
      // Undeclared exception!
      try { 
        IR.script(nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Node node0 = new Node(9, 76, 76);
      Node node1 = IR.comma(node0, node0);
      assertTrue(node1.isComma());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      Node node0 = new Node(11, 76, 76);
      Node node1 = IR.comma(node0, node0);
      assertEquals(85, node1.getType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Node node0 = Node.newString("7wvrbO+:]j9hbNV [+");
      Node node1 = IR.eq(node0, node0);
      Node node2 = IR.pos(node1);
      assertEquals(28, node2.getType());
      assertEquals(12, node1.getType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = new Node(13, node0, node0, node0, node0, 79, 42);
      Node node2 = IR.voidNode(node1);
      assertEquals(44, node0.getType());
      assertTrue(node2.isVoid());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Node node0 = IR.number((-1682.6320721334096));
      Node node1 = new Node(15, node0, node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Node node0 = new Node(17, 17, 107);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Node[] nodeArray0 = new Node[8];
      Node node0 = IR.string("SSu6");
      Node node1 = new Node(19, node0);
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Node node0 = new Node(20, 76, 76);
      Node node1 = IR.comma(node0, node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Node node0 = IR.string("%s");
      Node node1 = IR.add(node0, node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Node node0 = new Node(23, 23, 23);
      // Undeclared exception!
      try { 
        IR.ifNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Node node0 = Node.newString(25, "d(=s)abA6b.dZ7EHF|", (-2601), 84);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node node1 = IR.pos(node0);
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Node node0 = Node.newString("mldO&etigM{S)K0RZhm");
      Node node1 = IR.neg(node0);
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        IR.switchNode(node1, nodeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Node node0 = new Node(31);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = new Node(32, node0, node0, node0);
      Node node2 = IR.voidNode(node1);
      assertTrue(node0.isNull());
      assertTrue(node2.isVoid());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Node node0 = Node.newString(".)4715v>aZbl9_$&]f", 83, 83);
      Node node1 = IR.getprop(node0, node0);
      // Undeclared exception!
      try { 
        IR.caseNode(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Node node0 = Node.newString("enum{", 10, 34);
      node0.type = 34;
      // Undeclared exception!
      try { 
        IR.neg(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Node node0 = IR.name("tWr _N4-");
      Node node1 = IR.getelem(node0, node0);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Node node0 = new Node(36);
      // Undeclared exception!
      try { 
        IR.not(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Node node0 = IR.trueNode();
      Node[] nodeArray0 = new Node[4];
      nodeArray0[0] = node0;
      node0.setType(37);
      // Undeclared exception!
      try { 
        IR.newNode(node0, nodeArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Node node0 = IR.number((-710.7752));
      Node node1 = IR.thisNode();
      // Undeclared exception!
      try { 
        IR.forNode(node1, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Node node0 = Node.newString("[mlT-=`ji:0H:q ");
      Node node1 = IR.sheq(node0, node0);
      // Undeclared exception!
      try { 
        IR.forIn(node1, node0, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Node node0 = new Node(46, 29, 43);
      // Undeclared exception!
      try { 
        IR.forNode(node0, (Node) null, (Node) null, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.rhino.IR", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Node node0 = IR.falseNode();
      Node node1 = new Node(47, node0, node0, node0, node0);
      // Undeclared exception!
      try { 
        IR.sheq(node1, node0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // second new child has existing parent
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Node node0 = IR.string("");
      Node node1 = new Node(48, node0, node0, node0, 32, 4);
      // Undeclared exception!
      try { 
        IR.forNode(node1, node1, node1, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Node node0 = Node.newString(49, "`RCk+\"36EE9u-1=D");
      // Undeclared exception!
      try { 
        IR.and(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Node node0 = Node.newString(51, "", 51, 51);
      // Undeclared exception!
      try { 
        IR.ifNode(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 52, 52);
      Node node1 = new Node(52, node0, node0, node0, 47, 41);
      Node node2 = IR.getelem(node1, node1);
      assertEquals(35, node2.getType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Node node0 = IR.block();
      Node node1 = new Node(53, node0, node0, node0, node0);
      Node[] nodeArray0 = new Node[6];
      nodeArray0[0] = node1;
      // Undeclared exception!
      try { 
        IR.call(node1, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Node node0 = IR.number((-710.7752));
      Node node1 = new Node(54, node0, node0, 50, 39);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Node node0 = new Node(55, 2229, 55);
      Node[] nodeArray0 = new Node[1];
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Node node0 = new Node(56, 56, 56);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Node node0 = new Node(57, 2229, 57);
      Node[] nodeArray0 = new Node[3];
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Node node0 = Node.newNumber(0.0, 58, 58);
      Node node1 = new Node(58, node0, node0, node0, 47, 41);
      // Undeclared exception!
      try { 
        IR.getelem(node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Node node0 = new Node(59, 59, 59);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Node node0 = new Node(61, 61, 61);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Node node0 = new Node(62, 76, 76);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Node node0 = new Node(63);
      Node node1 = IR.pos(node0);
      assertEquals(28, node1.getType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Node node0 = Node.newString(65, "d(=s)abA6b.dZ7EHF|", 65, (-2601));
      // Undeclared exception!
      try { 
        IR.hook(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Node node0 = Node.newString(66, "already specified skipNulls", 76, 1823);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Node node0 = new Node(68, 76, 76);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Node node0 = new Node(69, 69, 69);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Node node0 = new Node(70, 76, 76);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Node node0 = new Node(71);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, (Node) null, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Node node0 = new Node(72, 76, 76);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Node node0 = new Node(73, 73, 73);
      Node[] nodeArray0 = new Node[6];
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Node node0 = new Node(74, 74, 74);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Node node0 = Node.newString(75, "already specified skipNulls", 76, 76);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Node node0 = Node.newString(76, "d(=s)abA6b.dZ7EHF|", (-2601), 84);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      Node node0 = Node.newString(77, "d(=s)abA6b.dZ7EHF|", (-2601), 84);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Node node0 = new Node(78);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Node node0 = new Node(79, 79, 151);
      // Undeclared exception!
      try { 
        IR.not(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Node node0 = new Node(80, 76, 76);
      // Undeclared exception!
      try { 
        IR.comma(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Node node0 = new Node(81, 102, 77);
      // Undeclared exception!
      try { 
        IR.neg(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.objectlit(nodeArray0);
      Node node1 = new Node(82, node0, node0, node0, 82, 46);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Node node0 = new Node(84, 76, 76);
      // Undeclared exception!
      try { 
        IR.ifNode(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Node node0 = new Node(87);
      Node node1 = IR.or(node0, node0);
      assertTrue(node1.isOr());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Node node0 = new Node(88, 88, 123);
      Node node1 = IR.neg(node0);
      assertEquals(29, node1.getType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Node node0 = new Node(89, 76, 76);
      Node node1 = IR.comma(node0, node0);
      assertTrue(node1.isComma());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Node node0 = new Node(90, 76, 76);
      Node node1 = IR.comma(node0, node0);
      assertTrue(node1.isComma());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Node node0 = new Node(91, 91, 107);
      Node node1 = IR.not(node0);
      assertTrue(node1.isNot());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Node[] nodeArray0 = new Node[0];
      Node node0 = IR.objectlit(nodeArray0);
      Node node1 = new Node(92, node0, node0, node0, 92, 46);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node1, node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Node node0 = new Node(93, 93, 93);
      // Undeclared exception!
      try { 
        IR.caseNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Node node0 = new Node(94);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Node node0 = Node.newString(96, "", 17, 96);
      Node node1 = IR.getelem(node0, node0);
      assertEquals(35, node1.getType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Node node0 = Node.newString(97, "", 97, 97);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Node node0 = new Node(99, 154, 79);
      // Undeclared exception!
      try { 
        IR.caseNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Node node0 = IR.name("NoResolvedType");
      Node node1 = IR.or(node0, node0);
      Node node2 = IR.throwNode(node1);
      assertTrue(node2.isThrow());
      assertEquals(100, node1.getType());
      assertTrue(node0.isUnscopedQualifiedName());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Node node0 = Node.newString(102, "");
      Node node1 = IR.sub(node0, node0);
      assertEquals(22, node1.getType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Node node0 = new Node(103, 103, 1925);
      Node node1 = IR.sub(node0, node0);
      assertEquals(22, node1.getType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Node node0 = new Node(104, (-1541), 104);
      Node[] nodeArray0 = new Node[0];
      // Undeclared exception!
      try { 
        IR.switchNode(node0, nodeArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Node node0 = new Node(105);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      Node node0 = new Node(106, 102, 77);
      // Undeclared exception!
      try { 
        IR.neg(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      Node node0 = Node.newString(108, "");
      // Undeclared exception!
      try { 
        IR.sub(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      Node node0 = new Node(109);
      // Undeclared exception!
      try { 
        IR.or(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      Node node0 = Node.newString(111, "", 17, 111);
      // Undeclared exception!
      try { 
        IR.getelem(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      Node node0 = new Node(112, 154, 79);
      // Undeclared exception!
      try { 
        IR.caseNode(node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      Node node0 = new Node(113, 151, 115);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      Node node0 = IR.continueNode();
      node0.setType(114);
      // Undeclared exception!
      try { 
        IR.returnNode(node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      Node node0 = Node.newString(115, "d(=s)abA6b.dZ7EHF|", (-2582), 121);
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      Node node0 = IR.breakNode();
      // Undeclared exception!
      try { 
        IR.forNode(node0, node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      Node node0 = IR.nullNode();
      Node node1 = new Node(120, node0, 37, 41);
      // Undeclared exception!
      try { 
        IR.returnNode(node1);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      Node node0 = Node.newString(121, "", 998, 121);
      // Undeclared exception!
      try { 
        IR.forIn(node0, node0, node0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      Node node0 = Node.newNumber((-1.0));
      Node node1 = IR.voidNode(node0);
      // Undeclared exception!
      try { 
        IR.hook(node0, node0, node1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.common.base.Preconditions", e);
      }
  }
}
