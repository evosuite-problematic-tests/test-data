/*
 * This file was automatically generated by EvoSuite
 * Fri Jan 04 14:52:50 GMT 2019
 */

package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.JSSourceFile;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.UnreachableCodeElimination;
import com.google.javascript.rhino.Node;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UnreachableCodeElimination_ESTest extends UnreachableCodeElimination_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = compiler0.parseSyntheticCode("[)u|}9~EF5ZpykT[0", "[)u|}9~EF5ZpykT[0");
      Node node1 = new Node(4, 1, 43);
      node0.addChildToBack(node1);
      unreachableCodeElimination0.process(node0, node0);
      assertFalse(node0.hasOneChild());
      assertFalse(node0.hasChildren());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MockPrintStream mockPrintStream0 = new MockPrintStream("Qe)=}N");
      Compiler compiler0 = new Compiler(mockPrintStream0);
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = Node.newString(105, "Qe)=}N", 105, (-849));
      unreachableCodeElimination0.visit((NodeTraversal) null, node0, node0);
      assertEquals(0, Node.LABEL_ID_PROP);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = compiler0.parseSyntheticCode("com.google.javascript.jscomp.UnreachableCodeElimination", "com.google.javascript.jscomp.UnreachableCodeElimination");
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      assertEquals(2, Node.POST_FLAG);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, true);
      Node node0 = compiler0.parseSyntheticCode("com.google.javascript.jscomp.UnreachableCodeElimination", "com.google.javascript.jscomp.UnreachableCodeElimination");
      Node node1 = new Node(36, 32, 26);
      node0.addChildToBack(node1);
      unreachableCodeElimination0.process(node0, node0);
      assertFalse(node0.hasMoreThanOneChild());
      assertEquals(1, node0.getChildCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = compiler0.parseTestCode("Type");
      Node node1 = new Node(4, 1, 43);
      node1.addChildAfter(node0, node0);
      node0.addChildToBack(node1);
      unreachableCodeElimination0.process(node0, node0);
      assertEquals(2, node0.getChildCount());
      assertFalse(node0.hasOneChild());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = compiler0.parseSyntheticCode("[)u|}9~EF5ZpykT[0", "[)u|}9~EF5ZpykT[0");
      Node node1 = new Node(4, 1, 43);
      node1.addChildAfter(node0, node0);
      node0.addChildToBack(node1);
      unreachableCodeElimination0.process(node0, node0);
      assertEquals(1, node0.getChildCount());
      assertTrue(node0.hasChildren());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, true);
      Node node0 = new Node(124, 124, 124);
      ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
      unreachableCodeElimination0.curCfg = controlFlowGraph0;
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      assertEquals(10, Node.VARS_PROP);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      ArrayList<JSSourceFile> arrayList0 = new ArrayList<JSSourceFile>();
      PriorityQueue<JSModule> priorityQueue0 = new PriorityQueue<JSModule>();
      Vector<JSModule> vector0 = new Vector<JSModule>(priorityQueue0);
      CompilerOptions compilerOptions0 = new CompilerOptions();
      compiler0.compileModules(arrayList0, vector0, compilerOptions0);
      Node node0 = compiler0.parseInputs();
      ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, false);
      unreachableCodeElimination0.curCfg = controlFlowGraph0;
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);
      // Undeclared exception!
      try { 
        unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.UnreachableCodeElimination", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = new Node(125, 125, 125);
      ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, false);
      unreachableCodeElimination0.curCfg = controlFlowGraph0;
      NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);
      unreachableCodeElimination0.visit(nodeTraversal0, node0, node0);
      assertEquals(17, Node.TYPE_PROP);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = new Node(114, 114, (-3340));
      ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, false);
      unreachableCodeElimination0.curCfg = controlFlowGraph0;
      unreachableCodeElimination0.visit((NodeTraversal) null, node0, node0);
      assertEquals(18, Node.SPECIAL_PROP_PROP);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Compiler compiler0 = new Compiler();
      UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);
      Node node0 = new Node(120, 120, (-3340));
      ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, false);
      unreachableCodeElimination0.curCfg = controlFlowGraph0;
      // Undeclared exception!
      try { 
        unreachableCodeElimination0.visit((NodeTraversal) null, node0, node0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.javascript.jscomp.UnreachableCodeElimination", e);
      }
  }
}
