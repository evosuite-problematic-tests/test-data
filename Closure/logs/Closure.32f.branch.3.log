* EvoSuite 1.0.6
* Going to generate test cases for class: com.google.javascript.jscomp.parsing.JsDocInfoParser
* Starting client
* Connecting to master process on port 19758
* Analyzing classpath: 
  - /tmp/run_evosuite.pl_227771_1546676583/build/classes
  - /tmp/run_evosuite.pl_227771_1546676583/lib/args4j.jar
  - /tmp/run_evosuite.pl_227771_1546676583/lib/guava.jar
  - /tmp/run_evosuite.pl_227771_1546676583/lib/json.jar
  - /tmp/run_evosuite.pl_227771_1546676583/lib/jsr305.jar
  - /tmp/run_evosuite.pl_227771_1546676583/lib/protobuf-java.jar
  - /tmp/run_evosuite.pl_227771_1546676583/build/lib/rhino.jar
  - /tmp/run_evosuite.pl_227771_1546676583/lib/ant.jar
* Finished analyzing classpath
* Generating tests for class com.google.javascript.jscomp.parsing.JsDocInfoParser
* Test criterion:
  - Branch Coverage
* Setting up search algorithm for whole suite generation
* Total number of test goals: 753
* Using seed 4000
* Starting evolution
[MASTER] 00:23:17.864 [logback-2] ERROR TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[MASTER] 00:23:31.820 [logback-1] WARN  TestUsageChecker - class com.google.javascript.rhino.head.ContextFactory$1GlobalSetterImpl looks like an anonymous class, ignoring it (although reflection says false) GlobalSetterImpl
[MASTER] 00:24:12.897 [logback-2] ERROR FunctionalMockStatement - IAE on <public abstract boolean com.google.javascript.rhino.head.ast.NodeVisitor.visit(com.google.javascript.rhino.head.ast.AstNode)> when called with [[]]
[MASTER] 00:24:13.773 [logback-2] ERROR FunctionalMockStatement - Cannot use Mockito on interface java.util.Comparator due to IAE: 
Misplaced or misused argument matcher detected here:

-> at org.evosuite.testcase.fm.MethodDescriptor.executeMatcher(MethodDescriptor.java:245)

You cannot use argument matchers outside of verification or stubbing.
Examples of correct usage of argument matchers:
    when(mock.get(anyInt())).thenReturn(null);
    doThrow(new RuntimeException()).when(mock).someVoidMethod(anyObject());
    verify(mock).someMethod(contains("foo"))

This message may appear after an NullPointerException if the last matcher is returning an object 
like any() but the stubbed method signature expect a primitive argument, in this case,
use primitive alternatives.
    when(mock.get(any())); // bad use, will raise NPE
    when(mock.get(anyInt())); // correct usage use

Also, this error might show up because you use argument matchers with methods that cannot be mocked.
Following methods *cannot* be stubbed/verified: final/private/equals()/hashCode().
Mocking methods declared on non-public parent classes is not supported.

[MASTER] 00:24:56.670 [logback-2] ERROR FunctionalMockStatement - IAE on <public abstract boolean com.google.javascript.rhino.head.ast.NodeVisitor.visit(com.google.javascript.rhino.head.ast.AstNode)> when called with [[]]
* Search finished after 101s and 1091 generations, 478100 statements, best individual has fitness: 527.5738095238096
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 753
* Number of covered goals: 223
* Generated 40 tests with total length 255
* Resulting test suite's coverage: 30%
* Generating assertions
* Resulting test suite's mutation score: 20%
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 18
* Writing JUnit test case 'JsDocInfoParser_ESTest' to evosuite-branch
* Done!

* Computation finished
