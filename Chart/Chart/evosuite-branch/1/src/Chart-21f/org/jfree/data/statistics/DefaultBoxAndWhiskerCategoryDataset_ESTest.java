/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 11:12:42 GMT 2018
 */

package org.jfree.data.statistics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Stack;
import java.util.Vector;
import javax.swing.JLayeredPane;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.jfree.data.KeyedObjects2D;
import org.jfree.data.Range;
import org.jfree.data.statistics.BoxAndWhiskerItem;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.RegularTimePeriod;
import org.jfree.data.time.Second;
import org.jfree.data.time.TimeSeriesDataItem;
import org.jfree.data.xy.DefaultOHLCDataset;
import org.jfree.data.xy.OHLCDataItem;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultBoxAndWhiskerCategoryDataset_ESTest extends DefaultBoxAndWhiskerCategoryDataset_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getColumnIndex((Comparable) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(0L);
      TimeSeriesDataItem timeSeriesDataItem0 = new TimeSeriesDataItem((RegularTimePeriod) fixedMillisecond0, (double) 0L);
      int int0 = defaultBoxAndWhiskerCategoryDataset0.getRowIndex(timeSeriesDataItem0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getRowKey(2566);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 2566, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeLowerBound(false);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(1, 18, 0, 18, 1724, 0);
      Second second0 = new Second(mockDate0);
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getValue((Comparable) second0, (Comparable) mockDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Row key (Tue Jul 01 22:44:00 GMT 1902) not recognised.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getColumnKeys();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getRowKeys();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getValue((-268), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Range range0 = defaultBoxAndWhiskerCategoryDataset0.getRangeBounds(false);
      assertEquals(0.0, range0.getLength(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.getColumnKey((-3031));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      double double0 = defaultBoxAndWhiskerCategoryDataset0.getRangeUpperBound(true);
      assertEquals(Double.NaN, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Object object0 = defaultBoxAndWhiskerCategoryDataset0.clone();
      assertNotSame(object0, defaultBoxAndWhiskerCategoryDataset0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      ArrayList<KeyedObjects2D> arrayList0 = new ArrayList<KeyedObjects2D>();
      // Undeclared exception!
      try { 
        defaultBoxAndWhiskerCategoryDataset0.add((List) arrayList0, (Comparable) null, (Comparable) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'rowKey' argument.
         //
         verifyException("org.jfree.data.KeyedObjects2D", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, (-857.2), (-857.2), 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Double double0 = (Double)defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) double0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertEquals(2, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(22, 0, 22, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, (-857.2), (-857.2), 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      Stack<JLayeredPane> stack0 = new Stack<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(stack0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, (Number) null, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, (-857.2), (-857.2), 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, (Number) null, (Number) null, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, (-857.2), (-857.2), 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Double double0 = (Double)defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(0, 0);
      BoxAndWhiskerItem boxAndWhiskerItem1 = new BoxAndWhiskerItem((-857.2), (double) 0, 114.67, (-19.0), 1.7976931348623157E308, (-857.2), (-19.0), (double) 0, (List) list0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem1, (Comparable) double0, (Comparable) oHLCDataItem0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getColumnCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue(0, 0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Double double0 = (Double)defaultOHLCDataset0.getHigh(0, 0);
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) double0, (Comparable) oHLCDataItem0);
      assertNull(double1);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMeanValue((Comparable) short0, (Comparable) short0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((double) (short)0, 3987.405235776951, (double) (short)0, (double) (short)0, 2.0, 1.5, 2.0, 2.0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      defaultBoxAndWhiskerCategoryDataset0.add((BoxAndWhiskerItem) null, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((int) (short)0, (int) (short)0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((int) (short)0, (int) (short)0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Double double0 = (Double)defaultOHLCDataset0.getHigh(0, 0);
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) mockDate0, (Comparable) double0);
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) mockDate0, (Comparable) oHLCDataItem0);
      assertNull(double1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMedianValue((Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value(0, 0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add((BoxAndWhiskerItem) null, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getQ1Value((Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertNull(number1);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value(0, 0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getQ3Value((Comparable) short0, (Comparable) short0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((int) (short)0, (int) short0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinRegularValue((Comparable) short0, (Comparable) short0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add((BoxAndWhiskerItem) null, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(0, 0);
      assertNull(number1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue(0, 0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((double) (short)0, 3987.405235776951, (double) (short)0, (double) (short)0, 2.0, 1.5, 2.0, 2.0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      defaultBoxAndWhiskerCategoryDataset0.add((BoxAndWhiskerItem) null, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) short0, (Comparable) short0);
      assertNull(number0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxRegularValue((Comparable) short0, (Comparable) short0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((int) (short)0, (int) (short)0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMinOutlier((Comparable) short0, (Comparable) short0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      Short short0 = new Short((short)0);
      LinkedList<BoxAndWhiskerItem> linkedList0 = new LinkedList<BoxAndWhiskerItem>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (Number) short0, (List) linkedList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) short0, (Comparable) short0);
      Number number0 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((int) (short)0, (int) (short)0);
      assertEquals((short)0, number0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Double double0 = (Double)defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem((Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (Number) double0, (List) arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) double0, (Comparable) double0);
      Double double1 = (Double)defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) oHLCDataItem0, (Comparable) double0);
      assertNull(double1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      Number number1 = defaultBoxAndWhiskerCategoryDataset0.getMaxOutlier((Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertEquals(0.0, number1);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0, 0, 0, 0, 0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[10];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh(0, 0);
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>();
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add((BoxAndWhiskerItem) null, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers(0, 0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, 0.0, 0.0, 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add((BoxAndWhiskerItem) null, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(23, 0, 23, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, (-857.2), (-857.2), 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, number0, number0, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      List list0 = defaultBoxAndWhiskerCategoryDataset0.getOutliers((Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, (-857.2), (-857.2), 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      Vector<JLayeredPane> vector0 = new Vector<JLayeredPane>();
      ArrayList<JLayeredPane> arrayList0 = new ArrayList<JLayeredPane>(vector0);
      BoxAndWhiskerItem boxAndWhiskerItem0 = new BoxAndWhiskerItem(number0, number0, number0, number0, number0, number0, (Number) null, (Number) null, arrayList0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      defaultBoxAndWhiskerCategoryDataset0.add(boxAndWhiskerItem0, (Comparable) oHLCDataItem0, (Comparable) oHLCDataItem0);
      assertEquals(1, defaultBoxAndWhiskerCategoryDataset0.getRowCount());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      MockDate mockDate0 = new MockDate(0, 0, 0, 0, 0, 0);
      OHLCDataItem oHLCDataItem0 = new OHLCDataItem(mockDate0, 0.0, 0.0, (-857.2), (-857.2), 0.0);
      OHLCDataItem[] oHLCDataItemArray0 = new OHLCDataItem[7];
      oHLCDataItemArray0[0] = oHLCDataItem0;
      DefaultOHLCDataset defaultOHLCDataset0 = new DefaultOHLCDataset(oHLCDataItem0, oHLCDataItemArray0);
      Number number0 = defaultOHLCDataset0.getHigh((-724), 0);
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals(number0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset1 = new DefaultBoxAndWhiskerCategoryDataset();
      boolean boolean0 = defaultBoxAndWhiskerCategoryDataset0.equals(defaultBoxAndWhiskerCategoryDataset1);
      assertTrue(boolean0);
  }
}
