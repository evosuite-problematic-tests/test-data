/*
 * This file was automatically generated by EvoSuite
 * Mon Dec 24 11:10:44 GMT 2018
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.Paint;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.AreaRenderer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValueMarker_ESTest extends ValueMarker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker((-759.726231));
      double double0 = valueMarker0.getValue();
      assertEquals((-759.726231), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(1669.625);
      valueMarker0.setValue(1669.625);
      assertEquals(1669.625, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      AreaRenderer areaRenderer0 = new AreaRenderer();
      Paint paint0 = areaRenderer0.getItemLabelPaint(52, 52);
      ValueMarker valueMarker0 = new ValueMarker(1.0, paint0, areaRenderer0.DEFAULT_OUTLINE_STROKE);
      boolean boolean0 = valueMarker0.equals(areaRenderer0);
      assertEquals(1.0, valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(5.0E-5);
      ValueMarker valueMarker1 = (ValueMarker)valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertTrue(boolean0);
      assertEquals(5.0E-5, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(1684.895273);
      ValueMarker valueMarker1 = new ValueMarker(0.0);
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertEquals(0.0, valueMarker1.getValue(), 0.01);
      assertFalse(valueMarker1.equals((Object)valueMarker0));
      assertFalse(boolean0);
  }
}
