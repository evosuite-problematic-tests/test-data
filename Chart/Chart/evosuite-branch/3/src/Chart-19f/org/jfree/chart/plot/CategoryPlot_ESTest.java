/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 05 07:08:30 GMT 2019
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.GridBagLayout;
import java.awt.Paint;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Stack;
import javax.swing.JScrollPane;
import javax.swing.text.DefaultCaret;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.LegendItemCollection;
import org.jfree.chart.annotations.CategoryAnnotation;
import org.jfree.chart.annotations.CategoryLineAnnotation;
import org.jfree.chart.annotations.CategoryTextAnnotation;
import org.jfree.chart.axis.Axis;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.AxisSpace;
import org.jfree.chart.axis.CategoryAnchor;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryAxis3D;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.ExtendedCategoryAxis;
import org.jfree.chart.axis.LogAxis;
import org.jfree.chart.axis.ModuloAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.axis.NumberTick;
import org.jfree.chart.axis.PeriodAxis;
import org.jfree.chart.axis.SubCategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.event.RendererChangeEvent;
import org.jfree.chart.plot.CategoryMarker;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.CombinedDomainCategoryPlot;
import org.jfree.chart.plot.CombinedDomainXYPlot;
import org.jfree.chart.plot.CombinedRangeCategoryPlot;
import org.jfree.chart.plot.DatasetRenderingOrder;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.MultiplePiePlot;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotRenderingInfo;
import org.jfree.chart.plot.ValueMarker;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.renderer.category.CategoryStepRenderer;
import org.jfree.chart.renderer.category.GanttRenderer;
import org.jfree.chart.renderer.category.LayeredBarRenderer;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.category.MinMaxCategoryRenderer;
import org.jfree.chart.renderer.category.StackedAreaRenderer;
import org.jfree.chart.renderer.category.StackedBarRenderer3D;
import org.jfree.chart.renderer.category.WaterfallBarRenderer;
import org.jfree.chart.util.Layer;
import org.jfree.chart.util.RectangleInsets;
import org.jfree.chart.util.SortOrder;
import org.jfree.data.Range;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.category.DefaultIntervalCategoryDataset;
import org.jfree.data.gantt.TaskSeriesCollection;
import org.jfree.data.general.DefaultKeyedValues2DDataset;
import org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset;
import org.jfree.data.statistics.DefaultMultiValueCategoryDataset;
import org.jfree.data.time.FixedMillisecond;
import org.jfree.data.time.RegularTimePeriod;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CategoryPlot_ESTest extends CategoryPlot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getIndexOf((CategoryItemRenderer) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDatasetCount();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDrawSharedDomainAxis(true);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(500, 459);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.getLayoutOrigin();
      combinedRangeCategoryPlot0.zoomDomainAxes((-307.91), plotRenderingInfo0, (Point2D) point0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.05);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      AxisLocation axisLocation0 = categoryPlot0.getRangeAxisLocation();
      categoryPlot0.setDomainAxisLocation(500, axisLocation0);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hSHO'z$NC+vEV:&&v>^");
      LogAxis logAxis0 = new LogAxis("hSHO'z$NC+vEV:&&v>^");
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, waterfallBarRenderer0);
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'location' for index 0 not permitted.", logAxis0.DEFAULT_RANGE);
      JFreeChart jFreeChart0 = new JFreeChart("p*>U=1*(*?TfoR", moduloAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 1622);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      // Undeclared exception!
      try { 
        categoryPlot0.calculateDomainAxisSpace(graphics2D0, (Rectangle2D) null, (AxisSpace) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.CategoryAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-98.30275772));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      combinedRangeCategoryPlot0.getRangeCrosshairStroke();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(2350.2);
      combinedDomainCategoryPlot0.addRangeMarker((Marker) valueMarker0);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRangeAxisCount();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      double double0 = combinedRangeCategoryPlot0.getAnchorValue();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeAxisLocation((AxisLocation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      RectangleInsets rectangleInsets0 = combinedDomainCategoryPlot0.getAxisOffset();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(4.0, rectangleInsets0.getLeft(), 0.01);
      assertEquals(4.0, rectangleInsets0.getBottom(), 0.01);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals(4.0, rectangleInsets0.getRight(), 0.01);
      assertEquals(4.0, rectangleInsets0.getTop(), 0.01);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.getDomainMarkers(layer0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDrawSharedDomainAxis();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("TR");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      combinedRangeCategoryPlot0.setFixedDomainAxisSpace((AxisSpace) null);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setFixedRangeAxisSpace((AxisSpace) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      AxisLocation axisLocation0 = combinedDomainCategoryPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setDomainAxisLocation(axisLocation0);
      assertEquals("AxisLocation.TOP_OR_LEFT", axisLocation0.toString());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point point0 = new Point(476, 10);
      categoryPlot0.zoomRangeAxes((double) 1.0F, plotRenderingInfo0, (Point2D) point0);
      assertEquals(10, point0.y);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.05);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      categoryPlot0.setAnchorValue((double) 500);
      assertEquals(500.0, categoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addDomainMarker((CategoryMarker) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'marker' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Layer layer0 = Layer.BACKGROUND;
      Collection collection0 = combinedRangeCategoryPlot0.getRangeMarkers(layer0);
      assertNotNull(collection0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.getDomainAxisCount();
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(combinedDomainCategoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, (double) 1.0F, (double) 1.0F, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)chartRenderingInfo0.getChartArea();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(1.0F);
      combinedDomainCategoryPlot0.drawRangeCrosshair(sunGraphics2D0, rectangle2D_Double0, (PlotOrientation) null, 15, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals((-1), sunGraphics2D0.pixel);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      int int0 = categoryPlot0.getWeight();
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertEquals(0, int0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D(false);
      combinedDomainCategoryPlot0.setRenderer(10, (CategoryItemRenderer) stackedBarRenderer3D0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.getRowRenderingOrder();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      LineAndShapeRenderer lineAndShapeRenderer0 = new LineAndShapeRenderer(true, false);
      combinedRangeCategoryPlot0.setRenderer((CategoryItemRenderer) lineAndShapeRenderer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart("Null 'position' argument.", categoryPlot0);
      ChartPanel chartPanel0 = new ChartPanel(jFreeChart0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Float point2D_Float0 = new Point2D.Float(10, 1.0F);
      combinedDomainCategoryPlot0.zoomDomainAxes(2.0, plotRenderingInfo0, (Point2D) point2D_Float0, false);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Eric Thomas");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.getRangeCrosshairValue();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setFixedLegendItems((LegendItemCollection) null);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      double[][] doubleArray0 = new double[3][9];
      DefaultIntervalCategoryDataset defaultIntervalCategoryDataset0 = new DefaultIntervalCategoryDataset(doubleArray0, doubleArray0);
      combinedRangeCategoryPlot0.setDataset((CategoryDataset) defaultIntervalCategoryDataset0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      Color color0 = (Color)categoryPlot0.getRangeCrosshairPaint();
      assertEquals(0, color0.getRed());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairValue((double) 0.0F);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(0.0, combinedRangeCategoryPlot0.getRangeCrosshairValue(), 0.01);
      assertFalse(combinedRangeCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getPlotType();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      Color color0 = (Color)combinedRangeCategoryPlot0.getDomainGridlinePaint();
      assertEquals(255, color0.getRed());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.zoomDomainAxes((-1960.717638), (-1837.371141), plotRenderingInfo0, (Point2D) null);
      assertEquals(0, plotRenderingInfo0.getSubplotCount());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      boolean boolean0 = categoryPlot0.isRangeCrosshairLockedOnData();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 1.0F, false, 1.0F, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryPlot0.addAnnotation(categoryLineAnnotation0);
      JFreeChart jFreeChart0 = new JFreeChart("", categoryPlot0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      // Undeclared exception!
      try { 
        jFreeChart0.createBufferedImage(2606, 492, 10, chartRenderingInfo0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.annotations.CategoryLineAnnotation", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearAnnotations();
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot((CategoryAxis) null);
      LayeredBarRenderer layeredBarRenderer0 = new LayeredBarRenderer();
      combinedDomainCategoryPlot0.setRenderer((CategoryItemRenderer) layeredBarRenderer0, true);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.getDomainGridlinePosition();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainGridlineStroke();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis(";6QW");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setOrientation((PlotOrientation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'orientation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setAxisOffset(dateAxis0.DEFAULT_AXIS_LABEL_INSETS);
      assertEquals(2.0, DateAxis.DEFAULT_AUTO_RANGE_MINIMUM_SIZE_IN_MILLISECONDS, 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setAxisOffset((RectangleInsets) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'offset' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot1);
      jFreeChart0.createBufferedImage(500, 459);
      assertTrue(categoryPlot1.isRangeCrosshairLockedOnData());
      assertEquals(0, categoryPlot1.getRangeAxisCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CategoryAxis[] categoryAxisArray0 = new CategoryAxis[9];
      combinedDomainCategoryPlot0.setDomainAxes(categoryAxisArray0);
      assertEquals(9, combinedDomainCategoryPlot0.getDomainAxisCount());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("Jonathan Gabbai");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      CategoryAxis categoryAxis0 = new CategoryAxis("(&q~3u%iL6b!m(");
      combinedRangeCategoryPlot0.getDomainAxisIndex(categoryAxis0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Eric Thomas");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.getDomainAxisIndex((CategoryAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'axis' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainAxisEdge(10);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("Null 'paint' argument.");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainAxisLocation((AxisLocation) null, true);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'location' for index 0 not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.clearDomainAxes();
      assertNull(categoryPlot0.getNoDataMessage());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.clearDomainAxes();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedRangeCategoryPlot0.add((CategoryPlot) combinedDomainCategoryPlot0);
      assertEquals(1, combinedDomainCategoryPlot0.getWeight());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      DateAxis dateAxis0 = new DateAxis("");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setRangeAxis(0, (ValueAxis) dateAxis0, true);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2861.09), "");
      categoryPlot0.setRangeAxis(503, (ValueAxis) cyclicNumberAxis0, false);
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      jFreeChart0.createBufferedImage(500, 459);
      assertEquals(504, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueAxis[] valueAxisArray0 = new ValueAxis[4];
      combinedDomainCategoryPlot0.setRangeAxes(valueAxisArray0);
      assertEquals(4, combinedDomainCategoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis((String) null);
      int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(logAxis0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertEquals((-1), int0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.getRangeAxisIndex((ValueAxis) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'axis' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      LogAxis logAxis0 = new LogAxis((String) null);
      combinedDomainCategoryPlot0.setRangeAxis(651, (ValueAxis) logAxis0);
      int int0 = combinedDomainCategoryPlot0.getRangeAxisIndex(logAxis0);
      assertEquals(652, combinedDomainCategoryPlot0.getRangeAxisCount());
      assertEquals(651, int0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("\u0003o#*9H}}`z**vGg%");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot();
      AxisLocation axisLocation0 = combinedDomainXYPlot0.getRangeAxisLocation();
      combinedDomainCategoryPlot0.setRangeAxisLocation(360, axisLocation0);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Eric Thomas");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.clearRangeAxes();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.clearRangeAxes();
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 459);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      categoryPlot0.render(graphics2D0, (Rectangle2D) null, 716, plotRenderingInfo0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      StackedBarRenderer3D stackedBarRenderer3D0 = new StackedBarRenderer3D();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis3D0, (ValueAxis) null, stackedBarRenderer3D0);
      categoryPlot0.setDataset(0, (CategoryDataset) defaultMultiValueCategoryDataset0);
      assertTrue(categoryPlot0.isOutlineVisible());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.setDataset(83, (CategoryDataset) null);
      assertEquals(84, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.05);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      CategoryItemRenderer[] categoryItemRendererArray0 = new CategoryItemRenderer[13];
      categoryPlot0.setRenderers(categoryItemRendererArray0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      categoryPlot0.getRendererForDataset(defaultMultiValueCategoryDataset0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      DatasetRenderingOrder datasetRenderingOrder0 = DatasetRenderingOrder.FORWARD;
      combinedDomainCategoryPlot0.setDatasetRenderingOrder(datasetRenderingOrder0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setDatasetRenderingOrder((DatasetRenderingOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SortOrder sortOrder0 = combinedRangeCategoryPlot0.getColumnRenderingOrder();
      combinedRangeCategoryPlot0.setColumnRenderingOrder(sortOrder0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      DefaultCategoryDataset defaultCategoryDataset0 = new DefaultCategoryDataset();
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("yadNGwn");
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond();
      PeriodAxis periodAxis0 = new PeriodAxis("The renderer has changed and I don't know what to do!", fixedMillisecond0, fixedMillisecond0, fixedMillisecond0.DEFAULT_TIME_ZONE);
      MinMaxCategoryRenderer minMaxCategoryRenderer0 = new MinMaxCategoryRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultCategoryDataset0, subCategoryAxis0, periodAxis0, minMaxCategoryRenderer0);
      // Undeclared exception!
      try { 
        categoryPlot0.setColumnRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      SortOrder sortOrder0 = SortOrder.DESCENDING;
      combinedRangeCategoryPlot0.setRowRenderingOrder(sortOrder0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRowRenderingOrder((SortOrder) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'order' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setDomainGridlinesVisible(false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setDomainGridlinesVisible(true);
      assertTrue(combinedDomainCategoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryAnchor categoryAnchor0 = CategoryAnchor.MIDDLE;
      combinedRangeCategoryPlot0.setDomainGridlinePosition(categoryAnchor0);
      assertEquals(15, combinedRangeCategoryPlot0.getBackgroundImageAlignment());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePosition((CategoryAnchor) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'position' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.0, "Null 'orientation' argument.");
      Stroke stroke0 = cyclicNumberAxis0.getAdvanceLineStroke();
      combinedDomainCategoryPlot0.setDomainGridlineStroke(stroke0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      NumberAxis numberAxis0 = new NumberAxis();
      combinedRangeCategoryPlot0.setDomainGridlinePaint(numberAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertFalse(NumberAxis.DEFAULT_VERTICAL_TICK_LABELS);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setDomainGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      assertFalse(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      combinedDomainCategoryPlot0.setRangeGridlineStroke(multiplePiePlot0.DEFAULT_OUTLINE_STROKE);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(categoryAxis3D0);
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.setRangeGridlineStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("w~_k}!");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeGridlinePaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.handleClick(500, 10, plotRenderingInfo0);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(0);
      assertEquals(10, Plot.MINIMUM_WIDTH_TO_DRAW);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.zoom(1.0F);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 1849.6712);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      RendererChangeEvent rendererChangeEvent0 = new RendererChangeEvent(extendedCategoryAxis0);
      categoryPlot0.rendererChanged(rendererChangeEvent0);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("w~_k}!");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(591L);
      CategoryMarker categoryMarker0 = new CategoryMarker(fixedMillisecond0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.addDomainMarker(500, categoryMarker0, (Layer) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'layer' not permitted.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("w~_k}!");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(591L);
      CategoryMarker categoryMarker0 = new CategoryMarker(fixedMillisecond0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker((-11), categoryMarker0, layer0);
      combinedRangeCategoryPlot0.clearDomainMarkers();
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      BasicStroke basicStroke0 = (BasicStroke)Axis.DEFAULT_AXIS_LINE_STROKE;
      CategoryMarker categoryMarker0 = new CategoryMarker(false, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_PAINT, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_STROKE, combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT, basicStroke0, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addDomainMarker(categoryMarker0, layer0);
      combinedDomainCategoryPlot0.clearDomainMarkers();
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getDomainMarkers(425, (Layer) null);
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("wS_k}!");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      FixedMillisecond fixedMillisecond0 = new FixedMillisecond(591L);
      CategoryMarker categoryMarker0 = new CategoryMarker(fixedMillisecond0);
      Layer layer0 = Layer.BACKGROUND;
      combinedRangeCategoryPlot0.addDomainMarker((-11), categoryMarker0, layer0);
      Collection collection0 = combinedRangeCategoryPlot0.getDomainMarkers((-11), layer0);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertNotNull(collection0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-98.30275772));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      ValueMarker valueMarker0 = new ValueMarker(1.0, combinedRangeCategoryPlot0.DEFAULT_BACKGROUND_PAINT, cyclicNumberAxis0.DEFAULT_TICK_MARK_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, 0.0F);
      Layer layer0 = Layer.FOREGROUND;
      combinedRangeCategoryPlot0.addRangeMarker(81, (Marker) valueMarker0, layer0);
      combinedRangeCategoryPlot0.addRangeMarker(81, (Marker) valueMarker0, layer0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.addRangeMarker((Marker) null, (Layer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis("=3:VAkLmI72pfg+I");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(extendedCategoryAxis0);
      Layer layer0 = Layer.BACKGROUND;
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.addRangeMarker(0, (Marker) null, layer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      ValueMarker valueMarker0 = new ValueMarker(1.0F, combinedDomainCategoryPlot0.DEFAULT_BACKGROUND_PAINT, combinedDomainCategoryPlot0.DEFAULT_CROSSHAIR_STROKE);
      Layer layer0 = Layer.FOREGROUND;
      combinedDomainCategoryPlot0.addRangeMarker(453, (Marker) valueMarker0, layer0);
      combinedDomainCategoryPlot0.clearRangeMarkers();
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.getRangeMarkers(2225, (Layer) null);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(false);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.setRangeCrosshairValue((double) 212, true);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairVisible());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis("Jonathan Gabbai");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairLockedOnData(true);
      assertEquals(0.0, combinedRangeCategoryPlot0.getAnchorValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      SubCategoryAxis subCategoryAxis0 = new SubCategoryAxis("Eric Thomas");
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot(subCategoryAxis0);
      combinedDomainCategoryPlot0.setRangeCrosshairLockedOnData(false);
      assertFalse(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      combinedDomainCategoryPlot0.setRangeCrosshairVisible(true);
      combinedDomainCategoryPlot0.setRangeCrosshairValue(912.67336356, false);
      assertEquals(912.67336356, combinedDomainCategoryPlot0.getRangeCrosshairValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      combinedRangeCategoryPlot0.setRangeCrosshairStroke(dateAxis0.DEFAULT_AXIS_LINE_STROKE);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeCrosshairStroke((Stroke) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'stroke' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DateAxis dateAxis0 = new DateAxis();
      categoryPlot0.setRangeCrosshairPaint(dateAxis0.DEFAULT_AXIS_LINE_PAINT);
      assertEquals(1, categoryPlot0.getDatasetCount());
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.setRangeCrosshairPaint((Paint) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'paint' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      // Undeclared exception!
      try { 
        categoryPlot0.addAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      CategoryTextAnnotation categoryTextAnnotation0 = new CategoryTextAnnotation("TextBlockAnchor.CENTER_RIGHT", true, 0.0F);
      combinedRangeCategoryPlot0.removeAnnotation(categoryTextAnnotation0);
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      // Undeclared exception!
      try { 
        combinedDomainCategoryPlot0.removeAnnotation((CategoryAnnotation) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null 'annotation' argument.
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryLineAnnotation categoryLineAnnotation0 = new CategoryLineAnnotation(1.0F, 1.0F, false, 1.0F, categoryPlot0.DEFAULT_OUTLINE_PAINT, categoryPlot0.DEFAULT_GRIDLINE_STROKE);
      categoryPlot0.addAnnotation(categoryLineAnnotation0);
      boolean boolean0 = categoryPlot0.removeAnnotation(categoryLineAnnotation0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(519.1351236, 519.1351236, 1.0F, 82.15522436792);
      JFreeChart jFreeChart0 = new JFreeChart(combinedRangeCategoryPlot0);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 10, chartRenderingInfo0);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      AxisSpace axisSpace0 = combinedRangeCategoryPlot0.calculateRangeAxisSpace(graphics2D0, rectangle2D_Double0, (AxisSpace) null);
      assertEquals(19.962890625, axisSpace0.getLeft(), 0.01);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      JFreeChart jFreeChart0 = new JFreeChart(categoryPlot0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      jFreeChart0.createBufferedImage(365, 365, (double) 10, (double) 365, chartRenderingInfo0);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      DefaultMultiValueCategoryDataset defaultMultiValueCategoryDataset0 = new DefaultMultiValueCategoryDataset();
      CategoryAxis categoryAxis0 = new CategoryAxis("");
      NumberAxis numberAxis0 = new NumberAxis("");
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultMultiValueCategoryDataset0, categoryAxis0, numberAxis0, stackedAreaRenderer0);
      JFreeChart jFreeChart0 = new JFreeChart("", stackedAreaRenderer0.DEFAULT_VALUE_LABEL_FONT, categoryPlot0, false);
      jFreeChart0.createBufferedImage(27, 3);
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ZoneInfo zoneInfo0 = (ZoneInfo)RegularTimePeriod.DEFAULT_TIME_ZONE;
      DateAxis dateAxis0 = new DateAxis("TextBlockAnchor.CENTER_RIGHT", zoneInfo0);
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(dateAxis0);
      assertTrue(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
      
      combinedRangeCategoryPlot0.setRangeGridlinesVisible(false);
      Rectangle2D.Double rectangle2D_Double0 = new Rectangle2D.Double(1491.0, 0.0, 1602.037109375, 1315.99599296951);
      Stack<NumberTick> stack0 = new Stack<NumberTick>();
      combinedRangeCategoryPlot0.drawRangeGridlines((Graphics2D) null, rectangle2D_Double0, stack0);
      assertFalse(combinedRangeCategoryPlot0.isRangeGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      GanttRenderer ganttRenderer0 = new GanttRenderer();
      Rectangle2D.Double rectangle2D_Double0 = (Rectangle2D.Double)ganttRenderer0.lookupSeriesShape(10);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      MultiplePiePlot multiplePiePlot0 = new MultiplePiePlot();
      JFreeChart jFreeChart0 = multiplePiePlot0.getPieChart();
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(10, 10, chartRenderingInfo0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ArrayList<DefaultCategoryDataset> arrayList0 = new ArrayList<DefaultCategoryDataset>();
      combinedDomainCategoryPlot0.drawRangeGridlines(sunGraphics2D0, rectangle2D_Double0, arrayList0);
      assertTrue(combinedDomainCategoryPlot0.isRangeCrosshairLockedOnData());
      assertEquals(1, combinedDomainCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 1849.6712);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      JFreeChart jFreeChart0 = new JFreeChart((String) null, cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT, categoryPlot0, true);
      jFreeChart0.createBufferedImage(2726, 500);
      assertFalse(categoryPlot0.isDomainGridlinesVisible());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.05);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      BasicStroke basicStroke0 = new BasicStroke(1.0F);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine((Graphics2D) null, defaultCaret0, 0.0F, basicStroke0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CategoryAxis categoryAxis0 = new CategoryAxis();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(0.05, 0.05);
      StackedAreaRenderer stackedAreaRenderer0 = new StackedAreaRenderer(false);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, categoryAxis0, cyclicNumberAxis0, stackedAreaRenderer0);
      BasicStroke basicStroke0 = new BasicStroke(1.0F);
      DefaultCaret defaultCaret0 = new DefaultCaret();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      categoryPlot0.setOrientation(plotOrientation0);
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeLine((Graphics2D) null, defaultCaret0, 0.0F, basicStroke0, cyclicNumberAxis0.DEFAULT_ADVANCE_LINE_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hSHO'z$NC+vEV:&&v>^");
      LogAxis logAxis0 = new LogAxis("hSHO'z$NC+vEV:&&v>^");
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, waterfallBarRenderer0);
      Range range0 = new Range(50000.0, 1.0E11);
      ModuloAxis moduloAxis0 = new ModuloAxis("Null 'location' for index 0 not permitted.", range0);
      JFreeChart jFreeChart0 = new JFreeChart("p*>U=1*(*?TfoR", moduloAxis0.DEFAULT_AXIS_LABEL_FONT, categoryPlot0, true);
      BufferedImage bufferedImage0 = jFreeChart0.createBufferedImage(500, 1622);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      CombinedDomainXYPlot combinedDomainXYPlot0 = new CombinedDomainXYPlot(moduloAxis0);
      PlotOrientation plotOrientation0 = combinedDomainXYPlot0.getOrientation();
      // Undeclared exception!
      try { 
        categoryPlot0.drawRangeCrosshair(graphics2D0, (Rectangle2D) null, plotOrientation0, 50000.0, moduloAxis0, moduloAxis0.DEFAULT_TICK_MARK_STROKE, combinedDomainXYPlot0.DEFAULT_BACKGROUND_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.axis.ModuloAxis", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      JScrollPane jScrollPane0 = new JScrollPane();
      Rectangle rectangle0 = jScrollPane0.getViewportBorderBounds();
      PlotOrientation plotOrientation0 = PlotOrientation.HORIZONTAL;
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(135.0);
      // Undeclared exception!
      try { 
        combinedRangeCategoryPlot0.drawRangeCrosshair((Graphics2D) null, rectangle0, plotOrientation0, 1.0, cyclicNumberAxis0, cyclicNumberAxis0.DEFAULT_AXIS_LINE_STROKE, cyclicNumberAxis0.DEFAULT_AXIS_LABEL_PAINT);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jfree.chart.plot.CategoryPlot", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      categoryPlot0.setDataset(85, (CategoryDataset) defaultBoxAndWhiskerCategoryDataset0);
      DateAxis dateAxis0 = new DateAxis();
      categoryPlot0.setRangeAxis((ValueAxis) dateAxis0);
      assertEquals(86, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("w~_k}!");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      combinedRangeCategoryPlot0.setDataset(2751, (CategoryDataset) defaultKeyedValues2DDataset0);
      CategoryAxis categoryAxis0 = new CategoryAxis("w~_k}!");
      combinedRangeCategoryPlot0.getCategoriesForAxis(categoryAxis0);
      assertEquals(2752, combinedRangeCategoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1618.05679), "");
      categoryPlot0.setRangeAxis(500, (ValueAxis) cyclicNumberAxis0, false);
      TaskSeriesCollection taskSeriesCollection0 = new TaskSeriesCollection();
      categoryPlot0.setDataset(2715, (CategoryDataset) taskSeriesCollection0);
      assertEquals(501, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ExtendedCategoryAxis extendedCategoryAxis0 = new ExtendedCategoryAxis((String) null);
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(2.0F, 2.0F);
      CategoryPlot categoryPlot0 = new CategoryPlot((CategoryDataset) null, extendedCategoryAxis0, cyclicNumberAxis0, (CategoryItemRenderer) null);
      categoryPlot0.getCategories();
      assertTrue(categoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      PeriodAxis periodAxis0 = new PeriodAxis("PROPERTIES");
      CategoryStepRenderer categoryStepRenderer0 = new CategoryStepRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, (CategoryAxis) null, periodAxis0, categoryStepRenderer0);
      categoryPlot0.getCategories();
      assertEquals(Double.NaN, periodAxis0.getUpperBound(), 0.01);
      assertEquals(Double.NaN, periodAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hSHO'z$NC+vEV:&&v>^");
      LogAxis logAxis0 = new LogAxis("hSHO'z$NC+vEV:&&v>^");
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, waterfallBarRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double(15, 2823.946346);
      categoryPlot0.zoomRangeAxes(1.0E7, plotRenderingInfo0, (Point2D) point2D_Double0, false);
      assertFalse(logAxis0.isAutoRange());
      assertEquals((-6254910.013800275), logAxis0.getLowerBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      DefaultBoxAndWhiskerCategoryDataset defaultBoxAndWhiskerCategoryDataset0 = new DefaultBoxAndWhiskerCategoryDataset();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("hSHO'z$NC+vEV:&&v>^");
      LogAxis logAxis0 = new LogAxis("hSHO'z$NC+vEV:&&v>^");
      WaterfallBarRenderer waterfallBarRenderer0 = new WaterfallBarRenderer();
      CategoryPlot categoryPlot0 = new CategoryPlot(defaultBoxAndWhiskerCategoryDataset0, categoryAxis3D0, logAxis0, waterfallBarRenderer0);
      StandardEntityCollection standardEntityCollection0 = new StandardEntityCollection();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo(standardEntityCollection0);
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      Point2D.Double point2D_Double0 = new Point2D.Double(15, 0);
      categoryPlot0.zoomRangeAxes(1.0E7, plotRenderingInfo0, (Point2D) point2D_Double0, true);
      assertFalse(logAxis0.isAutoRange());
      assertEquals(Double.NaN, logAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = chartRenderingInfo0.getPlotInfo();
      categoryPlot0.zoomRangeAxes(2841.212737178152, 2841.212737178152, plotRenderingInfo0, (Point2D) null);
      assertEquals(1.0F, categoryPlot0.getBackgroundAlpha(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      LogAxis logAxis0 = new LogAxis();
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(logAxis0);
      ChartRenderingInfo chartRenderingInfo0 = new ChartRenderingInfo();
      PlotRenderingInfo plotRenderingInfo0 = new PlotRenderingInfo(chartRenderingInfo0);
      GridBagLayout gridBagLayout0 = new GridBagLayout();
      Point point0 = gridBagLayout0.location(500, 10);
      combinedRangeCategoryPlot0.zoomRangeAxes((double) 2.0F, 1367.674, plotRenderingInfo0, (Point2D) point0);
      assertFalse(logAxis0.isAutoRange());
      assertEquals(Double.POSITIVE_INFINITY, logAxis0.getUpperBound(), 0.01);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot();
      combinedRangeCategoryPlot0.setAnchorValue(1250.63845, false);
      assertEquals(1, combinedRangeCategoryPlot0.getDatasetCount());
      assertTrue(combinedRangeCategoryPlot0.isRangeCrosshairLockedOnData());
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      categoryPlot0.equals((Object) null);
      assertEquals(1, categoryPlot0.getDatasetCount());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      categoryPlot1.clearRangeMarkers();
      assertTrue(categoryPlot1.equals((Object)categoryPlot0));
      assertEquals(0, categoryPlot1.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-1618.05679), "");
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      categoryPlot1.setNoDataMessageFont(cyclicNumberAxis0.DEFAULT_TICK_LABEL_FONT);
      categoryPlot1.clearRangeMarkers();
      assertFalse(categoryPlot1.equals((Object)categoryPlot0));
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CategoryPlot categoryPlot1 = (CategoryPlot)categoryPlot0.clone();
      CategoryAxis3D categoryAxis3D0 = new CategoryAxis3D("wF;mCm8}NX2R");
      categoryPlot0.setDomainAxis((CategoryAxis) categoryAxis3D0);
      categoryPlot1.clearRangeMarkers();
      assertEquals(1, categoryPlot0.getDomainAxisCount());
      assertFalse(categoryPlot0.equals((Object)categoryPlot1));
      assertTrue(categoryPlot1.equals((Object)categoryPlot0));
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis(600, (-780.8166004251418));
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(cyclicNumberAxis0);
      boolean boolean0 = categoryPlot0.equals(combinedRangeCategoryPlot0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CombinedDomainCategoryPlot combinedDomainCategoryPlot0 = new CombinedDomainCategoryPlot();
      CombinedDomainCategoryPlot combinedDomainCategoryPlot1 = (CombinedDomainCategoryPlot)combinedDomainCategoryPlot0.clone();
      assertTrue(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
      
      combinedDomainCategoryPlot1.setRangeGridlinePaint(combinedDomainCategoryPlot0.DEFAULT_OUTLINE_PAINT);
      combinedDomainCategoryPlot1.clearRangeMarkers();
      assertFalse(combinedDomainCategoryPlot1.equals((Object)combinedDomainCategoryPlot0));
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      CategoryPlot categoryPlot0 = new CategoryPlot();
      CyclicNumberAxis cyclicNumberAxis0 = new CyclicNumberAxis((-2861.09), "");
      categoryPlot0.setRangeAxis(500, (ValueAxis) cyclicNumberAxis0, false);
      categoryPlot0.clone();
      assertEquals(501, categoryPlot0.getRangeAxisCount());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      NumberAxis numberAxis0 = new NumberAxis("w~_k}!");
      CombinedRangeCategoryPlot combinedRangeCategoryPlot0 = new CombinedRangeCategoryPlot(numberAxis0);
      DefaultKeyedValues2DDataset defaultKeyedValues2DDataset0 = new DefaultKeyedValues2DDataset();
      combinedRangeCategoryPlot0.setDataset(2751, (CategoryDataset) defaultKeyedValues2DDataset0);
      combinedRangeCategoryPlot0.clone();
      assertEquals(2752, combinedRangeCategoryPlot0.getDatasetCount());
  }
}
