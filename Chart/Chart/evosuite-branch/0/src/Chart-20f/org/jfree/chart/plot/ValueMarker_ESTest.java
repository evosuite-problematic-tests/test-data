/*
 * This file was automatically generated by EvoSuite
 * Tue Dec 18 10:15:38 GMT 2018
 */

package org.jfree.chart.plot;

import org.junit.Test;
import static org.junit.Assert.*;
import java.awt.BasicStroke;
import java.awt.Color;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jfree.chart.axis.CyclicNumberAxis;
import org.jfree.chart.plot.ValueMarker;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ValueMarker_ESTest extends ValueMarker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker((-1.0));
      double double0 = valueMarker0.getValue();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Color color0 = Color.GREEN;
      BasicStroke basicStroke0 = (BasicStroke)CyclicNumberAxis.DEFAULT_ADVANCE_LINE_STROKE;
      ValueMarker valueMarker0 = new ValueMarker(1.0, color0, basicStroke0);
      assertEquals(1.0, valueMarker0.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(90.0);
      boolean boolean0 = valueMarker0.equals((Object) null);
      assertEquals(90.0, valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(90.0);
      ValueMarker valueMarker1 = (ValueMarker)valueMarker0.clone();
      boolean boolean0 = valueMarker0.equals(valueMarker1);
      assertTrue(boolean0);
      assertEquals(90.0, valueMarker1.getValue(), 0.01);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ValueMarker valueMarker0 = new ValueMarker(90.0);
      Object object0 = valueMarker0.clone();
      valueMarker0.setValue((-162.847804310076));
      boolean boolean0 = valueMarker0.equals(object0);
      assertEquals((-162.847804310076), valueMarker0.getValue(), 0.01);
      assertFalse(boolean0);
  }
}
